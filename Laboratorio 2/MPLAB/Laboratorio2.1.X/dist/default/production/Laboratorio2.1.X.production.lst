

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 28 23:41:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  0008                     	;# 
   472  0009                     	;# 
   473  000A                     	;# 
   474  000B                     	;# 
   475  000C                     	;# 
   476  000D                     	;# 
   477  000E                     	;# 
   478  000E                     	;# 
   479  000F                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0013                     	;# 
   484  0014                     	;# 
   485  0015                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  001D                     	;# 
   496  001E                     	;# 
   497  001F                     	;# 
   498  0081                     	;# 
   499  0085                     	;# 
   500  0086                     	;# 
   501  0087                     	;# 
   502  0088                     	;# 
   503  0089                     	;# 
   504  008C                     	;# 
   505  008D                     	;# 
   506  008E                     	;# 
   507  008F                     	;# 
   508  0090                     	;# 
   509  0091                     	;# 
   510  0092                     	;# 
   511  0093                     	;# 
   512  0093                     	;# 
   513  0093                     	;# 
   514  0094                     	;# 
   515  0095                     	;# 
   516  0096                     	;# 
   517  0097                     	;# 
   518  0098                     	;# 
   519  0099                     	;# 
   520  009A                     	;# 
   521  009B                     	;# 
   522  009C                     	;# 
   523  009D                     	;# 
   524  009E                     	;# 
   525  009F                     	;# 
   526  0105                     	;# 
   527  0107                     	;# 
   528  0108                     	;# 
   529  0109                     	;# 
   530  010C                     	;# 
   531  010C                     	;# 
   532  010D                     	;# 
   533  010E                     	;# 
   534  010F                     	;# 
   535  0185                     	;# 
   536  0187                     	;# 
   537  0188                     	;# 
   538  0189                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  008F                     	;# 
   586  0090                     	;# 
   587  0091                     	;# 
   588  0092                     	;# 
   589  0093                     	;# 
   590  0093                     	;# 
   591  0093                     	;# 
   592  0094                     	;# 
   593  0095                     	;# 
   594  0096                     	;# 
   595  0097                     	;# 
   596  0098                     	;# 
   597  0099                     	;# 
   598  009A                     	;# 
   599  009B                     	;# 
   600  009C                     	;# 
   601  009D                     	;# 
   602  009E                     	;# 
   603  009F                     	;# 
   604  0105                     	;# 
   605  0107                     	;# 
   606  0108                     	;# 
   607  0109                     	;# 
   608  010C                     	;# 
   609  010C                     	;# 
   610  010D                     	;# 
   611  010E                     	;# 
   612  010F                     	;# 
   613  0185                     	;# 
   614  0187                     	;# 
   615  0188                     	;# 
   616  0189                     	;# 
   617  018C                     	;# 
   618  018D                     	;# 
   619  0000                     	;# 
   620  0001                     	;# 
   621  0002                     	;# 
   622  0003                     	;# 
   623  0004                     	;# 
   624  0005                     	;# 
   625  0006                     	;# 
   626  0007                     	;# 
   627  0008                     	;# 
   628  0009                     	;# 
   629  000A                     	;# 
   630  000B                     	;# 
   631  000C                     	;# 
   632  000D                     	;# 
   633  000E                     	;# 
   634  000E                     	;# 
   635  000F                     	;# 
   636  0010                     	;# 
   637  0011                     	;# 
   638  0012                     	;# 
   639  0013                     	;# 
   640  0014                     	;# 
   641  0015                     	;# 
   642  0015                     	;# 
   643  0016                     	;# 
   644  0017                     	;# 
   645  0018                     	;# 
   646  0019                     	;# 
   647  001A                     	;# 
   648  001B                     	;# 
   649  001B                     	;# 
   650  001C                     	;# 
   651  001D                     	;# 
   652  001E                     	;# 
   653  001F                     	;# 
   654  0081                     	;# 
   655  0085                     	;# 
   656  0086                     	;# 
   657  0087                     	;# 
   658  0088                     	;# 
   659  0089                     	;# 
   660  008C                     	;# 
   661  008D                     	;# 
   662  008E                     	;# 
   663  008F                     	;# 
   664  0090                     	;# 
   665  0091                     	;# 
   666  0092                     	;# 
   667  0093                     	;# 
   668  0093                     	;# 
   669  0093                     	;# 
   670  0094                     	;# 
   671  0095                     	;# 
   672  0096                     	;# 
   673  0097                     	;# 
   674  0098                     	;# 
   675  0099                     	;# 
   676  009A                     	;# 
   677  009B                     	;# 
   678  009C                     	;# 
   679  009D                     	;# 
   680  009E                     	;# 
   681  009F                     	;# 
   682  0105                     	;# 
   683  0107                     	;# 
   684  0108                     	;# 
   685  0109                     	;# 
   686  010C                     	;# 
   687  010C                     	;# 
   688  010D                     	;# 
   689  010E                     	;# 
   690  010F                     	;# 
   691  0185                     	;# 
   692  0187                     	;# 
   693  0188                     	;# 
   694  0189                     	;# 
   695  018C                     	;# 
   696  018D                     	;# 
   697                           
   698                           	psect	idataBANK1
   699  07C9                     __pidataBANK1:
   700                           
   701                           ;initializer for BCH_DISPLAY@F1449
   702  07C9  343F               	retlw	63
   703  07CA  3400               	retlw	0
   704  07CB  3406               	retlw	6
   705  07CC  3400               	retlw	0
   706  07CD  345B               	retlw	91
   707  07CE  3400               	retlw	0
   708  07CF  344F               	retlw	79
   709  07D0  3400               	retlw	0
   710  07D1  3466               	retlw	102
   711  07D2  3400               	retlw	0
   712  07D3  346D               	retlw	109
   713  07D4  3400               	retlw	0
   714  07D5  347D               	retlw	125
   715  07D6  3400               	retlw	0
   716  07D7  3407               	retlw	7
   717  07D8  3400               	retlw	0
   718  07D9  347F               	retlw	127
   719  07DA  3400               	retlw	0
   720  07DB  3467               	retlw	103
   721  07DC  3400               	retlw	0
   722  07DD  3477               	retlw	119
   723  07DE  3400               	retlw	0
   724  07DF  347C               	retlw	124
   725  07E0  3400               	retlw	0
   726  07E1  3458               	retlw	88
   727  07E2  3400               	retlw	0
   728  07E3  345E               	retlw	94
   729  07E4  3400               	retlw	0
   730  07E5  3479               	retlw	121
   731  07E6  3400               	retlw	0
   732  07E7  3471               	retlw	113
   733  07E8  3400               	retlw	0
   734                           
   735                           ;initializer for BCD_DISPLAY@F1449
   736  07E9  343F               	retlw	63
   737  07EA  3400               	retlw	0
   738  07EB  3406               	retlw	6
   739  07EC  3400               	retlw	0
   740  07ED  345B               	retlw	91
   741  07EE  3400               	retlw	0
   742  07EF  344F               	retlw	79
   743  07F0  3400               	retlw	0
   744  07F1  3466               	retlw	102
   745  07F2  3400               	retlw	0
   746  07F3  346D               	retlw	109
   747  07F4  3400               	retlw	0
   748  07F5  347D               	retlw	125
   749  07F6  3400               	retlw	0
   750  07F7  3478               	retlw	120
   751  07F8  3400               	retlw	0
   752  07F9  347F               	retlw	127
   753  07FA  3400               	retlw	0
   754  07FB  3467               	retlw	103
   755  07FC  3400               	retlw	0
   756                           
   757                           	psect	nvCOMMON
   758  007B                     __pnvCOMMON:
   759  007B                     _Banderas:
   760  007B                     	ds	1
   761  0019                     _TXREG	set	25
   762  001E                     _ADRESH	set	30
   763  0010                     _T1CONbits	set	16
   764  0018                     _RCSTAbits	set	24
   765  000B                     _INTCONbits	set	11
   766  0009                     _PORTE	set	9
   767  0008                     _PORTD	set	8
   768  0005                     _PORTA	set	5
   769  0006                     _PORTB	set	6
   770  001F                     _ADCON0bits	set	31
   771  000E                     _TMR1L	set	14
   772  000F                     _TMR1H	set	15
   773  000C                     _PIR1bits	set	12
   774  001A                     _RCREG	set	26
   775  0049                     _RE1	set	73
   776  0048                     _RE0	set	72
   777  0047                     _RD7	set	71
   778  0046                     _RD6	set	70
   779  0045                     _RD5	set	69
   780  0044                     _RD4	set	68
   781  0043                     _RD3	set	67
   782  0042                     _RD2	set	66
   783  0041                     _RD1	set	65
   784  0040                     _RD0	set	64
   785  0064                     _TXIF	set	100
   786  0066                     _ADIF	set	102
   787  0065                     _RCIF	set	101
   788  009F                     _ADCON1bits	set	159
   789  0098                     _TXSTAbits	set	152
   790  0099                     _SPBRG	set	153
   791  009A                     _SPBRGH	set	154
   792  008C                     _PIE1bits	set	140
   793  0089                     _TRISE	set	137
   794  0088                     _TRISD	set	136
   795  0086                     _TRISB	set	134
   796  0085                     _TRISA	set	133
   797  008F                     _OSCCONbits	set	143
   798  04FC                     _VCFG0	set	1276
   799  04FD                     _VCFG1	set	1277
   800  04C2                     _BRGH	set	1218
   801  0189                     _ANSELH	set	393
   802  0188                     _ANSEL	set	392
   803  0C3B                     _BRG16	set	3131
   804                           
   805                           	psect	strings
   806  0800                     __pstrings:
   807  0800                     stringtab:
   808  0800                     __stringtab:
   809  0800                     stringcode:	
   810                           ;	String table - string pointers are 1 byte each
   811                           
   812  0800                     stringdir:
   813  0800  3008               	movlw	high stringdir
   814  0801  008A               	movwf	10
   815  0802  0804               	movf	4,w
   816  0803  0A84               	incf	4,f
   817  0804  0782               	addwf	2,f
   818  0805                     __stringbase:
   819  0805  3400               	retlw	0
   820  0806                     __end_of__stringtab:
   821  0806                     STR_1:
   822  0806  3420               	retlw	32	;' '
   823  0807  3453               	retlw	83	;'S'
   824  0808  3431               	retlw	49	;'1'
   825  0809  343A               	retlw	58	;':'
   826  080A  3420               	retlw	32	;' '
   827  080B  3420               	retlw	32	;' '
   828  080C  3420               	retlw	32	;' '
   829  080D  3453               	retlw	83	;'S'
   830  080E  3432               	retlw	50	;'2'
   831  080F  343A               	retlw	58	;':'
   832  0810  3420               	retlw	32	;' '
   833  0811  3420               	retlw	32	;' '
   834  0812  3420               	retlw	32	;' '
   835  0813  3453               	retlw	83	;'S'
   836  0814  3433               	retlw	51	;'3'
   837  0815  343A               	retlw	58	;':'
   838  0816  3400               	retlw	0
   839  0817                     STR_3:
   840  0817  3420               	retlw	32	;' '
   841  0818  3420               	retlw	32	;' '
   842  0819  3453               	retlw	83	;'S'
   843  081A  3445               	retlw	69	;'E'
   844  081B  344E               	retlw	78	;'N'
   845  081C  3453               	retlw	83	;'S'
   846  081D  344F               	retlw	79	;'O'
   847  081E  3452               	retlw	82	;'R'
   848  081F  3420               	retlw	32	;' '
   849  0820  3432               	retlw	50	;'2'
   850  0821  343A               	retlw	58	;':'
   851  0822  3420               	retlw	32	;' '
   852  0823  3400               	retlw	0
   853  0824                     STR_2:
   854  0824  3453               	retlw	83	;'S'
   855  0825  3445               	retlw	69	;'E'
   856  0826  344E               	retlw	78	;'N'
   857  0827  3453               	retlw	83	;'S'
   858  0828  344F               	retlw	79	;'O'
   859  0829  3452               	retlw	82	;'R'
   860  082A  3420               	retlw	32	;' '
   861  082B  3431               	retlw	49	;'1'
   862  082C  343A               	retlw	58	;':'
   863  082D  3420               	retlw	32	;' '
   864  082E  3400               	retlw	0
   865  082F                     STR_5:
   866  082F  340A               	retlw	10
   867  0830  3400               	retlw	0
   868  0831                     STR_4:
   869  0831  340D               	retlw	13
   870  0832  3400               	retlw	0
   871                           
   872                           	psect	cinit
   873  0011                     start_initialization:	
   874                           ; #config settings
   875                           
   876  0011                     __initialization:
   877                           
   878                           ; Initialize objects allocated to BANK1
   879  0011  1383               	bcf	3,7	;select IRP bank0
   880  0012  30D4               	movlw	low (__pdataBANK1+52)
   881  0013  00FD               	movwf	btemp+-1
   882  0014  3007               	movlw	high __pidataBANK1
   883  0015  00FE               	movwf	btemp
   884  0016  30C9               	movlw	low __pidataBANK1
   885  0017  00FF               	movwf	btemp+1
   886  0018  30A0               	movlw	low __pdataBANK1
   887  0019  0084               	movwf	4
   888  001A  120A  158A  2458  120A  118A  	fcall	init_ram0
   889                           
   890                           ; Clear objects allocated to BANK0
   891  001F  01D7               	clrf	__pbssBANK0& (0+127)
   892  0020  01D8               	clrf	(__pbssBANK0+1)& (0+127)
   893  0021  01D9               	clrf	(__pbssBANK0+2)& (0+127)
   894  0022  01DA               	clrf	(__pbssBANK0+3)& (0+127)
   895  0023  01DB               	clrf	(__pbssBANK0+4)& (0+127)
   896  0024  01DC               	clrf	(__pbssBANK0+5)& (0+127)
   897  0025  01DD               	clrf	(__pbssBANK0+6)& (0+127)
   898  0026  01DE               	clrf	(__pbssBANK0+7)& (0+127)
   899  0027  01DF               	clrf	(__pbssBANK0+8)& (0+127)
   900  0028  01E0               	clrf	(__pbssBANK0+9)& (0+127)
   901  0029  01E1               	clrf	(__pbssBANK0+10)& (0+127)
   902                           
   903                           ; Clear objects allocated to COMMON
   904  002A  01FC               	clrf	__pbssCOMMON& (0+127)
   905  002B                     end_of_initialization:	
   906                           ;End of C runtime variable initialization code
   907                           
   908  002B                     __end_of__initialization:
   909  002B  0183               	clrf	3
   910  002C  120A  118A  2B90   	ljmp	_main	;jump to C main() function
   911                           
   912                           	psect	bssCOMMON
   913  007C                     __pbssCOMMON:
   914  007C                     _mandar_datos:
   915  007C                     	ds	1
   916                           
   917                           	psect	bssBANK0
   918  0057                     __pbssBANK0:
   919  0057                     _dato3:
   920  0057                     	ds	2
   921  0059                     _dato2:
   922  0059                     	ds	2
   923  005B                     _dato1:
   924  005B                     	ds	2
   925  005D                     _ADRESH_CANAL2:
   926  005D                     	ds	2
   927  005F                     _ADRESH_CANAL1:
   928  005F                     	ds	2
   929  0061                     _Entrada:
   930  0061                     	ds	1
   931                           
   932                           	psect	dataBANK1
   933  00A0                     __pdataBANK1:
   934  00A0                     BCH_DISPLAY@F1449:
   935  00A0                     	ds	32
   936  00C0                     BCD_DISPLAY@F1449:
   937  00C0                     	ds	20
   938                           
   939                           	psect	inittext
   940  0C54                     init_fetch0:	
   941                           ;	Called with low address in FSR and high address in W
   942                           
   943  0C54  087E               	movf	btemp,w
   944  0C55  008A               	movwf	10
   945  0C56  087F               	movf	btemp+1,w
   946  0C57  0082               	movwf	2
   947  0C58                     init_ram0:	
   948                           ;Called with:
   949                           ;	high address of idata address in btemp 
   950                           ;	low address of idata address in btemp+1 
   951                           ;	low address of data in FSR
   952                           ;	high address + 1 of data in btemp-1
   953                           
   954  0C58  120A  158A  2454  120A  158A  	fcall	init_fetch0
   955  0C5D  0080               	movwf	0
   956  0C5E  0A84               	incf	4,f
   957  0C5F  0804               	movf	4,w
   958  0C60  067D               	xorwf	btemp+-1,w
   959  0C61  1903               	btfsc	3,2
   960  0C62  3400               	retlw	0
   961  0C63  0AFF               	incf	btemp+1,f
   962  0C64  1903               	btfsc	3,2
   963  0C65  0AFE               	incf	btemp,f
   964  0C66  2C58               	goto	init_ram0
   965                           
   966                           	psect	cstackCOMMON
   967  0070                     __pcstackCOMMON:
   968  0070                     ?_setup:
   969  0070                     ?_Lcd_Init:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ?_Lcd_Cmd:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ?_Lcd_Write_String:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_print:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_enviar_letra:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?_Lcd_Write_Char:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ?_isr:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     ?_main:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0070                     ?_Lcd_Port:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0070                     ?_ADC:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0070                     ADC@channel:	
  1000                           ; 2 bytes @ 0x0
  1001                           
  1002                           
  1003                           ; 2 bytes @ 0x0
  1004  0070                     	ds	2
  1005  0072                     ??_ADC:
  1006                           
  1007                           ; 1 bytes @ 0x2
  1008  0072                     	ds	2
  1009  0074                     ADC@salida:
  1010                           
  1011                           ; 2 bytes @ 0x4
  1012  0074                     	ds	2
  1013  0076                     ??_isr:
  1014                           
  1015                           ; 1 bytes @ 0x6
  1016  0076                     	ds	5
  1017                           
  1018                           	psect	cstackBANK0
  1019  0020                     __pcstackBANK0:
  1020  0020                     ??_setup:
  1021  0020                     ??_print:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0020                     ??_enviar_letra:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0020                     ??_Lcd_Port:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0020                     ?__Umul8_16:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033  0020                     ?___awdiv:	
  1034                           ; 2 bytes @ 0x0
  1035                           
  1036  0020                     ?___awmod:	
  1037                           ; 2 bytes @ 0x0
  1038                           
  1039  0020                     ?___xxtofl:	
  1040                           ; 2 bytes @ 0x0
  1041                           
  1042  0020                     enviar_letra@letra:	
  1043                           ; 4 bytes @ 0x0
  1044                           
  1045  0020                     Lcd_Port@a:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0020                     __Umul8_16@multiplicand:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051  0020                     ___awdiv@divisor:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054  0020                     ___awmod@divisor:	
  1055                           ; 2 bytes @ 0x0
  1056                           
  1057  0020                     ___xxtofl@val:	
  1058                           ; 2 bytes @ 0x0
  1059                           
  1060                           
  1061                           ; 4 bytes @ 0x0
  1062  0020                     	ds	1
  1063  0021                     ??_Lcd_Cmd:
  1064  0021                     ??_Lcd_Write_Char:	
  1065                           ; 1 bytes @ 0x1
  1066                           
  1067  0021                     print@palabra:	
  1068                           ; 1 bytes @ 0x1
  1069                           
  1070                           
  1071                           ; 1 bytes @ 0x1
  1072  0021                     	ds	1
  1073  0022                     ??__Umul8_16:
  1074  0022                     Lcd_Cmd@a:	
  1075                           ; 1 bytes @ 0x2
  1076                           
  1077  0022                     Lcd_Write_Char@a:	
  1078                           ; 1 bytes @ 0x2
  1079                           
  1080  0022                     ___awdiv@dividend:	
  1081                           ; 1 bytes @ 0x2
  1082                           
  1083  0022                     ___awmod@dividend:	
  1084                           ; 2 bytes @ 0x2
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0x2
  1088  0022                     	ds	1
  1089  0023                     ??_Lcd_Init:
  1090  0023                     ?_Lcd_Set_Cursor:	
  1091                           ; 1 bytes @ 0x3
  1092                           
  1093  0023                     Lcd_Set_Cursor@b:	
  1094                           ; 1 bytes @ 0x3
  1095                           
  1096  0023                     Lcd_Write_Char@y:	
  1097                           ; 1 bytes @ 0x3
  1098                           
  1099                           
  1100                           ; 1 bytes @ 0x3
  1101  0023                     	ds	1
  1102  0024                     ??_Lcd_Set_Cursor:
  1103  0024                     ??_Lcd_Write_String:	
  1104                           ; 1 bytes @ 0x4
  1105                           
  1106  0024                     ??___awdiv:	
  1107                           ; 1 bytes @ 0x4
  1108                           
  1109  0024                     ??___awmod:	
  1110                           ; 1 bytes @ 0x4
  1111                           
  1112  0024                     ??___xxtofl:	
  1113                           ; 1 bytes @ 0x4
  1114                           
  1115  0024                     Lcd_Write_String@i:	
  1116                           ; 1 bytes @ 0x4
  1117                           
  1118  0024                     __Umul8_16@product:	
  1119                           ; 2 bytes @ 0x4
  1120                           
  1121                           
  1122                           ; 2 bytes @ 0x4
  1123  0024                     	ds	1
  1124  0025                     Lcd_Set_Cursor@a:
  1125  0025                     ___awdiv@counter:	
  1126                           ; 1 bytes @ 0x5
  1127                           
  1128  0025                     ___awmod@counter:	
  1129                           ; 1 bytes @ 0x5
  1130                           
  1131                           
  1132                           ; 1 bytes @ 0x5
  1133  0025                     	ds	1
  1134  0026                     Lcd_Set_Cursor@temp:
  1135  0026                     Lcd_Write_String@a:	
  1136                           ; 1 bytes @ 0x6
  1137                           
  1138  0026                     ___awdiv@sign:	
  1139                           ; 1 bytes @ 0x6
  1140                           
  1141  0026                     ___awmod@sign:	
  1142                           ; 1 bytes @ 0x6
  1143                           
  1144  0026                     __Umul8_16@word_mpld:	
  1145                           ; 1 bytes @ 0x6
  1146                           
  1147                           
  1148                           ; 2 bytes @ 0x6
  1149  0026                     	ds	1
  1150  0027                     ?_BTD_UNIDAD:
  1151  0027                     BTD_UNIDAD@valor2:	
  1152                           ; 2 bytes @ 0x7
  1153                           
  1154  0027                     ___awdiv@quotient:	
  1155                           ; 2 bytes @ 0x7
  1156                           
  1157                           
  1158                           ; 2 bytes @ 0x7
  1159  0027                     	ds	1
  1160  0028                     __Umul8_16@multiplier:
  1161  0028                     ___xxtofl@sign:	
  1162                           ; 1 bytes @ 0x8
  1163                           
  1164                           
  1165                           ; 1 bytes @ 0x8
  1166  0028                     	ds	1
  1167  0029                     ??_BTD_UNIDAD:
  1168  0029                     ?_BTD_DECENA:	
  1169                           ; 1 bytes @ 0x9
  1170                           
  1171  0029                     ___xxtofl@exp:	
  1172                           ; 2 bytes @ 0x9
  1173                           
  1174  0029                     BTD_DECENA@valor1:	
  1175                           ; 1 bytes @ 0x9
  1176                           
  1177  0029                     BTD_UNIDAD@temporal2:	
  1178                           ; 2 bytes @ 0x9
  1179                           
  1180                           
  1181                           ; 2 bytes @ 0x9
  1182  0029                     	ds	1
  1183  002A                     ___xxtofl@arg:
  1184                           
  1185                           ; 4 bytes @ 0xA
  1186  002A                     	ds	1
  1187  002B                     ??_BTD_DECENA:
  1188  002B                     BTD_DECENA@temporal1:	
  1189                           ; 1 bytes @ 0xB
  1190                           
  1191  002B                     BTD_UNIDAD@salida2:	
  1192                           ; 2 bytes @ 0xB
  1193                           
  1194                           
  1195                           ; 2 bytes @ 0xB
  1196  002B                     	ds	2
  1197  002D                     BTD_DECENA@salida1:
  1198                           
  1199                           ; 2 bytes @ 0xD
  1200  002D                     	ds	1
  1201  002E                     ?___flmul:
  1202  002E                     ___flmul@b:	
  1203                           ; 4 bytes @ 0xE
  1204                           
  1205                           
  1206                           ; 4 bytes @ 0xE
  1207  002E                     	ds	1
  1208  002F                     ?_int_string:
  1209  002F                     int_string@valor:	
  1210                           ; 2 bytes @ 0xF
  1211                           
  1212                           
  1213                           ; 2 bytes @ 0xF
  1214  002F                     	ds	2
  1215  0031                     ??_int_string:
  1216                           
  1217                           ; 1 bytes @ 0x11
  1218  0031                     	ds	1
  1219  0032                     ___flmul@a:
  1220                           
  1221                           ; 4 bytes @ 0x12
  1222  0032                     	ds	4
  1223  0036                     ??___flmul:
  1224                           
  1225                           ; 1 bytes @ 0x16
  1226  0036                     	ds	5
  1227  003B                     ___flmul@sign:
  1228                           
  1229                           ; 1 bytes @ 0x1B
  1230  003B                     	ds	1
  1231  003C                     ___flmul@grs:
  1232                           
  1233                           ; 4 bytes @ 0x1C
  1234  003C                     	ds	4
  1235  0040                     ___flmul@aexp:
  1236                           
  1237                           ; 1 bytes @ 0x20
  1238  0040                     	ds	1
  1239  0041                     ___flmul@bexp:
  1240                           
  1241                           ; 1 bytes @ 0x21
  1242  0041                     	ds	1
  1243  0042                     ___flmul@prod:
  1244                           
  1245                           ; 4 bytes @ 0x22
  1246  0042                     	ds	4
  1247  0046                     ___flmul@temp:
  1248                           
  1249                           ; 2 bytes @ 0x26
  1250  0046                     	ds	2
  1251  0048                     ?___fltol:
  1252  0048                     ___fltol@f1:	
  1253                           ; 4 bytes @ 0x28
  1254                           
  1255                           
  1256                           ; 4 bytes @ 0x28
  1257  0048                     	ds	4
  1258  004C                     ??___fltol:
  1259                           
  1260                           ; 1 bytes @ 0x2C
  1261  004C                     	ds	5
  1262  0051                     ___fltol@sign1:
  1263                           
  1264                           ; 1 bytes @ 0x31
  1265  0051                     	ds	1
  1266  0052                     ___fltol@exp1:
  1267                           
  1268                           ; 1 bytes @ 0x32
  1269  0052                     	ds	1
  1270  0053                     ??_main:
  1271                           
  1272                           ; 1 bytes @ 0x33
  1273  0053                     	ds	4
  1274                           
  1275                           	psect	maintext
  1276  0390                     __pmaintext:	
  1277 ;;
  1278 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1279 ;;
  1280 ;; *************** function _main *****************
  1281 ;; Defined at:
  1282 ;;		line 82 in file "main.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : B00/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0
  1298 ;;      Temps:          0       4       0       0       0
  1299 ;;      Totals:         0       4       0       0       0
  1300 ;;Total ram usage:        4 bytes
  1301 ;; Hardware stack levels required when called:    5
  1302 ;; This function calls:
  1303 ;;		_BTD_DECENA
  1304 ;;		_BTD_UNIDAD
  1305 ;;		_Lcd_Cmd
  1306 ;;		_Lcd_Init
  1307 ;;		_Lcd_Set_Cursor
  1308 ;;		_Lcd_Write_Char
  1309 ;;		_Lcd_Write_String
  1310 ;;		___flmul
  1311 ;;		___fltol
  1312 ;;		___xxtofl
  1313 ;;		_enviar_letra
  1314 ;;		_int_string
  1315 ;;		_print
  1316 ;;		_setup
  1317 ;; This function is called by:
  1318 ;;		Startup code after reset
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           
  1323                           ;psect for function _main
  1324  0390                     _main:
  1325  0390                     l2190:	
  1326                           ;incstack = 0
  1327                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1328                           
  1329                           
  1330                           ;main.c: 84: setup();
  1331  0390  120A  158A  25E2  120A  118A  	fcall	_setup
  1332  0395                     l2192:
  1333                           
  1334                           ;main.c: 85: Banderas = 1;
  1335  0395  01FB               	clrf	_Banderas
  1336  0396  0AFB               	incf	_Banderas,f
  1337                           
  1338                           ;main.c: 86: Lcd_Init();
  1339  0397  120A  158A  262D  120A  118A  	fcall	_Lcd_Init
  1340                           
  1341                           ;main.c: 87: Lcd_Cmd(0x0f);
  1342  039C  300F               	movlw	15
  1343  039D  120A  158A  247E  120A  118A  	fcall	_Lcd_Cmd
  1344                           
  1345                           ;main.c: 88: Lcd_Set_Cursor(1,1);
  1346  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  1347  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  1348  03A4  01A3               	clrf	Lcd_Set_Cursor@b
  1349  03A5  0AA3               	incf	Lcd_Set_Cursor@b,f
  1350  03A6  3001               	movlw	1
  1351  03A7  120A  158A  24D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1352  03AC                     l2194:
  1353                           
  1354                           ;main.c: 89: Lcd_Write_String(" S1:   S2:   S3:");
  1355  03AC  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1356  03AD  120A  158A  24FA  120A  118A  	fcall	_Lcd_Write_String
  1357  03B2                     l2196:
  1358                           
  1359                           ;main.c: 91: {;main.c: 92:     ADCON0bits.GO_DONE = 1;
  1360  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1361  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1362  03B4  149F               	bsf	31,1	;volatile
  1363  03B5                     l2198:
  1364                           
  1365                           ;main.c: 94:     if(Entrada == '+'){
  1366  03B5  302B               	movlw	43
  1367  03B6  0661               	xorwf	_Entrada,w
  1368  03B7  1D03               	btfss	3,2
  1369  03B8  2BBA               	goto	u2101
  1370  03B9  2BBB               	goto	u2100
  1371  03BA                     u2101:
  1372  03BA  2BC1               	goto	l2204
  1373  03BB                     u2100:
  1374  03BB                     l2200:
  1375  03BB  3001               	movlw	1	;# 
  1376  03BC  0786               	addwf	6,f	;# 
  1377  03BD                     l2202:
  1378                           
  1379                           ;main.c: 97:         Entrada = 0;
  1380  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1381  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1382  03BF  01E1               	clrf	_Entrada
  1383                           
  1384                           ;main.c: 98:     }else if(Entrada == '-'){
  1385  03C0  2BCA               	goto	l2210
  1386  03C1                     l2204:
  1387  03C1  302D               	movlw	45
  1388  03C2  0661               	xorwf	_Entrada,w
  1389  03C3  1D03               	btfss	3,2
  1390  03C4  2BC6               	goto	u2111
  1391  03C5  2BC7               	goto	u2110
  1392  03C6                     u2111:
  1393  03C6  2BCA               	goto	l2210
  1394  03C7                     u2110:
  1395  03C7                     l2206:
  1396  03C7  3001               	movlw	1	;# 
  1397  03C8  0286               	subwf	6,f	;# 
  1398  03C9  2BBD               	goto	l2202
  1399  03CA                     l2210:
  1400                           
  1401                           ;main.c: 104:     dato1 = ADRESH_CANAL1*0.196;
  1402  03CA  085F               	movf	_ADRESH_CANAL1,w
  1403  03CB  00A0               	movwf	___xxtofl@val
  1404  03CC  0860               	movf	_ADRESH_CANAL1+1,w
  1405  03CD  00A1               	movwf	___xxtofl@val+1
  1406  03CE  01A2               	clrf	___xxtofl@val+2
  1407  03CF  01A3               	clrf	___xxtofl@val+3
  1408  03D0  3000               	movlw	0
  1409  03D1  120A  118A  2691  120A  118A  	fcall	___xxtofl
  1410  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1411  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1412  03D8  0823               	movf	?___xxtofl+3,w
  1413  03D9  00B5               	movwf	___flmul@a+3
  1414  03DA  0822               	movf	?___xxtofl+2,w
  1415  03DB  00B4               	movwf	___flmul@a+2
  1416  03DC  0821               	movf	?___xxtofl+1,w
  1417  03DD  00B3               	movwf	___flmul@a+1
  1418  03DE  0820               	movf	?___xxtofl,w
  1419  03DF  00B2               	movwf	___flmul@a
  1420  03E0  303E               	movlw	62
  1421  03E1  00B1               	movwf	___flmul@b+3
  1422  03E2  3048               	movlw	72
  1423  03E3  00B0               	movwf	___flmul@b+2
  1424  03E4  30B4               	movlw	180
  1425  03E5  00AF               	movwf	___flmul@b+1
  1426  03E6  3039               	movlw	57
  1427  03E7  00AE               	movwf	___flmul@b
  1428  03E8  120A  118A  202F  120A  118A  	fcall	___flmul
  1429  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1430  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1431  03EF  0831               	movf	?___flmul+3,w
  1432  03F0  00CB               	movwf	___fltol@f1+3
  1433  03F1  0830               	movf	?___flmul+2,w
  1434  03F2  00CA               	movwf	___fltol@f1+2
  1435  03F3  082F               	movf	?___flmul+1,w
  1436  03F4  00C9               	movwf	___fltol@f1+1
  1437  03F5  082E               	movf	?___flmul,w
  1438  03F6  00C8               	movwf	___fltol@f1
  1439  03F7  120A  118A  274D  120A  118A  	fcall	___fltol
  1440  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1441  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1442  03FE  0849               	movf	?___fltol+1,w
  1443  03FF  00DC               	movwf	_dato1+1
  1444  0400  0848               	movf	?___fltol,w
  1445  0401  00DB               	movwf	_dato1
  1446  0402                     l2212:
  1447                           
  1448                           ;main.c: 105:     dato2 = ADRESH_CANAL2*0.196;
  1449  0402  085D               	movf	_ADRESH_CANAL2,w
  1450  0403  00A0               	movwf	___xxtofl@val
  1451  0404  085E               	movf	_ADRESH_CANAL2+1,w
  1452  0405  00A1               	movwf	___xxtofl@val+1
  1453  0406  01A2               	clrf	___xxtofl@val+2
  1454  0407  01A3               	clrf	___xxtofl@val+3
  1455  0408  3000               	movlw	0
  1456  0409  120A  118A  2691  120A  118A  	fcall	___xxtofl
  1457  040E  1283               	bcf	3,5	;RP0=0, select bank0
  1458  040F  1303               	bcf	3,6	;RP1=0, select bank0
  1459  0410  0823               	movf	?___xxtofl+3,w
  1460  0411  00B5               	movwf	___flmul@a+3
  1461  0412  0822               	movf	?___xxtofl+2,w
  1462  0413  00B4               	movwf	___flmul@a+2
  1463  0414  0821               	movf	?___xxtofl+1,w
  1464  0415  00B3               	movwf	___flmul@a+1
  1465  0416  0820               	movf	?___xxtofl,w
  1466  0417  00B2               	movwf	___flmul@a
  1467  0418  303E               	movlw	62
  1468  0419  00B1               	movwf	___flmul@b+3
  1469  041A  3048               	movlw	72
  1470  041B  00B0               	movwf	___flmul@b+2
  1471  041C  30B4               	movlw	180
  1472  041D  00AF               	movwf	___flmul@b+1
  1473  041E  3039               	movlw	57
  1474  041F  00AE               	movwf	___flmul@b
  1475  0420  120A  118A  202F  120A  118A  	fcall	___flmul
  1476  0425  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0426  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0427  0831               	movf	?___flmul+3,w
  1479  0428  00CB               	movwf	___fltol@f1+3
  1480  0429  0830               	movf	?___flmul+2,w
  1481  042A  00CA               	movwf	___fltol@f1+2
  1482  042B  082F               	movf	?___flmul+1,w
  1483  042C  00C9               	movwf	___fltol@f1+1
  1484  042D  082E               	movf	?___flmul,w
  1485  042E  00C8               	movwf	___fltol@f1
  1486  042F  120A  118A  274D  120A  118A  	fcall	___fltol
  1487  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1488  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1489  0436  0849               	movf	?___fltol+1,w
  1490  0437  00DA               	movwf	_dato2+1
  1491  0438  0848               	movf	?___fltol,w
  1492  0439  00D9               	movwf	_dato2
  1493  043A                     l2214:
  1494                           
  1495                           ;main.c: 106:     dato3 = PORTB*0.196;
  1496  043A  0806               	movf	6,w	;volatile
  1497  043B  00D3               	movwf	??_main
  1498  043C  01D4               	clrf	??_main+1
  1499  043D  01D5               	clrf	??_main+2
  1500  043E  01D6               	clrf	??_main+3
  1501  043F  0856               	movf	??_main+3,w
  1502  0440  00A3               	movwf	___xxtofl@val+3
  1503  0441  0855               	movf	??_main+2,w
  1504  0442  00A2               	movwf	___xxtofl@val+2
  1505  0443  0854               	movf	??_main+1,w
  1506  0444  00A1               	movwf	___xxtofl@val+1
  1507  0445  0853               	movf	??_main,w
  1508  0446  00A0               	movwf	___xxtofl@val
  1509  0447  3001               	movlw	1
  1510  0448  120A  118A  2691  120A  118A  	fcall	___xxtofl
  1511  044D  1283               	bcf	3,5	;RP0=0, select bank0
  1512  044E  1303               	bcf	3,6	;RP1=0, select bank0
  1513  044F  0823               	movf	?___xxtofl+3,w
  1514  0450  00B5               	movwf	___flmul@a+3
  1515  0451  0822               	movf	?___xxtofl+2,w
  1516  0452  00B4               	movwf	___flmul@a+2
  1517  0453  0821               	movf	?___xxtofl+1,w
  1518  0454  00B3               	movwf	___flmul@a+1
  1519  0455  0820               	movf	?___xxtofl,w
  1520  0456  00B2               	movwf	___flmul@a
  1521  0457  303E               	movlw	62
  1522  0458  00B1               	movwf	___flmul@b+3
  1523  0459  3048               	movlw	72
  1524  045A  00B0               	movwf	___flmul@b+2
  1525  045B  30B4               	movlw	180
  1526  045C  00AF               	movwf	___flmul@b+1
  1527  045D  3039               	movlw	57
  1528  045E  00AE               	movwf	___flmul@b
  1529  045F  120A  118A  202F  120A  118A  	fcall	___flmul
  1530  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1532  0466  0831               	movf	?___flmul+3,w
  1533  0467  00CB               	movwf	___fltol@f1+3
  1534  0468  0830               	movf	?___flmul+2,w
  1535  0469  00CA               	movwf	___fltol@f1+2
  1536  046A  082F               	movf	?___flmul+1,w
  1537  046B  00C9               	movwf	___fltol@f1+1
  1538  046C  082E               	movf	?___flmul,w
  1539  046D  00C8               	movwf	___fltol@f1
  1540  046E  120A  118A  274D  120A  118A  	fcall	___fltol
  1541  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0475  0849               	movf	?___fltol+1,w
  1544  0476  00D8               	movwf	_dato3+1
  1545  0477  0848               	movf	?___fltol,w
  1546  0478  00D7               	movwf	_dato3
  1547  0479                     l2216:
  1548                           
  1549                           ;main.c: 108:     if (mandar_datos){
  1550  0479  087C               	movf	_mandar_datos,w
  1551  047A  1903               	btfsc	3,2
  1552  047B  2C7D               	goto	u2121
  1553  047C  2C7E               	goto	u2120
  1554  047D                     u2121:
  1555  047D  2BB2               	goto	l2196
  1556  047E                     u2120:
  1557  047E                     l2218:
  1558                           
  1559                           ;main.c: 109:        print("SENSOR 1: ");
  1560  047E  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1561  047F  120A  158A  24B3  120A  118A  	fcall	_print
  1562                           
  1563                           ;main.c: 111:        enviar_letra(int_string(BTD_DECENA(dato1)));
  1564  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0486  085C               	movf	_dato1+1,w
  1567  0487  00AA               	movwf	BTD_DECENA@valor1+1
  1568  0488  085B               	movf	_dato1,w
  1569  0489  00A9               	movwf	BTD_DECENA@valor1
  1570  048A  120A  158A  254C  120A  118A  	fcall	_BTD_DECENA
  1571  048F  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0490  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0491  082A               	movf	?_BTD_DECENA+1,w
  1574  0492  00B0               	movwf	int_string@valor+1
  1575  0493  0829               	movf	?_BTD_DECENA,w
  1576  0494  00AF               	movwf	int_string@valor
  1577  0495  120A  158A  26DD  120A  118A  	fcall	_int_string
  1578  049A  1283               	bcf	3,5	;RP0=0, select bank0
  1579  049B  1303               	bcf	3,6	;RP1=0, select bank0
  1580  049C  082F               	movf	?_int_string,w
  1581  049D  120A  158A  244A  120A  118A  	fcall	_enviar_letra
  1582  04A2                     l2220:
  1583                           
  1584                           ;main.c: 112:        enviar_letra('.');
  1585  04A2  302E               	movlw	46
  1586  04A3  120A  158A  244A  120A  118A  	fcall	_enviar_letra
  1587  04A8                     l2222:
  1588                           
  1589                           ;main.c: 113:        enviar_letra(int_string(BTD_UNIDAD(dato1)));
  1590  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1591  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1592  04AA  085C               	movf	_dato1+1,w
  1593  04AB  00A8               	movwf	BTD_UNIDAD@valor2+1
  1594  04AC  085B               	movf	_dato1,w
  1595  04AD  00A7               	movwf	BTD_UNIDAD@valor2
  1596  04AE  120A  158A  2579  120A  118A  	fcall	_BTD_UNIDAD
  1597  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  1598  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  1599  04B5  0828               	movf	?_BTD_UNIDAD+1,w
  1600  04B6  00B0               	movwf	int_string@valor+1
  1601  04B7  0827               	movf	?_BTD_UNIDAD,w
  1602  04B8  00AF               	movwf	int_string@valor
  1603  04B9  120A  158A  26DD  120A  118A  	fcall	_int_string
  1604  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  1605  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  1606  04C0  082F               	movf	?_int_string,w
  1607  04C1  120A  158A  244A  120A  118A  	fcall	_enviar_letra
  1608                           
  1609                           ;main.c: 114:        enviar_letra('V');
  1610  04C6  3056               	movlw	86
  1611  04C7  120A  158A  244A  120A  118A  	fcall	_enviar_letra
  1612                           
  1613                           ;main.c: 116:        Lcd_Set_Cursor(2,1);
  1614  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1615  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1616  04CE  01A3               	clrf	Lcd_Set_Cursor@b
  1617  04CF  0AA3               	incf	Lcd_Set_Cursor@b,f
  1618  04D0  3002               	movlw	2
  1619  04D1  120A  158A  24D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1620  04D6                     l2224:
  1621                           
  1622                           ;main.c: 117:        Lcd_Write_Char(int_string(BTD_DECENA(dato1)));
  1623  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  1624  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  1625  04D8  085C               	movf	_dato1+1,w
  1626  04D9  00AA               	movwf	BTD_DECENA@valor1+1
  1627  04DA  085B               	movf	_dato1,w
  1628  04DB  00A9               	movwf	BTD_DECENA@valor1
  1629  04DC  120A  158A  254C  120A  118A  	fcall	_BTD_DECENA
  1630  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  1631  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  1632  04E3  082A               	movf	?_BTD_DECENA+1,w
  1633  04E4  00B0               	movwf	int_string@valor+1
  1634  04E5  0829               	movf	?_BTD_DECENA,w
  1635  04E6  00AF               	movwf	int_string@valor
  1636  04E7  120A  158A  26DD  120A  118A  	fcall	_int_string
  1637  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1638  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1639  04EE  082F               	movf	?_int_string,w
  1640  04EF  120A  158A  2497  120A  118A  	fcall	_Lcd_Write_Char
  1641  04F4                     l2226:
  1642                           
  1643                           ;main.c: 118:        Lcd_Set_Cursor(2,2);
  1644  04F4  3002               	movlw	2
  1645  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1646  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1647  04F7  00D3               	movwf	??_main
  1648  04F8  0853               	movf	??_main,w
  1649  04F9  00A3               	movwf	Lcd_Set_Cursor@b
  1650  04FA  3002               	movlw	2
  1651  04FB  120A  158A  24D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1652  0500                     l2228:
  1653                           
  1654                           ;main.c: 119:        Lcd_Write_Char('.');
  1655  0500  302E               	movlw	46
  1656  0501  120A  158A  2497  120A  118A  	fcall	_Lcd_Write_Char
  1657  0506                     l2230:
  1658                           
  1659                           ;main.c: 120:        Lcd_Set_Cursor(2,3);
  1660  0506  3003               	movlw	3
  1661  0507  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0508  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0509  00D3               	movwf	??_main
  1664  050A  0853               	movf	??_main,w
  1665  050B  00A3               	movwf	Lcd_Set_Cursor@b
  1666  050C  3002               	movlw	2
  1667  050D  120A  158A  24D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1668                           
  1669                           ;main.c: 121:        Lcd_Write_Char(int_string(BTD_UNIDAD(dato1)));
  1670  0512  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0513  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0514  085C               	movf	_dato1+1,w
  1673  0515  00A8               	movwf	BTD_UNIDAD@valor2+1
  1674  0516  085B               	movf	_dato1,w
  1675  0517  00A7               	movwf	BTD_UNIDAD@valor2
  1676  0518  120A  158A  2579  120A  118A  	fcall	_BTD_UNIDAD
  1677  051D  1283               	bcf	3,5	;RP0=0, select bank0
  1678  051E  1303               	bcf	3,6	;RP1=0, select bank0
  1679  051F  0828               	movf	?_BTD_UNIDAD+1,w
  1680  0520  00B0               	movwf	int_string@valor+1
  1681  0521  0827               	movf	?_BTD_UNIDAD,w
  1682  0522  00AF               	movwf	int_string@valor
  1683  0523  120A  158A  26DD  120A  118A  	fcall	_int_string
  1684  0528  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0529  1303               	bcf	3,6	;RP1=0, select bank0
  1686  052A  082F               	movf	?_int_string,w
  1687  052B  120A  158A  2497  120A  118A  	fcall	_Lcd_Write_Char
  1688  0530                     l2232:
  1689                           
  1690                           ;main.c: 122:        Lcd_Set_Cursor(2,4);
  1691  0530  3004               	movlw	4
  1692  0531  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0532  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0533  00D3               	movwf	??_main
  1695  0534  0853               	movf	??_main,w
  1696  0535  00A3               	movwf	Lcd_Set_Cursor@b
  1697  0536  3002               	movlw	2
  1698  0537  120A  158A  24D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1699  053C                     l2234:
  1700                           
  1701                           ;main.c: 123:        Lcd_Write_Char('V');
  1702  053C  3056               	movlw	86
  1703  053D  120A  158A  2497  120A  118A  	fcall	_Lcd_Write_Char
  1704                           
  1705                           ;main.c: 126:        print("  SENSOR 2: ");
  1706  0542  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1707  0543  120A  158A  24B3  120A  118A  	fcall	_print
  1708                           
  1709                           ;main.c: 127:        enviar_letra(int_string(BTD_DECENA(dato2)));
  1710  0548  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0549  1303               	bcf	3,6	;RP1=0, select bank0
  1712  054A  085A               	movf	_dato2+1,w
  1713  054B  00AA               	movwf	BTD_DECENA@valor1+1
  1714  054C  0859               	movf	_dato2,w
  1715  054D  00A9               	movwf	BTD_DECENA@valor1
  1716  054E  120A  158A  254C  120A  118A  	fcall	_BTD_DECENA
  1717  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0555  082A               	movf	?_BTD_DECENA+1,w
  1720  0556  00B0               	movwf	int_string@valor+1
  1721  0557  0829               	movf	?_BTD_DECENA,w
  1722  0558  00AF               	movwf	int_string@valor
  1723  0559  120A  158A  26DD  120A  118A  	fcall	_int_string
  1724  055E  1283               	bcf	3,5	;RP0=0, select bank0
  1725  055F  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0560  082F               	movf	?_int_string,w
  1727  0561  120A  158A  244A  120A  118A  	fcall	_enviar_letra
  1728  0566                     l2236:
  1729                           
  1730                           ;main.c: 128:        enviar_letra('.');
  1731  0566  302E               	movlw	46
  1732  0567  120A  158A  244A  120A  118A  	fcall	_enviar_letra
  1733  056C                     l2238:
  1734                           
  1735                           ;main.c: 129:        enviar_letra(int_string(BTD_UNIDAD(dato2)));
  1736  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1737  056D  1303               	bcf	3,6	;RP1=0, select bank0
  1738  056E  085A               	movf	_dato2+1,w
  1739  056F  00A8               	movwf	BTD_UNIDAD@valor2+1
  1740  0570  0859               	movf	_dato2,w
  1741  0571  00A7               	movwf	BTD_UNIDAD@valor2
  1742  0572  120A  158A  2579  120A  118A  	fcall	_BTD_UNIDAD
  1743  0577  1283               	bcf	3,5	;RP0=0, select bank0
  1744  0578  1303               	bcf	3,6	;RP1=0, select bank0
  1745  0579  0828               	movf	?_BTD_UNIDAD+1,w
  1746  057A  00B0               	movwf	int_string@valor+1
  1747  057B  0827               	movf	?_BTD_UNIDAD,w
  1748  057C  00AF               	movwf	int_string@valor
  1749  057D  120A  158A  26DD  120A  118A  	fcall	_int_string
  1750  0582  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0583  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0584  082F               	movf	?_int_string,w
  1753  0585  120A  158A  244A  120A  118A  	fcall	_enviar_letra
  1754                           
  1755                           ;main.c: 130:        enviar_letra('V');
  1756  058A  3056               	movlw	86
  1757  058B  120A  158A  244A  120A  118A  	fcall	_enviar_letra
  1758                           
  1759                           ;main.c: 133:        Lcd_Set_Cursor(2,7);
  1760  0590  3007               	movlw	7
  1761  0591  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0592  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0593  00D3               	movwf	??_main
  1764  0594  0853               	movf	??_main,w
  1765  0595  00A3               	movwf	Lcd_Set_Cursor@b
  1766  0596  3002               	movlw	2
  1767  0597  120A  158A  24D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1768  059C                     l2240:
  1769                           
  1770                           ;main.c: 134:        Lcd_Write_Char(int_string(BTD_DECENA(dato2)));
  1771  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1772  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1773  059E  085A               	movf	_dato2+1,w
  1774  059F  00AA               	movwf	BTD_DECENA@valor1+1
  1775  05A0  0859               	movf	_dato2,w
  1776  05A1  00A9               	movwf	BTD_DECENA@valor1
  1777  05A2  120A  158A  254C  120A  118A  	fcall	_BTD_DECENA
  1778  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  1779  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  1780  05A9  082A               	movf	?_BTD_DECENA+1,w
  1781  05AA  00B0               	movwf	int_string@valor+1
  1782  05AB  0829               	movf	?_BTD_DECENA,w
  1783  05AC  00AF               	movwf	int_string@valor
  1784  05AD  120A  158A  26DD  120A  118A  	fcall	_int_string
  1785  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1786  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1787  05B4  082F               	movf	?_int_string,w
  1788  05B5  120A  158A  2497  120A  118A  	fcall	_Lcd_Write_Char
  1789  05BA                     l2242:
  1790                           
  1791                           ;main.c: 135:        Lcd_Set_Cursor(2,8);
  1792  05BA  3008               	movlw	8
  1793  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  1794  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  1795  05BD  00D3               	movwf	??_main
  1796  05BE  0853               	movf	??_main,w
  1797  05BF  00A3               	movwf	Lcd_Set_Cursor@b
  1798  05C0  3002               	movlw	2
  1799  05C1  120A  158A  24D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1800  05C6                     l2244:
  1801                           
  1802                           ;main.c: 136:        Lcd_Write_Char('.');
  1803  05C6  302E               	movlw	46
  1804  05C7  120A  158A  2497  120A  118A  	fcall	_Lcd_Write_Char
  1805  05CC                     l2246:
  1806                           
  1807                           ;main.c: 137:        Lcd_Set_Cursor(2,9);
  1808  05CC  3009               	movlw	9
  1809  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1810  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1811  05CF  00D3               	movwf	??_main
  1812  05D0  0853               	movf	??_main,w
  1813  05D1  00A3               	movwf	Lcd_Set_Cursor@b
  1814  05D2  3002               	movlw	2
  1815  05D3  120A  158A  24D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1816                           
  1817                           ;main.c: 138:        Lcd_Write_Char(int_string(BTD_UNIDAD(dato2)));
  1818  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1819  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  1820  05DA  085A               	movf	_dato2+1,w
  1821  05DB  00A8               	movwf	BTD_UNIDAD@valor2+1
  1822  05DC  0859               	movf	_dato2,w
  1823  05DD  00A7               	movwf	BTD_UNIDAD@valor2
  1824  05DE  120A  158A  2579  120A  118A  	fcall	_BTD_UNIDAD
  1825  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  1826  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  1827  05E5  0828               	movf	?_BTD_UNIDAD+1,w
  1828  05E6  00B0               	movwf	int_string@valor+1
  1829  05E7  0827               	movf	?_BTD_UNIDAD,w
  1830  05E8  00AF               	movwf	int_string@valor
  1831  05E9  120A  158A  26DD  120A  118A  	fcall	_int_string
  1832  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  1833  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  1834  05F0  082F               	movf	?_int_string,w
  1835  05F1  120A  158A  2497  120A  118A  	fcall	_Lcd_Write_Char
  1836  05F6                     l2248:
  1837                           
  1838                           ;main.c: 139:        Lcd_Set_Cursor(2,10);
  1839  05F6  300A               	movlw	10
  1840  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1841  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1842  05F9  00D3               	movwf	??_main
  1843  05FA  0853               	movf	??_main,w
  1844  05FB  00A3               	movwf	Lcd_Set_Cursor@b
  1845  05FC  3002               	movlw	2
  1846  05FD  120A  158A  24D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1847  0602                     l2250:
  1848                           
  1849                           ;main.c: 140:        Lcd_Write_Char('V');
  1850  0602  3056               	movlw	86
  1851  0603  120A  158A  2497  120A  118A  	fcall	_Lcd_Write_Char
  1852  0608                     l2252:
  1853                           
  1854                           ;main.c: 144:        Lcd_Set_Cursor(2,13);
  1855  0608  300D               	movlw	13
  1856  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1857  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1858  060B  00D3               	movwf	??_main
  1859  060C  0853               	movf	??_main,w
  1860  060D  00A3               	movwf	Lcd_Set_Cursor@b
  1861  060E  3002               	movlw	2
  1862  060F  120A  158A  24D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1863  0614                     l2254:
  1864                           
  1865                           ;main.c: 145:        Lcd_Write_Char(int_string(BTD_DECENA(dato3)));
  1866  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1868  0616  0858               	movf	_dato3+1,w
  1869  0617  00AA               	movwf	BTD_DECENA@valor1+1
  1870  0618  0857               	movf	_dato3,w
  1871  0619  00A9               	movwf	BTD_DECENA@valor1
  1872  061A  120A  158A  254C  120A  118A  	fcall	_BTD_DECENA
  1873  061F  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0620  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0621  082A               	movf	?_BTD_DECENA+1,w
  1876  0622  00B0               	movwf	int_string@valor+1
  1877  0623  0829               	movf	?_BTD_DECENA,w
  1878  0624  00AF               	movwf	int_string@valor
  1879  0625  120A  158A  26DD  120A  118A  	fcall	_int_string
  1880  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1881  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1882  062C  082F               	movf	?_int_string,w
  1883  062D  120A  158A  2497  120A  118A  	fcall	_Lcd_Write_Char
  1884                           
  1885                           ;main.c: 146:        Lcd_Set_Cursor(2,14);
  1886  0632  300E               	movlw	14
  1887  0633  1283               	bcf	3,5	;RP0=0, select bank0
  1888  0634  1303               	bcf	3,6	;RP1=0, select bank0
  1889  0635  00D3               	movwf	??_main
  1890  0636  0853               	movf	??_main,w
  1891  0637  00A3               	movwf	Lcd_Set_Cursor@b
  1892  0638  3002               	movlw	2
  1893  0639  120A  158A  24D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1894                           
  1895                           ;main.c: 147:        Lcd_Write_Char('.');
  1896  063E  302E               	movlw	46
  1897  063F  120A  158A  2497  120A  118A  	fcall	_Lcd_Write_Char
  1898                           
  1899                           ;main.c: 148:        Lcd_Set_Cursor(2,15);
  1900  0644  300F               	movlw	15
  1901  0645  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0646  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0647  00D3               	movwf	??_main
  1904  0648  0853               	movf	??_main,w
  1905  0649  00A3               	movwf	Lcd_Set_Cursor@b
  1906  064A  3002               	movlw	2
  1907  064B  120A  158A  24D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1908  0650                     l2256:
  1909                           
  1910                           ;main.c: 149:        Lcd_Write_Char(int_string(BTD_UNIDAD(dato3)));
  1911  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0652  0858               	movf	_dato3+1,w
  1914  0653  00A8               	movwf	BTD_UNIDAD@valor2+1
  1915  0654  0857               	movf	_dato3,w
  1916  0655  00A7               	movwf	BTD_UNIDAD@valor2
  1917  0656  120A  158A  2579  120A  118A  	fcall	_BTD_UNIDAD
  1918  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1919  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1920  065D  0828               	movf	?_BTD_UNIDAD+1,w
  1921  065E  00B0               	movwf	int_string@valor+1
  1922  065F  0827               	movf	?_BTD_UNIDAD,w
  1923  0660  00AF               	movwf	int_string@valor
  1924  0661  120A  158A  26DD  120A  118A  	fcall	_int_string
  1925  0666  1283               	bcf	3,5	;RP0=0, select bank0
  1926  0667  1303               	bcf	3,6	;RP1=0, select bank0
  1927  0668  082F               	movf	?_int_string,w
  1928  0669  120A  158A  2497  120A  118A  	fcall	_Lcd_Write_Char
  1929  066E                     l2258:
  1930                           
  1931                           ;main.c: 150:        Lcd_Set_Cursor(2,16);
  1932  066E  3010               	movlw	16
  1933  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0671  00D3               	movwf	??_main
  1936  0672  0853               	movf	??_main,w
  1937  0673  00A3               	movwf	Lcd_Set_Cursor@b
  1938  0674  3002               	movlw	2
  1939  0675  120A  158A  24D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1940  067A                     l2260:
  1941                           
  1942                           ;main.c: 151:        Lcd_Write_Char('V');
  1943  067A  3056               	movlw	86
  1944  067B  120A  158A  2497  120A  118A  	fcall	_Lcd_Write_Char
  1945  0680                     l2262:
  1946                           
  1947                           ;main.c: 152:        print("\r");
  1948  0680  302C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1949  0681  120A  158A  24B3  120A  118A  	fcall	_print
  1950  0686                     l2264:
  1951                           
  1952                           ;main.c: 153:        print("\n");
  1953  0686  302A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1954  0687  120A  158A  24B3  120A  118A  	fcall	_print
  1955  068C                     l2266:
  1956                           
  1957                           ;main.c: 154:        mandar_datos = 0;
  1958  068C  01FC               	clrf	_mandar_datos
  1959  068D  2BB2               	goto	l2196
  1960  068E  120A  118A  280E   	ljmp	start
  1961  0691                     __end_of_main:
  1962                           
  1963                           	psect	text1
  1964  0DE2                     __ptext1:	
  1965 ;; *************** function _setup *****************
  1966 ;; Defined at:
  1967 ;;		line 159 in file "main.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1981 ;;      Params:         0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0
  1984 ;;      Totals:         0       0       0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    2
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _setup
  1997  0DE2                     _setup:
  1998  0DE2                     l1744:	
  1999                           ;incstack = 0
  2000                           ; Regs used in _setup: [wreg+status,2+status,0]
  2001                           
  2002                           
  2003                           ;main.c: 162:     OSCCONbits.SCS = 1;
  2004  0DE2  1683               	bsf	3,5	;RP0=1, select bank1
  2005  0DE3  1303               	bcf	3,6	;RP1=0, select bank1
  2006  0DE4  140F               	bsf	15,0	;volatile
  2007                           
  2008                           ;main.c: 163:     OSCCONbits.IRCF2 = 1;
  2009  0DE5  170F               	bsf	15,6	;volatile
  2010                           
  2011                           ;main.c: 164:     OSCCONbits.IRCF1 = 0;
  2012  0DE6  128F               	bcf	15,5	;volatile
  2013                           
  2014                           ;main.c: 165:     OSCCONbits.IRCF0 = 0;
  2015  0DE7  120F               	bcf	15,4	;volatile
  2016  0DE8                     l1746:
  2017                           
  2018                           ;main.c: 168:     PORTA = 0X03;
  2019  0DE8  3003               	movlw	3
  2020  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0DEB  0085               	movwf	5	;volatile
  2023  0DEC                     l1748:
  2024                           
  2025                           ;main.c: 169:     PORTB = 0X00;
  2026  0DEC  0186               	clrf	6	;volatile
  2027  0DED                     l1750:
  2028                           
  2029                           ;main.c: 170:     PORTD = PORTE = 0;
  2030  0DED  0189               	clrf	9	;volatile
  2031  0DEE  0188               	clrf	8	;volatile
  2032                           
  2033                           ;main.c: 171:     ANSEL = 0X03;
  2034  0DEF  3003               	movlw	3
  2035  0DF0  1683               	bsf	3,5	;RP0=1, select bank3
  2036  0DF1  1703               	bsf	3,6	;RP1=1, select bank3
  2037  0DF2  0088               	movwf	8	;volatile
  2038  0DF3                     l1752:
  2039                           
  2040                           ;main.c: 172:     ANSELH = 0X00;
  2041  0DF3  0189               	clrf	9	;volatile
  2042  0DF4                     l1754:
  2043                           
  2044                           ;main.c: 174:     TRISA = 0X03;
  2045  0DF4  3003               	movlw	3
  2046  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  2047  0DF6  1303               	bcf	3,6	;RP1=0, select bank1
  2048  0DF7  0085               	movwf	5	;volatile
  2049                           
  2050                           ;main.c: 175:     TRISB = 0X00;
  2051  0DF8  0186               	clrf	6	;volatile
  2052                           
  2053                           ;main.c: 176:     TRISD = 0;
  2054  0DF9  0188               	clrf	8	;volatile
  2055                           
  2056                           ;main.c: 177:     TRISE= 0;
  2057  0DFA  0189               	clrf	9	;volatile
  2058  0DFB                     l1756:
  2059                           
  2060                           ;main.c: 179:     INTCONbits.GIE = 1;
  2061  0DFB  178B               	bsf	11,7	;volatile
  2062  0DFC                     l1758:
  2063                           
  2064                           ;main.c: 180:     INTCONbits.PEIE= 1;
  2065  0DFC  170B               	bsf	11,6	;volatile
  2066  0DFD                     l1760:
  2067                           
  2068                           ;main.c: 181:     PIE1bits.ADIE = 1;
  2069  0DFD  170C               	bsf	12,6	;volatile
  2070                           
  2071                           ;main.c: 185:     SPBRGH = 0;
  2072  0DFE  019A               	clrf	26	;volatile
  2073  0DFF                     l1762:
  2074                           
  2075                           ;main.c: 186:     SPBRG = 25;
  2076  0DFF  3019               	movlw	25
  2077  0E00  0099               	movwf	25	;volatile
  2078  0E01                     l1764:
  2079                           
  2080                           ;main.c: 187:     BRGH = 1;
  2081  0E01  1518               	bsf	24,2	;volatile
  2082  0E02                     l1766:
  2083                           
  2084                           ;main.c: 188:     BRG16 = 1;
  2085  0E02  1683               	bsf	3,5	;RP0=1, select bank3
  2086  0E03  1703               	bsf	3,6	;RP1=1, select bank3
  2087  0E04  1587               	bsf	7,3	;volatile
  2088  0E05                     l1768:
  2089                           
  2090                           ;main.c: 190:     TXSTAbits.SYNC= 0;
  2091  0E05  1683               	bsf	3,5	;RP0=1, select bank1
  2092  0E06  1303               	bcf	3,6	;RP1=0, select bank1
  2093  0E07  1218               	bcf	24,4	;volatile
  2094  0E08                     l1770:
  2095                           
  2096                           ;main.c: 191:     RCSTAbits.SPEN= 1;
  2097  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  2098  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  2099  0E0A  1798               	bsf	24,7	;volatile
  2100  0E0B                     l1772:
  2101                           
  2102                           ;main.c: 192:     TXSTAbits.TXEN= 1;
  2103  0E0B  1683               	bsf	3,5	;RP0=1, select bank1
  2104  0E0C  1303               	bcf	3,6	;RP1=0, select bank1
  2105  0E0D  1698               	bsf	24,5	;volatile
  2106  0E0E                     l1774:
  2107                           
  2108                           ;main.c: 193:     RCSTAbits.CREN = 1;
  2109  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0E10  1618               	bsf	24,4	;volatile
  2112  0E11                     l1776:
  2113                           
  2114                           ;main.c: 195:     PIE1bits.RCIE = 1;
  2115  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  2116  0E12  1303               	bcf	3,6	;RP1=0, select bank1
  2117  0E13  168C               	bsf	12,5	;volatile
  2118  0E14                     l1778:
  2119                           
  2120                           ;main.c: 199:     VCFG1 = 0;
  2121  0E14  129F               	bcf	31,5	;volatile
  2122  0E15                     l1780:
  2123                           
  2124                           ;main.c: 200:     VCFG0 = 0;
  2125  0E15  121F               	bcf	31,4	;volatile
  2126  0E16                     l1782:
  2127                           
  2128                           ;main.c: 201:     ADCON1bits.ADFM = 0;
  2129  0E16  139F               	bcf	31,7	;volatile
  2130  0E17                     l1784:
  2131                           
  2132                           ;main.c: 202:     ADCON0bits.ADCS = 0b00;
  2133  0E17  303F               	movlw	-193
  2134  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  2136  0E1A  059F               	andwf	31,f	;volatile
  2137  0E1B                     l1786:
  2138                           
  2139                           ;main.c: 203:     PIR1bits.ADIF = 0;
  2140  0E1B  130C               	bcf	12,6	;volatile
  2141  0E1C                     l1788:
  2142                           
  2143                           ;main.c: 204:     ADCON0bits.ADON = 1;
  2144  0E1C  141F               	bsf	31,0	;volatile
  2145  0E1D                     l1790:
  2146                           
  2147                           ;main.c: 209: T1CONbits.T1CKPS1 =1;
  2148  0E1D  1690               	bsf	16,5	;volatile
  2149  0E1E                     l1792:
  2150                           
  2151                           ;main.c: 210: T1CONbits.T1CKPS0 =1;
  2152  0E1E  1610               	bsf	16,4	;volatile
  2153  0E1F                     l1794:
  2154                           
  2155                           ;main.c: 211: T1CONbits.T1OSCEN =1;
  2156  0E1F  1590               	bsf	16,3	;volatile
  2157  0E20                     l1796:
  2158                           
  2159                           ;main.c: 212: T1CONbits.T1SYNC =1;
  2160  0E20  1510               	bsf	16,2	;volatile
  2161  0E21                     l1798:
  2162                           
  2163                           ;main.c: 213: T1CONbits.TMR1CS =0;
  2164  0E21  1090               	bcf	16,1	;volatile
  2165  0E22                     l1800:
  2166                           
  2167                           ;main.c: 214: T1CONbits.TMR1ON =1;
  2168  0E22  1410               	bsf	16,0	;volatile
  2169  0E23                     l1802:
  2170                           
  2171                           ;main.c: 215: PIE1bits.TMR1IE = 1;
  2172  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  2173  0E24  1303               	bcf	3,6	;RP1=0, select bank1
  2174  0E25  140C               	bsf	12,0	;volatile
  2175  0E26                     l1804:
  2176                           
  2177                           ;main.c: 216: TMR1H = 11;
  2178  0E26  300B               	movlw	11
  2179  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  2180  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  2181  0E29  008F               	movwf	15	;volatile
  2182  0E2A                     l1806:
  2183                           
  2184                           ;main.c: 217: TMR1L = 71;
  2185  0E2A  3047               	movlw	71
  2186  0E2B  008E               	movwf	14	;volatile
  2187  0E2C                     l128:
  2188  0E2C  0008               	return
  2189  0E2D                     __end_of_setup:
  2190                           
  2191                           	psect	text2
  2192  0CB3                     __ptext2:	
  2193 ;; *************** function _print *****************
  2194 ;; Defined at:
  2195 ;;		line 16 in file "PRINT_SERIAL.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  palabra         1    wreg     PTR unsigned char 
  2198 ;;		 -> STR_5(2), STR_4(2), STR_3(13), STR_2(11), 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  palabra         1    1[BANK0 ] PTR unsigned char 
  2201 ;;		 -> STR_5(2), STR_4(2), STR_3(13), STR_2(11), 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2211 ;;      Params:         0       0       0       0       0
  2212 ;;      Locals:         0       1       0       0       0
  2213 ;;      Temps:          0       1       0       0       0
  2214 ;;      Totals:         0       2       0       0       0
  2215 ;;Total ram usage:        2 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    2
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _print
  2227  0CB3                     _print:
  2228                           
  2229                           ;incstack = 0
  2230                           ; Regs used in _print: [wreg-fsr0h+status,2+status,0+pclath]
  2231                           ;print@palabra stored from wreg
  2232  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0CB5  00A1               	movwf	print@palabra
  2235  0CB6                     l1838:
  2236                           
  2237                           ;PRINT_SERIAL.c: 17:     while((*palabra) != '\0'){
  2238  0CB6  2CC7               	goto	l1844
  2239  0CB7                     l165:
  2240  0CB7  1E0C               	btfss	12,4	;volatile
  2241  0CB8  2CBA               	goto	u1421
  2242  0CB9  2CBB               	goto	u1420
  2243  0CBA                     u1421:
  2244  0CBA  2CB7               	goto	l165
  2245  0CBB                     u1420:
  2246  0CBB                     l1840:
  2247                           
  2248                           ;PRINT_SERIAL.c: 19:         TXREG = (*palabra);
  2249  0CBB  0821               	movf	print@palabra,w
  2250  0CBC  0084               	movwf	4
  2251  0CBD  120A  158A  2000  120A  158A  	fcall	stringdir
  2252  0CC2  0099               	movwf	25	;volatile
  2253  0CC3                     l1842:
  2254                           
  2255                           ;PRINT_SERIAL.c: 20:         *palabra++;
  2256  0CC3  3001               	movlw	1
  2257  0CC4  00A0               	movwf	??_print
  2258  0CC5  0820               	movf	??_print,w
  2259  0CC6  07A1               	addwf	print@palabra,f
  2260  0CC7                     l1844:
  2261                           
  2262                           ;PRINT_SERIAL.c: 17:     while((*palabra) != '\0'){
  2263  0CC7  0821               	movf	print@palabra,w
  2264  0CC8  0084               	movwf	4
  2265  0CC9  120A  158A  2000  120A  158A  	fcall	stringdir
  2266  0CCE  3A00               	xorlw	0
  2267  0CCF  1D03               	skipz
  2268  0CD0  2CD2               	goto	u1431
  2269  0CD1  2CD3               	goto	u1430
  2270  0CD2                     u1431:
  2271  0CD2  2CB7               	goto	l165
  2272  0CD3                     u1430:
  2273  0CD3                     l169:
  2274  0CD3  0008               	return
  2275  0CD4                     __end_of_print:
  2276                           
  2277                           	psect	text3
  2278  0EDD                     __ptext3:	
  2279 ;; *************** function _int_string *****************
  2280 ;; Defined at:
  2281 ;;		line 39 in file "PRINT_SERIAL.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  valor           2   15[BANK0 ] int 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  2   15[BANK0 ] int 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       2       0       0       0
  2296 ;;      Locals:         0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0
  2298 ;;      Totals:         0       2       0       0       0
  2299 ;;Total ram usage:        2 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    2
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           
  2310                           ;psect for function _int_string
  2311  0EDD                     _int_string:
  2312  0EDD                     l1852:	
  2313                           ;incstack = 0
  2314                           ; Regs used in _int_string: [wreg-fsr0h+status,2+status,0]
  2315                           
  2316                           
  2317                           ;PRINT_SERIAL.c: 41:     switch (valor){
  2318  0EDD  2F10               	goto	l1916
  2319  0EDE                     l1854:
  2320  0EDE  3030               	movlw	48
  2321  0EDF  00AF               	movwf	?_int_string
  2322  0EE0  3000               	movlw	0
  2323  0EE1  00B0               	movwf	?_int_string+1
  2324  0EE2  2F37               	goto	l189
  2325  0EE3                     l1860:
  2326  0EE3  3031               	movlw	49
  2327  0EE4  00AF               	movwf	?_int_string
  2328  0EE5  3000               	movlw	0
  2329  0EE6  00B0               	movwf	?_int_string+1
  2330  0EE7  2F37               	goto	l189
  2331  0EE8                     l1866:
  2332  0EE8  3032               	movlw	50
  2333  0EE9  00AF               	movwf	?_int_string
  2334  0EEA  3000               	movlw	0
  2335  0EEB  00B0               	movwf	?_int_string+1
  2336  0EEC  2F37               	goto	l189
  2337  0EED                     l1872:
  2338  0EED  3033               	movlw	51
  2339  0EEE  00AF               	movwf	?_int_string
  2340  0EEF  3000               	movlw	0
  2341  0EF0  00B0               	movwf	?_int_string+1
  2342  0EF1  2F37               	goto	l189
  2343  0EF2                     l1878:
  2344  0EF2  3034               	movlw	52
  2345  0EF3  00AF               	movwf	?_int_string
  2346  0EF4  3000               	movlw	0
  2347  0EF5  00B0               	movwf	?_int_string+1
  2348  0EF6  2F37               	goto	l189
  2349  0EF7                     l1884:
  2350  0EF7  3035               	movlw	53
  2351  0EF8  00AF               	movwf	?_int_string
  2352  0EF9  3000               	movlw	0
  2353  0EFA  00B0               	movwf	?_int_string+1
  2354  0EFB  2F37               	goto	l189
  2355  0EFC                     l1890:
  2356  0EFC  3036               	movlw	54
  2357  0EFD  00AF               	movwf	?_int_string
  2358  0EFE  3000               	movlw	0
  2359  0EFF  00B0               	movwf	?_int_string+1
  2360  0F00  2F37               	goto	l189
  2361  0F01                     l1896:
  2362  0F01  3037               	movlw	55
  2363  0F02  00AF               	movwf	?_int_string
  2364  0F03  3000               	movlw	0
  2365  0F04  00B0               	movwf	?_int_string+1
  2366  0F05  2F37               	goto	l189
  2367  0F06                     l1902:
  2368  0F06  3038               	movlw	56
  2369  0F07  00AF               	movwf	?_int_string
  2370  0F08  3000               	movlw	0
  2371  0F09  00B0               	movwf	?_int_string+1
  2372  0F0A  2F37               	goto	l189
  2373  0F0B                     l1908:
  2374  0F0B  3039               	movlw	57
  2375  0F0C  00AF               	movwf	?_int_string
  2376  0F0D  3000               	movlw	0
  2377  0F0E  00B0               	movwf	?_int_string+1
  2378  0F0F  2F37               	goto	l189
  2379  0F10                     l1916:
  2380                           
  2381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2382                           ; Switch size 1, requested type "simple"
  2383                           ; Number of cases is 1, Range of values is 0 to 0
  2384                           ; switch strategies available:
  2385                           ; Name         Instructions Cycles
  2386                           ; simple_byte            4     3 (average)
  2387                           ; direct_byte           11     8 (fixed)
  2388                           ; jumptable            260     6 (fixed)
  2389                           ;	Chosen strategy is simple_byte
  2390  0F10  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0F11  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0F12  0830               	movf	int_string@valor+1,w
  2393  0F13  3A00               	xorlw	0	; case 0
  2394  0F14  1903               	skipnz
  2395  0F15  2F17               	goto	l2338
  2396  0F16  2F37               	goto	l189
  2397  0F17                     l2338:
  2398                           
  2399                           ; Switch size 1, requested type "simple"
  2400                           ; Number of cases is 10, Range of values is 0 to 9
  2401                           ; switch strategies available:
  2402                           ; Name         Instructions Cycles
  2403                           ; simple_byte           31    16 (average)
  2404                           ; direct_byte           38     8 (fixed)
  2405                           ; jumptable            260     6 (fixed)
  2406                           ;	Chosen strategy is simple_byte
  2407  0F17  082F               	movf	int_string@valor,w
  2408  0F18  3A00               	xorlw	0	; case 0
  2409  0F19  1903               	skipnz
  2410  0F1A  2EDE               	goto	l1854
  2411  0F1B  3A01               	xorlw	1	; case 1
  2412  0F1C  1903               	skipnz
  2413  0F1D  2EE3               	goto	l1860
  2414  0F1E  3A03               	xorlw	3	; case 2
  2415  0F1F  1903               	skipnz
  2416  0F20  2EE8               	goto	l1866
  2417  0F21  3A01               	xorlw	1	; case 3
  2418  0F22  1903               	skipnz
  2419  0F23  2EED               	goto	l1872
  2420  0F24  3A07               	xorlw	7	; case 4
  2421  0F25  1903               	skipnz
  2422  0F26  2EF2               	goto	l1878
  2423  0F27  3A01               	xorlw	1	; case 5
  2424  0F28  1903               	skipnz
  2425  0F29  2EF7               	goto	l1884
  2426  0F2A  3A03               	xorlw	3	; case 6
  2427  0F2B  1903               	skipnz
  2428  0F2C  2EFC               	goto	l1890
  2429  0F2D  3A01               	xorlw	1	; case 7
  2430  0F2E  1903               	skipnz
  2431  0F2F  2F01               	goto	l1896
  2432  0F30  3A0F               	xorlw	15	; case 8
  2433  0F31  1903               	skipnz
  2434  0F32  2F06               	goto	l1902
  2435  0F33  3A01               	xorlw	1	; case 9
  2436  0F34  1903               	skipnz
  2437  0F35  2F0B               	goto	l1908
  2438  0F36  2F37               	goto	l189
  2439  0F37                     l189:
  2440  0F37  0008               	return
  2441  0F38                     __end_of_int_string:
  2442                           
  2443                           	psect	text4
  2444  0C4A                     __ptext4:	
  2445 ;; *************** function _enviar_letra *****************
  2446 ;; Defined at:
  2447 ;;		line 34 in file "PRINT_SERIAL.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  letra           1    wreg     unsigned char 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  letra           1    0[BANK0 ] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2461 ;;      Params:         0       0       0       0       0
  2462 ;;      Locals:         0       1       0       0       0
  2463 ;;      Temps:          0       0       0       0       0
  2464 ;;      Totals:         0       1       0       0       0
  2465 ;;Total ram usage:        1 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    2
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;;		_println
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function _enviar_letra
  2478  0C4A                     _enviar_letra:
  2479                           
  2480                           ;incstack = 0
  2481                           ; Regs used in _enviar_letra: [wreg]
  2482                           ;enviar_letra@letra stored from wreg
  2483  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  2484  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  2485  0C4C  00A0               	movwf	enviar_letra@letra
  2486  0C4D                     l1922:
  2487  0C4D                     l181:	
  2488                           ;PRINT_SERIAL.c: 35:     while(!TXIF);
  2489                           
  2490  0C4D  1E0C               	btfss	12,4	;volatile
  2491  0C4E  2C50               	goto	u1441
  2492  0C4F  2C51               	goto	u1440
  2493  0C50                     u1441:
  2494  0C50  2C4D               	goto	l181
  2495  0C51                     u1440:
  2496  0C51                     l1924:
  2497                           
  2498                           ;PRINT_SERIAL.c: 36:     TXREG = letra;
  2499  0C51  0820               	movf	enviar_letra@letra,w
  2500  0C52  0099               	movwf	25	;volatile
  2501  0C53                     l184:
  2502  0C53  0008               	return
  2503  0C54                     __end_of_enviar_letra:
  2504                           
  2505                           	psect	text5
  2506  0691                     __ptext5:	
  2507 ;; *************** function ___xxtofl *****************
  2508 ;; Defined at:
  2509 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  sign            1    wreg     unsigned char 
  2512 ;;  val             4    0[BANK0 ] long 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  sign            1    8[BANK0 ] unsigned char 
  2515 ;;  arg             4   10[BANK0 ] unsigned long 
  2516 ;;  exp             1    9[BANK0 ] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  4    0[BANK0 ] unsigned char 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2526 ;;      Params:         0       4       0       0       0
  2527 ;;      Locals:         0       6       0       0       0
  2528 ;;      Temps:          0       4       0       0       0
  2529 ;;      Totals:         0      14       0       0       0
  2530 ;;Total ram usage:       14 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    2
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_main
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           
  2541                           ;psect for function ___xxtofl
  2542  0691                     ___xxtofl:
  2543                           
  2544                           ;incstack = 0
  2545                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2546                           ;___xxtofl@sign stored from wreg
  2547  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2548  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2549  0693  00A8               	movwf	___xxtofl@sign
  2550  0694                     l2108:
  2551  0694  0828               	movf	___xxtofl@sign,w
  2552  0695  1903               	btfsc	3,2
  2553  0696  2E98               	goto	u1921
  2554  0697  2E99               	goto	u1920
  2555  0698                     u1921:
  2556  0698  2EAD               	goto	l2114
  2557  0699                     u1920:
  2558  0699                     l2110:
  2559  0699  1FA3               	btfss	___xxtofl@val+3,7
  2560  069A  2E9C               	goto	u1931
  2561  069B  2E9D               	goto	u1930
  2562  069C                     u1931:
  2563  069C  2EAD               	goto	l2114
  2564  069D                     u1930:
  2565  069D                     l2112:
  2566  069D  0920               	comf	___xxtofl@val,w
  2567  069E  00AA               	movwf	___xxtofl@arg
  2568  069F  0921               	comf	___xxtofl@val+1,w
  2569  06A0  00AB               	movwf	___xxtofl@arg+1
  2570  06A1  0922               	comf	___xxtofl@val+2,w
  2571  06A2  00AC               	movwf	___xxtofl@arg+2
  2572  06A3  0923               	comf	___xxtofl@val+3,w
  2573  06A4  00AD               	movwf	___xxtofl@arg+3
  2574  06A5  0AAA               	incf	___xxtofl@arg,f
  2575  06A6  1903               	skipnz
  2576  06A7  0AAB               	incf	___xxtofl@arg+1,f
  2577  06A8  1903               	skipnz
  2578  06A9  0AAC               	incf	___xxtofl@arg+2,f
  2579  06AA  1903               	skipnz
  2580  06AB  0AAD               	incf	___xxtofl@arg+3,f
  2581  06AC  2EB5               	goto	l789
  2582  06AD                     l2114:
  2583  06AD  0823               	movf	___xxtofl@val+3,w
  2584  06AE  00AD               	movwf	___xxtofl@arg+3
  2585  06AF  0822               	movf	___xxtofl@val+2,w
  2586  06B0  00AC               	movwf	___xxtofl@arg+2
  2587  06B1  0821               	movf	___xxtofl@val+1,w
  2588  06B2  00AB               	movwf	___xxtofl@arg+1
  2589  06B3  0820               	movf	___xxtofl@val,w
  2590  06B4  00AA               	movwf	___xxtofl@arg
  2591  06B5                     l789:
  2592  06B5  0823               	movf	___xxtofl@val+3,w
  2593  06B6  0422               	iorwf	___xxtofl@val+2,w
  2594  06B7  0421               	iorwf	___xxtofl@val+1,w
  2595  06B8  0420               	iorwf	___xxtofl@val,w
  2596  06B9  1D03               	skipz
  2597  06BA  2EBC               	goto	u1941
  2598  06BB  2EBD               	goto	u1940
  2599  06BC                     u1941:
  2600  06BC  2EC6               	goto	l2120
  2601  06BD                     u1940:
  2602  06BD                     l2116:
  2603  06BD  3000               	movlw	0
  2604  06BE  00A3               	movwf	?___xxtofl+3
  2605  06BF  3000               	movlw	0
  2606  06C0  00A2               	movwf	?___xxtofl+2
  2607  06C1  3000               	movlw	0
  2608  06C2  00A1               	movwf	?___xxtofl+1
  2609  06C3  3000               	movlw	0
  2610  06C4  00A0               	movwf	?___xxtofl
  2611  06C5  2F4C               	goto	l791
  2612  06C6                     l2120:
  2613  06C6  3096               	movlw	150
  2614  06C7  00A4               	movwf	??___xxtofl
  2615  06C8  0824               	movf	??___xxtofl,w
  2616  06C9  00A9               	movwf	___xxtofl@exp
  2617  06CA  2ED8               	goto	l2124
  2618  06CB                     l2122:
  2619  06CB  3001               	movlw	1
  2620  06CC  00A4               	movwf	??___xxtofl
  2621  06CD  0824               	movf	??___xxtofl,w
  2622  06CE  07A9               	addwf	___xxtofl@exp,f
  2623  06CF  3001               	movlw	1
  2624  06D0                     u1955:
  2625  06D0  1003               	clrc
  2626  06D1  0CAD               	rrf	___xxtofl@arg+3,f
  2627  06D2  0CAC               	rrf	___xxtofl@arg+2,f
  2628  06D3  0CAB               	rrf	___xxtofl@arg+1,f
  2629  06D4  0CAA               	rrf	___xxtofl@arg,f
  2630  06D5  3EFF               	addlw	-1
  2631  06D6  1D03               	skipz
  2632  06D7  2ED0               	goto	u1955
  2633  06D8                     l2124:
  2634  06D8  30FE               	movlw	254
  2635  06D9  052D               	andwf	___xxtofl@arg+3,w
  2636  06DA  1D03               	btfss	3,2
  2637  06DB  2EDD               	goto	u1961
  2638  06DC  2EDE               	goto	u1960
  2639  06DD                     u1961:
  2640  06DD  2ECB               	goto	l2122
  2641  06DE                     u1960:
  2642  06DE  2EFA               	goto	l795
  2643  06DF                     l2126:
  2644  06DF  3001               	movlw	1
  2645  06E0  00A4               	movwf	??___xxtofl
  2646  06E1  0824               	movf	??___xxtofl,w
  2647  06E2  07A9               	addwf	___xxtofl@exp,f
  2648  06E3                     l2128:
  2649  06E3  3001               	movlw	1
  2650  06E4  07AA               	addwf	___xxtofl@arg,f
  2651  06E5  3000               	movlw	0
  2652  06E6  1803               	skipnc
  2653  06E7  3001               	movlw	1
  2654  06E8  07AB               	addwf	___xxtofl@arg+1,f
  2655  06E9  3000               	movlw	0
  2656  06EA  1803               	skipnc
  2657  06EB  3001               	movlw	1
  2658  06EC  07AC               	addwf	___xxtofl@arg+2,f
  2659  06ED  3000               	movlw	0
  2660  06EE  1803               	skipnc
  2661  06EF  3001               	movlw	1
  2662  06F0  07AD               	addwf	___xxtofl@arg+3,f
  2663  06F1                     l2130:
  2664  06F1  3001               	movlw	1
  2665  06F2                     u1975:
  2666  06F2  1003               	clrc
  2667  06F3  0CAD               	rrf	___xxtofl@arg+3,f
  2668  06F4  0CAC               	rrf	___xxtofl@arg+2,f
  2669  06F5  0CAB               	rrf	___xxtofl@arg+1,f
  2670  06F6  0CAA               	rrf	___xxtofl@arg,f
  2671  06F7  3EFF               	addlw	-1
  2672  06F8  1D03               	skipz
  2673  06F9  2EF2               	goto	u1975
  2674  06FA                     l795:
  2675  06FA  30FF               	movlw	255
  2676  06FB  052D               	andwf	___xxtofl@arg+3,w
  2677  06FC  1D03               	btfss	3,2
  2678  06FD  2EFF               	goto	u1981
  2679  06FE  2F00               	goto	u1980
  2680  06FF                     u1981:
  2681  06FF  2EDF               	goto	l2126
  2682  0700                     u1980:
  2683  0700  2F0C               	goto	l2134
  2684  0701                     l2132:
  2685  0701  3001               	movlw	1
  2686  0702  02A9               	subwf	___xxtofl@exp,f
  2687  0703  3001               	movlw	1
  2688  0704  00A4               	movwf	??___xxtofl
  2689  0705                     u1995:
  2690  0705  1003               	clrc
  2691  0706  0DAA               	rlf	___xxtofl@arg,f
  2692  0707  0DAB               	rlf	___xxtofl@arg+1,f
  2693  0708  0DAC               	rlf	___xxtofl@arg+2,f
  2694  0709  0DAD               	rlf	___xxtofl@arg+3,f
  2695  070A  0BA4               	decfsz	??___xxtofl,f
  2696  070B  2F05               	goto	u1995
  2697  070C                     l2134:
  2698  070C  1BAC               	btfsc	___xxtofl@arg+2,7
  2699  070D  2F0F               	goto	u2001
  2700  070E  2F10               	goto	u2000
  2701  070F                     u2001:
  2702  070F  2F16               	goto	l802
  2703  0710                     u2000:
  2704  0710                     l2136:
  2705  0710  3002               	movlw	2
  2706  0711  0229               	subwf	___xxtofl@exp,w
  2707  0712  1803               	skipnc
  2708  0713  2F15               	goto	u2011
  2709  0714  2F16               	goto	u2010
  2710  0715                     u2011:
  2711  0715  2F01               	goto	l2132
  2712  0716                     u2010:
  2713  0716                     l802:
  2714  0716  1829               	btfsc	___xxtofl@exp,0
  2715  0717  2F19               	goto	u2021
  2716  0718  2F1A               	goto	u2020
  2717  0719                     u2021:
  2718  0719  2F22               	goto	l803
  2719  071A                     u2020:
  2720  071A                     l2138:
  2721  071A  30FF               	movlw	255
  2722  071B  05AA               	andwf	___xxtofl@arg,f
  2723  071C  30FF               	movlw	255
  2724  071D  05AB               	andwf	___xxtofl@arg+1,f
  2725  071E  307F               	movlw	127
  2726  071F  05AC               	andwf	___xxtofl@arg+2,f
  2727  0720  30FF               	movlw	255
  2728  0721  05AD               	andwf	___xxtofl@arg+3,f
  2729  0722                     l803:
  2730  0722  1003               	clrc
  2731  0723  0CA9               	rrf	___xxtofl@exp,f
  2732  0724                     l2140:
  2733  0724  0829               	movf	___xxtofl@exp,w
  2734  0725  00A4               	movwf	??___xxtofl
  2735  0726  01A5               	clrf	??___xxtofl+1
  2736  0727  01A6               	clrf	??___xxtofl+2
  2737  0728  01A7               	clrf	??___xxtofl+3
  2738  0729  3018               	movlw	24
  2739  072A                     u2035:
  2740  072A  1003               	clrc
  2741  072B  0DA4               	rlf	??___xxtofl,f
  2742  072C  0DA5               	rlf	??___xxtofl+1,f
  2743  072D  0DA6               	rlf	??___xxtofl+2,f
  2744  072E  0DA7               	rlf	??___xxtofl+3,f
  2745  072F                     u2030:
  2746  072F  3EFF               	addlw	-1
  2747  0730  1D03               	skipz
  2748  0731  2F2A               	goto	u2035
  2749  0732  0824               	movf	??___xxtofl,w
  2750  0733  04AA               	iorwf	___xxtofl@arg,f
  2751  0734  0825               	movf	??___xxtofl+1,w
  2752  0735  04AB               	iorwf	___xxtofl@arg+1,f
  2753  0736  0826               	movf	??___xxtofl+2,w
  2754  0737  04AC               	iorwf	___xxtofl@arg+2,f
  2755  0738  0827               	movf	??___xxtofl+3,w
  2756  0739  04AD               	iorwf	___xxtofl@arg+3,f
  2757  073A                     l2142:
  2758  073A  0828               	movf	___xxtofl@sign,w
  2759  073B  1903               	btfsc	3,2
  2760  073C  2F3E               	goto	u2041
  2761  073D  2F3F               	goto	u2040
  2762  073E                     u2041:
  2763  073E  2F44               	goto	l2148
  2764  073F                     u2040:
  2765  073F                     l2144:
  2766  073F  1FA3               	btfss	___xxtofl@val+3,7
  2767  0740  2F42               	goto	u2051
  2768  0741  2F43               	goto	u2050
  2769  0742                     u2051:
  2770  0742  2F44               	goto	l2148
  2771  0743                     u2050:
  2772  0743                     l2146:
  2773  0743  17AD               	bsf	___xxtofl@arg+3,7
  2774  0744                     l2148:
  2775  0744  082D               	movf	___xxtofl@arg+3,w
  2776  0745  00A3               	movwf	?___xxtofl+3
  2777  0746  082C               	movf	___xxtofl@arg+2,w
  2778  0747  00A2               	movwf	?___xxtofl+2
  2779  0748  082B               	movf	___xxtofl@arg+1,w
  2780  0749  00A1               	movwf	?___xxtofl+1
  2781  074A  082A               	movf	___xxtofl@arg,w
  2782  074B  00A0               	movwf	?___xxtofl
  2783  074C                     l791:
  2784  074C  0008               	return
  2785  074D                     __end_of___xxtofl:
  2786                           
  2787                           	psect	text6
  2788  074D                     __ptext6:	
  2789 ;; *************** function ___fltol *****************
  2790 ;; Defined at:
  2791 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  f1              4   40[BANK0 ] unsigned char 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  exp1            1   50[BANK0 ] unsigned char 
  2796 ;;  sign1           1   49[BANK0 ] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  4   40[BANK0 ] long 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2806 ;;      Params:         0       4       0       0       0
  2807 ;;      Locals:         0       2       0       0       0
  2808 ;;      Temps:          0       5       0       0       0
  2809 ;;      Totals:         0      11       0       0       0
  2810 ;;Total ram usage:       11 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    2
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_main
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           
  2821                           ;psect for function ___fltol
  2822  074D                     ___fltol:
  2823  074D                     l1932:	
  2824                           ;incstack = 0
  2825                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2826                           
  2827  074D  1003               	clrc
  2828  074E  1283               	bcf	3,5	;RP0=0, select bank0
  2829  074F  1303               	bcf	3,6	;RP1=0, select bank0
  2830  0750  0D4A               	rlf	___fltol@f1+2,w
  2831  0751  0D4B               	rlf	___fltol@f1+3,w
  2832  0752  00CC               	movwf	??___fltol
  2833  0753  084C               	movf	??___fltol,w
  2834  0754  00D2               	movwf	___fltol@exp1
  2835  0755  0852               	movf	___fltol@exp1,w
  2836  0756  1D03               	btfss	3,2
  2837  0757  2F59               	goto	u1451
  2838  0758  2F5A               	goto	u1450
  2839  0759                     u1451:
  2840  0759  2F63               	goto	l1938
  2841  075A                     u1450:
  2842  075A                     l1934:
  2843  075A  3000               	movlw	0
  2844  075B  00CB               	movwf	?___fltol+3
  2845  075C  3000               	movlw	0
  2846  075D  00CA               	movwf	?___fltol+2
  2847  075E  3000               	movlw	0
  2848  075F  00C9               	movwf	?___fltol+1
  2849  0760  3000               	movlw	0
  2850  0761  00C8               	movwf	?___fltol
  2851  0762  2FC8               	goto	l542
  2852  0763                     l1938:
  2853  0763  0848               	movf	___fltol@f1,w
  2854  0764  00CC               	movwf	??___fltol
  2855  0765  0849               	movf	___fltol@f1+1,w
  2856  0766  00CD               	movwf	??___fltol+1
  2857  0767  084A               	movf	___fltol@f1+2,w
  2858  0768  00CE               	movwf	??___fltol+2
  2859  0769  084B               	movf	___fltol@f1+3,w
  2860  076A  00CF               	movwf	??___fltol+3
  2861  076B  301F               	movlw	31
  2862  076C                     u1465:
  2863  076C  1003               	clrc
  2864  076D  0CCF               	rrf	??___fltol+3,f
  2865  076E  0CCE               	rrf	??___fltol+2,f
  2866  076F  0CCD               	rrf	??___fltol+1,f
  2867  0770  0CCC               	rrf	??___fltol,f
  2868  0771                     u1460:
  2869  0771  3EFF               	addlw	-1
  2870  0772  1D03               	skipz
  2871  0773  2F6C               	goto	u1465
  2872  0774  084C               	movf	??___fltol,w
  2873  0775  00D0               	movwf	??___fltol+4
  2874  0776  0850               	movf	??___fltol+4,w
  2875  0777  00D1               	movwf	___fltol@sign1
  2876  0778                     l1940:
  2877  0778  17CA               	bsf	___fltol@f1+2,7
  2878  0779                     l1942:
  2879  0779  30FF               	movlw	255
  2880  077A  05C8               	andwf	___fltol@f1,f
  2881  077B  30FF               	movlw	255
  2882  077C  05C9               	andwf	___fltol@f1+1,f
  2883  077D  30FF               	movlw	255
  2884  077E  05CA               	andwf	___fltol@f1+2,f
  2885  077F  3000               	movlw	0
  2886  0780  05CB               	andwf	___fltol@f1+3,f
  2887  0781                     l1944:
  2888  0781  3096               	movlw	150
  2889  0782  02D2               	subwf	___fltol@exp1,f
  2890  0783                     l1946:
  2891  0783  1FD2               	btfss	___fltol@exp1,7
  2892  0784  2F86               	goto	u1471
  2893  0785  2F87               	goto	u1470
  2894  0786                     u1471:
  2895  0786  2FA1               	goto	l1956
  2896  0787                     u1470:
  2897  0787                     l1948:
  2898  0787  0852               	movf	___fltol@exp1,w
  2899  0788  3A80               	xorlw	128
  2900  0789  3E97               	addlw	151
  2901  078A  1803               	skipnc
  2902  078B  2F8D               	goto	u1481
  2903  078C  2F8E               	goto	u1480
  2904  078D                     u1481:
  2905  078D  2F8F               	goto	l1954
  2906  078E                     u1480:
  2907  078E  2F5A               	goto	l1934
  2908  078F                     l1954:
  2909  078F  3001               	movlw	1
  2910  0790                     u1495:
  2911  0790  1003               	clrc
  2912  0791  0CCB               	rrf	___fltol@f1+3,f
  2913  0792  0CCA               	rrf	___fltol@f1+2,f
  2914  0793  0CC9               	rrf	___fltol@f1+1,f
  2915  0794  0CC8               	rrf	___fltol@f1,f
  2916  0795  3EFF               	addlw	-1
  2917  0796  1D03               	skipz
  2918  0797  2F90               	goto	u1495
  2919  0798  3001               	movlw	1
  2920  0799  00CC               	movwf	??___fltol
  2921  079A  084C               	movf	??___fltol,w
  2922  079B  07D2               	addwf	___fltol@exp1,f
  2923  079C  1D03               	btfss	3,2
  2924  079D  2F9F               	goto	u1501
  2925  079E  2FA0               	goto	u1500
  2926  079F                     u1501:
  2927  079F  2F8F               	goto	l1954
  2928  07A0                     u1500:
  2929  07A0  2FB8               	goto	l1964
  2930  07A1                     l1956:
  2931  07A1  3020               	movlw	32
  2932  07A2  0252               	subwf	___fltol@exp1,w
  2933  07A3  1C03               	skipc
  2934  07A4  2FA6               	goto	u1511
  2935  07A5  2FA7               	goto	u1510
  2936  07A6                     u1511:
  2937  07A6  2FB3               	goto	l549
  2938  07A7                     u1510:
  2939  07A7  2F5A               	goto	l1934
  2940  07A8                     l1962:
  2941  07A8  3001               	movlw	1
  2942  07A9  00CC               	movwf	??___fltol
  2943  07AA                     u1525:
  2944  07AA  1003               	clrc
  2945  07AB  0DC8               	rlf	___fltol@f1,f
  2946  07AC  0DC9               	rlf	___fltol@f1+1,f
  2947  07AD  0DCA               	rlf	___fltol@f1+2,f
  2948  07AE  0DCB               	rlf	___fltol@f1+3,f
  2949  07AF  0BCC               	decfsz	??___fltol,f
  2950  07B0  2FAA               	goto	u1525
  2951  07B1  3001               	movlw	1
  2952  07B2  02D2               	subwf	___fltol@exp1,f
  2953  07B3                     l549:
  2954  07B3  0852               	movf	___fltol@exp1,w
  2955  07B4  1D03               	btfss	3,2
  2956  07B5  2FB7               	goto	u1531
  2957  07B6  2FB8               	goto	u1530
  2958  07B7                     u1531:
  2959  07B7  2FA8               	goto	l1962
  2960  07B8                     u1530:
  2961  07B8                     l1964:
  2962  07B8  0851               	movf	___fltol@sign1,w
  2963  07B9  1903               	btfsc	3,2
  2964  07BA  2FBC               	goto	u1541
  2965  07BB  2FBD               	goto	u1540
  2966  07BC                     u1541:
  2967  07BC  2FC8               	goto	l552
  2968  07BD                     u1540:
  2969  07BD                     l1966:
  2970  07BD  09C8               	comf	___fltol@f1,f
  2971  07BE  09C9               	comf	___fltol@f1+1,f
  2972  07BF  09CA               	comf	___fltol@f1+2,f
  2973  07C0  09CB               	comf	___fltol@f1+3,f
  2974  07C1  0AC8               	incf	___fltol@f1,f
  2975  07C2  1903               	skipnz
  2976  07C3  0AC9               	incf	___fltol@f1+1,f
  2977  07C4  1903               	skipnz
  2978  07C5  0ACA               	incf	___fltol@f1+2,f
  2979  07C6  1903               	skipnz
  2980  07C7  0ACB               	incf	___fltol@f1+3,f
  2981  07C8                     l552:
  2982  07C8                     l542:
  2983  07C8  0008               	return
  2984  07C9                     __end_of___fltol:
  2985                           
  2986                           	psect	text7
  2987  002F                     __ptext7:	
  2988 ;; *************** function ___flmul *****************
  2989 ;; Defined at:
  2990 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  b               4   14[BANK0 ] long 
  2993 ;;  a               4   18[BANK0 ] long 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  prod            4   34[BANK0 ] struct .
  2996 ;;  grs             4   28[BANK0 ] unsigned long 
  2997 ;;  temp            2   38[BANK0 ] struct .
  2998 ;;  bexp            1   33[BANK0 ] unsigned char 
  2999 ;;  aexp            1   32[BANK0 ] unsigned char 
  3000 ;;  sign            1   27[BANK0 ] unsigned char 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  4   14[BANK0 ] unsigned char 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3010 ;;      Params:         0       8       0       0       0
  3011 ;;      Locals:         0      13       0       0       0
  3012 ;;      Temps:          0       5       0       0       0
  3013 ;;      Totals:         0      26       0       0       0
  3014 ;;Total ram usage:       26 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    3
  3017 ;; This function calls:
  3018 ;;		__Umul8_16
  3019 ;; This function is called by:
  3020 ;;		_main
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           
  3025                           ;psect for function ___flmul
  3026  002F                     ___flmul:
  3027  002F                     l1968:	
  3028                           ;incstack = 0
  3029                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3030                           
  3031  002F  1283               	bcf	3,5	;RP0=0, select bank0
  3032  0030  1303               	bcf	3,6	;RP1=0, select bank0
  3033  0031  0831               	movf	___flmul@b+3,w
  3034  0032  3980               	andlw	128
  3035  0033  00B6               	movwf	??___flmul
  3036  0034  0836               	movf	??___flmul,w
  3037  0035  00BB               	movwf	___flmul@sign
  3038  0036                     l1970:
  3039  0036  0831               	movf	___flmul@b+3,w
  3040  0037  00B6               	movwf	??___flmul
  3041  0038  0736               	addwf	??___flmul,w
  3042  0039  00B7               	movwf	??___flmul+1
  3043  003A  0837               	movf	??___flmul+1,w
  3044  003B  00C1               	movwf	___flmul@bexp
  3045  003C                     l1972:
  3046  003C  1FB0               	btfss	___flmul@b+2,7
  3047  003D  283F               	goto	u1551
  3048  003E  2840               	goto	u1550
  3049  003F                     u1551:
  3050  003F  2841               	goto	l1976
  3051  0040                     u1550:
  3052  0040                     l1974:
  3053  0040  1441               	bsf	___flmul@bexp,0
  3054  0041                     l1976:
  3055  0041  0841               	movf	___flmul@bexp,w
  3056  0042  1903               	btfsc	3,2
  3057  0043  2845               	goto	u1561
  3058  0044  2846               	goto	u1560
  3059  0045                     u1561:
  3060  0045  2855               	goto	l1984
  3061  0046                     u1560:
  3062  0046                     l1978:
  3063  0046  0A41               	incf	___flmul@bexp,w
  3064  0047  1D03               	btfss	3,2
  3065  0048  284A               	goto	u1571
  3066  0049  284B               	goto	u1570
  3067  004A                     u1571:
  3068  004A  2853               	goto	l1982
  3069  004B                     u1570:
  3070  004B                     l1980:
  3071  004B  3000               	movlw	0
  3072  004C  00B1               	movwf	___flmul@b+3
  3073  004D  3000               	movlw	0
  3074  004E  00B0               	movwf	___flmul@b+2
  3075  004F  3000               	movlw	0
  3076  0050  00AF               	movwf	___flmul@b+1
  3077  0051  3000               	movlw	0
  3078  0052  00AE               	movwf	___flmul@b
  3079  0053                     l1982:
  3080  0053  17B0               	bsf	___flmul@b+2,7
  3081  0054  285D               	goto	l1986
  3082  0055                     l1984:
  3083  0055  3000               	movlw	0
  3084  0056  00B1               	movwf	___flmul@b+3
  3085  0057  3000               	movlw	0
  3086  0058  00B0               	movwf	___flmul@b+2
  3087  0059  3000               	movlw	0
  3088  005A  00AF               	movwf	___flmul@b+1
  3089  005B  3000               	movlw	0
  3090  005C  00AE               	movwf	___flmul@b
  3091  005D                     l1986:
  3092  005D  0835               	movf	___flmul@a+3,w
  3093  005E  3980               	andlw	128
  3094  005F  00B6               	movwf	??___flmul
  3095  0060  0836               	movf	??___flmul,w
  3096  0061  06BB               	xorwf	___flmul@sign,f
  3097  0062                     l1988:
  3098  0062  0835               	movf	___flmul@a+3,w
  3099  0063  00B6               	movwf	??___flmul
  3100  0064  0736               	addwf	??___flmul,w
  3101  0065  00B7               	movwf	??___flmul+1
  3102  0066  0837               	movf	??___flmul+1,w
  3103  0067  00C0               	movwf	___flmul@aexp
  3104  0068                     l1990:
  3105  0068  1FB4               	btfss	___flmul@a+2,7
  3106  0069  286B               	goto	u1581
  3107  006A  286C               	goto	u1580
  3108  006B                     u1581:
  3109  006B  286D               	goto	l1994
  3110  006C                     u1580:
  3111  006C                     l1992:
  3112  006C  1440               	bsf	___flmul@aexp,0
  3113  006D                     l1994:
  3114  006D  0840               	movf	___flmul@aexp,w
  3115  006E  1903               	btfsc	3,2
  3116  006F  2871               	goto	u1591
  3117  0070  2872               	goto	u1590
  3118  0071                     u1591:
  3119  0071  2881               	goto	l2002
  3120  0072                     u1590:
  3121  0072                     l1996:
  3122  0072  0A40               	incf	___flmul@aexp,w
  3123  0073  1D03               	btfss	3,2
  3124  0074  2876               	goto	u1601
  3125  0075  2877               	goto	u1600
  3126  0076                     u1601:
  3127  0076  287F               	goto	l2000
  3128  0077                     u1600:
  3129  0077                     l1998:
  3130  0077  3000               	movlw	0
  3131  0078  00B5               	movwf	___flmul@a+3
  3132  0079  3000               	movlw	0
  3133  007A  00B4               	movwf	___flmul@a+2
  3134  007B  3000               	movlw	0
  3135  007C  00B3               	movwf	___flmul@a+1
  3136  007D  3000               	movlw	0
  3137  007E  00B2               	movwf	___flmul@a
  3138  007F                     l2000:
  3139  007F  17B4               	bsf	___flmul@a+2,7
  3140  0080  2889               	goto	l2004
  3141  0081                     l2002:
  3142  0081  3000               	movlw	0
  3143  0082  00B5               	movwf	___flmul@a+3
  3144  0083  3000               	movlw	0
  3145  0084  00B4               	movwf	___flmul@a+2
  3146  0085  3000               	movlw	0
  3147  0086  00B3               	movwf	___flmul@a+1
  3148  0087  3000               	movlw	0
  3149  0088  00B2               	movwf	___flmul@a
  3150  0089                     l2004:
  3151  0089  0840               	movf	___flmul@aexp,w
  3152  008A  1903               	btfsc	3,2
  3153  008B  288D               	goto	u1611
  3154  008C  288E               	goto	u1610
  3155  008D                     u1611:
  3156  008D  2893               	goto	l2008
  3157  008E                     u1610:
  3158  008E                     l2006:
  3159  008E  0841               	movf	___flmul@bexp,w
  3160  008F  1D03               	btfss	3,2
  3161  0090  2892               	goto	u1621
  3162  0091  2893               	goto	u1620
  3163  0092                     u1621:
  3164  0092  289C               	goto	l2012
  3165  0093                     u1620:
  3166  0093                     l2008:
  3167  0093  3000               	movlw	0
  3168  0094  00B1               	movwf	?___flmul+3
  3169  0095  3000               	movlw	0
  3170  0096  00B0               	movwf	?___flmul+2
  3171  0097  3000               	movlw	0
  3172  0098  00AF               	movwf	?___flmul+1
  3173  0099  3000               	movlw	0
  3174  009A  00AE               	movwf	?___flmul
  3175  009B  2B8F               	goto	l745
  3176  009C                     l2012:
  3177  009C  082E               	movf	___flmul@b,w
  3178  009D  00B6               	movwf	??___flmul
  3179  009E  0836               	movf	??___flmul,w
  3180  009F  00A0               	movwf	__Umul8_16@multiplicand
  3181  00A0  0834               	movf	___flmul@a+2,w
  3182  00A1  120A  158A  2523  120A  118A  	fcall	__Umul8_16
  3183  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  3184  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  3185  00A8  0821               	movf	?__Umul8_16+1,w
  3186  00A9  00C7               	movwf	___flmul@temp+1
  3187  00AA  0820               	movf	?__Umul8_16,w
  3188  00AB  00C6               	movwf	___flmul@temp
  3189  00AC                     l2014:
  3190  00AC  0846               	movf	___flmul@temp,w
  3191  00AD  00B6               	movwf	??___flmul
  3192  00AE  01B7               	clrf	??___flmul+1
  3193  00AF  01B8               	clrf	??___flmul+2
  3194  00B0  01B9               	clrf	??___flmul+3
  3195  00B1  0839               	movf	??___flmul+3,w
  3196  00B2  00BF               	movwf	___flmul@grs+3
  3197  00B3  0838               	movf	??___flmul+2,w
  3198  00B4  00BE               	movwf	___flmul@grs+2
  3199  00B5  0837               	movf	??___flmul+1,w
  3200  00B6  00BD               	movwf	___flmul@grs+1
  3201  00B7  0836               	movf	??___flmul,w
  3202  00B8  00BC               	movwf	___flmul@grs
  3203  00B9                     l2016:
  3204  00B9  0847               	movf	___flmul@temp+1,w
  3205  00BA  00B6               	movwf	??___flmul
  3206  00BB  01B7               	clrf	??___flmul+1
  3207  00BC  01B8               	clrf	??___flmul+2
  3208  00BD  01B9               	clrf	??___flmul+3
  3209  00BE  0839               	movf	??___flmul+3,w
  3210  00BF  00C5               	movwf	___flmul@prod+3
  3211  00C0  0838               	movf	??___flmul+2,w
  3212  00C1  00C4               	movwf	___flmul@prod+2
  3213  00C2  0837               	movf	??___flmul+1,w
  3214  00C3  00C3               	movwf	___flmul@prod+1
  3215  00C4  0836               	movf	??___flmul,w
  3216  00C5  00C2               	movwf	___flmul@prod
  3217  00C6  082F               	movf	___flmul@b+1,w
  3218  00C7  00B6               	movwf	??___flmul
  3219  00C8  0836               	movf	??___flmul,w
  3220  00C9  00A0               	movwf	__Umul8_16@multiplicand
  3221  00CA  0833               	movf	___flmul@a+1,w
  3222  00CB  120A  158A  2523  120A  118A  	fcall	__Umul8_16
  3223  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  3224  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  3225  00D2  0821               	movf	?__Umul8_16+1,w
  3226  00D3  00C7               	movwf	___flmul@temp+1
  3227  00D4  0820               	movf	?__Umul8_16,w
  3228  00D5  00C6               	movwf	___flmul@temp
  3229  00D6                     l2018:
  3230  00D6  0846               	movf	___flmul@temp,w
  3231  00D7  00B6               	movwf	??___flmul
  3232  00D8  01B7               	clrf	??___flmul+1
  3233  00D9  01B8               	clrf	??___flmul+2
  3234  00DA  01B9               	clrf	??___flmul+3
  3235  00DB  0836               	movf	??___flmul,w
  3236  00DC  07BC               	addwf	___flmul@grs,f
  3237  00DD  0837               	movf	??___flmul+1,w
  3238  00DE  1103               	clrz
  3239  00DF  1803               	skipnc
  3240  00E0  3E01               	addlw	1
  3241  00E1  1903               	skipnz
  3242  00E2  28E4               	goto	u1631
  3243  00E3  07BD               	addwf	___flmul@grs+1,f
  3244  00E4                     u1631:
  3245  00E4  0838               	movf	??___flmul+2,w
  3246  00E5  1103               	clrz
  3247  00E6  1803               	skipnc
  3248  00E7  3E01               	addlw	1
  3249  00E8  1903               	skipnz
  3250  00E9  28EB               	goto	u1632
  3251  00EA  07BE               	addwf	___flmul@grs+2,f
  3252  00EB                     u1632:
  3253  00EB  0839               	movf	??___flmul+3,w
  3254  00EC  1103               	clrz
  3255  00ED  1803               	skipnc
  3256  00EE  3E01               	addlw	1
  3257  00EF  1903               	skipnz
  3258  00F0  28F2               	goto	u1633
  3259  00F1  07BF               	addwf	___flmul@grs+3,f
  3260  00F2                     u1633:
  3261  00F2                     l2020:
  3262  00F2  0847               	movf	___flmul@temp+1,w
  3263  00F3  00B6               	movwf	??___flmul
  3264  00F4  01B7               	clrf	??___flmul+1
  3265  00F5  01B8               	clrf	??___flmul+2
  3266  00F6  01B9               	clrf	??___flmul+3
  3267  00F7  0836               	movf	??___flmul,w
  3268  00F8  07C2               	addwf	___flmul@prod,f
  3269  00F9  0837               	movf	??___flmul+1,w
  3270  00FA  1103               	clrz
  3271  00FB  1803               	skipnc
  3272  00FC  3E01               	addlw	1
  3273  00FD  1903               	skipnz
  3274  00FE  2900               	goto	u1641
  3275  00FF  07C3               	addwf	___flmul@prod+1,f
  3276  0100                     u1641:
  3277  0100  0838               	movf	??___flmul+2,w
  3278  0101  1103               	clrz
  3279  0102  1803               	skipnc
  3280  0103  3E01               	addlw	1
  3281  0104  1903               	skipnz
  3282  0105  2907               	goto	u1642
  3283  0106  07C4               	addwf	___flmul@prod+2,f
  3284  0107                     u1642:
  3285  0107  0839               	movf	??___flmul+3,w
  3286  0108  1103               	clrz
  3287  0109  1803               	skipnc
  3288  010A  3E01               	addlw	1
  3289  010B  1903               	skipnz
  3290  010C  290E               	goto	u1643
  3291  010D  07C5               	addwf	___flmul@prod+3,f
  3292  010E                     u1643:
  3293  010E  0830               	movf	___flmul@b+2,w
  3294  010F  00B6               	movwf	??___flmul
  3295  0110  0836               	movf	??___flmul,w
  3296  0111  00A0               	movwf	__Umul8_16@multiplicand
  3297  0112  0832               	movf	___flmul@a,w
  3298  0113  120A  158A  2523  120A  118A  	fcall	__Umul8_16
  3299  0118  1283               	bcf	3,5	;RP0=0, select bank0
  3300  0119  1303               	bcf	3,6	;RP1=0, select bank0
  3301  011A  0821               	movf	?__Umul8_16+1,w
  3302  011B  00C7               	movwf	___flmul@temp+1
  3303  011C  0820               	movf	?__Umul8_16,w
  3304  011D  00C6               	movwf	___flmul@temp
  3305  011E                     l2022:
  3306  011E  0846               	movf	___flmul@temp,w
  3307  011F  00B6               	movwf	??___flmul
  3308  0120  01B7               	clrf	??___flmul+1
  3309  0121  01B8               	clrf	??___flmul+2
  3310  0122  01B9               	clrf	??___flmul+3
  3311  0123  0836               	movf	??___flmul,w
  3312  0124  07BC               	addwf	___flmul@grs,f
  3313  0125  0837               	movf	??___flmul+1,w
  3314  0126  1103               	clrz
  3315  0127  1803               	skipnc
  3316  0128  3E01               	addlw	1
  3317  0129  1903               	skipnz
  3318  012A  292C               	goto	u1651
  3319  012B  07BD               	addwf	___flmul@grs+1,f
  3320  012C                     u1651:
  3321  012C  0838               	movf	??___flmul+2,w
  3322  012D  1103               	clrz
  3323  012E  1803               	skipnc
  3324  012F  3E01               	addlw	1
  3325  0130  1903               	skipnz
  3326  0131  2933               	goto	u1652
  3327  0132  07BE               	addwf	___flmul@grs+2,f
  3328  0133                     u1652:
  3329  0133  0839               	movf	??___flmul+3,w
  3330  0134  1103               	clrz
  3331  0135  1803               	skipnc
  3332  0136  3E01               	addlw	1
  3333  0137  1903               	skipnz
  3334  0138  293A               	goto	u1653
  3335  0139  07BF               	addwf	___flmul@grs+3,f
  3336  013A                     u1653:
  3337  013A                     l2024:
  3338  013A  0847               	movf	___flmul@temp+1,w
  3339  013B  00B6               	movwf	??___flmul
  3340  013C  01B7               	clrf	??___flmul+1
  3341  013D  01B8               	clrf	??___flmul+2
  3342  013E  01B9               	clrf	??___flmul+3
  3343  013F  0836               	movf	??___flmul,w
  3344  0140  07C2               	addwf	___flmul@prod,f
  3345  0141  0837               	movf	??___flmul+1,w
  3346  0142  1103               	clrz
  3347  0143  1803               	skipnc
  3348  0144  3E01               	addlw	1
  3349  0145  1903               	skipnz
  3350  0146  2948               	goto	u1661
  3351  0147  07C3               	addwf	___flmul@prod+1,f
  3352  0148                     u1661:
  3353  0148  0838               	movf	??___flmul+2,w
  3354  0149  1103               	clrz
  3355  014A  1803               	skipnc
  3356  014B  3E01               	addlw	1
  3357  014C  1903               	skipnz
  3358  014D  294F               	goto	u1662
  3359  014E  07C4               	addwf	___flmul@prod+2,f
  3360  014F                     u1662:
  3361  014F  0839               	movf	??___flmul+3,w
  3362  0150  1103               	clrz
  3363  0151  1803               	skipnc
  3364  0152  3E01               	addlw	1
  3365  0153  1903               	skipnz
  3366  0154  2956               	goto	u1663
  3367  0155  07C5               	addwf	___flmul@prod+3,f
  3368  0156                     u1663:
  3369  0156                     l2026:
  3370  0156  3008               	movlw	8
  3371  0157  00B6               	movwf	??___flmul
  3372  0158                     u1675:
  3373  0158  1003               	clrc
  3374  0159  0DBC               	rlf	___flmul@grs,f
  3375  015A  0DBD               	rlf	___flmul@grs+1,f
  3376  015B  0DBE               	rlf	___flmul@grs+2,f
  3377  015C  0DBF               	rlf	___flmul@grs+3,f
  3378  015D  0BB6               	decfsz	??___flmul,f
  3379  015E  2958               	goto	u1675
  3380  015F                     l2028:
  3381  015F  082F               	movf	___flmul@b+1,w
  3382  0160  00B6               	movwf	??___flmul
  3383  0161  0836               	movf	??___flmul,w
  3384  0162  00A0               	movwf	__Umul8_16@multiplicand
  3385  0163  0832               	movf	___flmul@a,w
  3386  0164  120A  158A  2523  120A  118A  	fcall	__Umul8_16
  3387  0169  1283               	bcf	3,5	;RP0=0, select bank0
  3388  016A  1303               	bcf	3,6	;RP1=0, select bank0
  3389  016B  0821               	movf	?__Umul8_16+1,w
  3390  016C  00C7               	movwf	___flmul@temp+1
  3391  016D  0820               	movf	?__Umul8_16,w
  3392  016E  00C6               	movwf	___flmul@temp
  3393  016F                     l2030:
  3394  016F  0846               	movf	___flmul@temp,w
  3395  0170  00B6               	movwf	??___flmul
  3396  0171  0847               	movf	___flmul@temp+1,w
  3397  0172  00B7               	movwf	??___flmul+1
  3398  0173  01B8               	clrf	??___flmul+2
  3399  0174  01B9               	clrf	??___flmul+3
  3400  0175  0836               	movf	??___flmul,w
  3401  0176  07BC               	addwf	___flmul@grs,f
  3402  0177  0837               	movf	??___flmul+1,w
  3403  0178  1103               	clrz
  3404  0179  1803               	skipnc
  3405  017A  3E01               	addlw	1
  3406  017B  1903               	skipnz
  3407  017C  297E               	goto	u1681
  3408  017D  07BD               	addwf	___flmul@grs+1,f
  3409  017E                     u1681:
  3410  017E  0838               	movf	??___flmul+2,w
  3411  017F  1103               	clrz
  3412  0180  1803               	skipnc
  3413  0181  3E01               	addlw	1
  3414  0182  1903               	skipnz
  3415  0183  2985               	goto	u1682
  3416  0184  07BE               	addwf	___flmul@grs+2,f
  3417  0185                     u1682:
  3418  0185  0839               	movf	??___flmul+3,w
  3419  0186  1103               	clrz
  3420  0187  1803               	skipnc
  3421  0188  3E01               	addlw	1
  3422  0189  1903               	skipnz
  3423  018A  298C               	goto	u1683
  3424  018B  07BF               	addwf	___flmul@grs+3,f
  3425  018C                     u1683:
  3426  018C                     l2032:
  3427  018C  082E               	movf	___flmul@b,w
  3428  018D  00B6               	movwf	??___flmul
  3429  018E  0836               	movf	??___flmul,w
  3430  018F  00A0               	movwf	__Umul8_16@multiplicand
  3431  0190  0833               	movf	___flmul@a+1,w
  3432  0191  120A  158A  2523  120A  118A  	fcall	__Umul8_16
  3433  0196  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0197  1303               	bcf	3,6	;RP1=0, select bank0
  3435  0198  0821               	movf	?__Umul8_16+1,w
  3436  0199  00C7               	movwf	___flmul@temp+1
  3437  019A  0820               	movf	?__Umul8_16,w
  3438  019B  00C6               	movwf	___flmul@temp
  3439  019C                     l2034:
  3440  019C  0846               	movf	___flmul@temp,w
  3441  019D  00B6               	movwf	??___flmul
  3442  019E  0847               	movf	___flmul@temp+1,w
  3443  019F  00B7               	movwf	??___flmul+1
  3444  01A0  01B8               	clrf	??___flmul+2
  3445  01A1  01B9               	clrf	??___flmul+3
  3446  01A2  0836               	movf	??___flmul,w
  3447  01A3  07BC               	addwf	___flmul@grs,f
  3448  01A4  0837               	movf	??___flmul+1,w
  3449  01A5  1103               	clrz
  3450  01A6  1803               	skipnc
  3451  01A7  3E01               	addlw	1
  3452  01A8  1903               	skipnz
  3453  01A9  29AB               	goto	u1691
  3454  01AA  07BD               	addwf	___flmul@grs+1,f
  3455  01AB                     u1691:
  3456  01AB  0838               	movf	??___flmul+2,w
  3457  01AC  1103               	clrz
  3458  01AD  1803               	skipnc
  3459  01AE  3E01               	addlw	1
  3460  01AF  1903               	skipnz
  3461  01B0  29B2               	goto	u1692
  3462  01B1  07BE               	addwf	___flmul@grs+2,f
  3463  01B2                     u1692:
  3464  01B2  0839               	movf	??___flmul+3,w
  3465  01B3  1103               	clrz
  3466  01B4  1803               	skipnc
  3467  01B5  3E01               	addlw	1
  3468  01B6  1903               	skipnz
  3469  01B7  29B9               	goto	u1693
  3470  01B8  07BF               	addwf	___flmul@grs+3,f
  3471  01B9                     u1693:
  3472  01B9                     l2036:
  3473  01B9  3008               	movlw	8
  3474  01BA  00B6               	movwf	??___flmul
  3475  01BB                     u1705:
  3476  01BB  1003               	clrc
  3477  01BC  0DBC               	rlf	___flmul@grs,f
  3478  01BD  0DBD               	rlf	___flmul@grs+1,f
  3479  01BE  0DBE               	rlf	___flmul@grs+2,f
  3480  01BF  0DBF               	rlf	___flmul@grs+3,f
  3481  01C0  0BB6               	decfsz	??___flmul,f
  3482  01C1  29BB               	goto	u1705
  3483  01C2  082E               	movf	___flmul@b,w
  3484  01C3  00B6               	movwf	??___flmul
  3485  01C4  0836               	movf	??___flmul,w
  3486  01C5  00A0               	movwf	__Umul8_16@multiplicand
  3487  01C6  0832               	movf	___flmul@a,w
  3488  01C7  120A  158A  2523  120A  118A  	fcall	__Umul8_16
  3489  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3490  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3491  01CE  0821               	movf	?__Umul8_16+1,w
  3492  01CF  00C7               	movwf	___flmul@temp+1
  3493  01D0  0820               	movf	?__Umul8_16,w
  3494  01D1  00C6               	movwf	___flmul@temp
  3495  01D2                     l2038:
  3496  01D2  0846               	movf	___flmul@temp,w
  3497  01D3  00B6               	movwf	??___flmul
  3498  01D4  0847               	movf	___flmul@temp+1,w
  3499  01D5  00B7               	movwf	??___flmul+1
  3500  01D6  01B8               	clrf	??___flmul+2
  3501  01D7  01B9               	clrf	??___flmul+3
  3502  01D8  0836               	movf	??___flmul,w
  3503  01D9  07BC               	addwf	___flmul@grs,f
  3504  01DA  0837               	movf	??___flmul+1,w
  3505  01DB  1103               	clrz
  3506  01DC  1803               	skipnc
  3507  01DD  3E01               	addlw	1
  3508  01DE  1903               	skipnz
  3509  01DF  29E1               	goto	u1711
  3510  01E0  07BD               	addwf	___flmul@grs+1,f
  3511  01E1                     u1711:
  3512  01E1  0838               	movf	??___flmul+2,w
  3513  01E2  1103               	clrz
  3514  01E3  1803               	skipnc
  3515  01E4  3E01               	addlw	1
  3516  01E5  1903               	skipnz
  3517  01E6  29E8               	goto	u1712
  3518  01E7  07BE               	addwf	___flmul@grs+2,f
  3519  01E8                     u1712:
  3520  01E8  0839               	movf	??___flmul+3,w
  3521  01E9  1103               	clrz
  3522  01EA  1803               	skipnc
  3523  01EB  3E01               	addlw	1
  3524  01EC  1903               	skipnz
  3525  01ED  29EF               	goto	u1713
  3526  01EE  07BF               	addwf	___flmul@grs+3,f
  3527  01EF                     u1713:
  3528  01EF                     l2040:
  3529  01EF  082F               	movf	___flmul@b+1,w
  3530  01F0  00B6               	movwf	??___flmul
  3531  01F1  0836               	movf	??___flmul,w
  3532  01F2  00A0               	movwf	__Umul8_16@multiplicand
  3533  01F3  0834               	movf	___flmul@a+2,w
  3534  01F4  120A  158A  2523  120A  118A  	fcall	__Umul8_16
  3535  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  3536  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  3537  01FB  0821               	movf	?__Umul8_16+1,w
  3538  01FC  00C7               	movwf	___flmul@temp+1
  3539  01FD  0820               	movf	?__Umul8_16,w
  3540  01FE  00C6               	movwf	___flmul@temp
  3541  01FF  0846               	movf	___flmul@temp,w
  3542  0200  00B6               	movwf	??___flmul
  3543  0201  0847               	movf	___flmul@temp+1,w
  3544  0202  00B7               	movwf	??___flmul+1
  3545  0203  01B8               	clrf	??___flmul+2
  3546  0204  01B9               	clrf	??___flmul+3
  3547  0205  0836               	movf	??___flmul,w
  3548  0206  07C2               	addwf	___flmul@prod,f
  3549  0207  0837               	movf	??___flmul+1,w
  3550  0208  1103               	clrz
  3551  0209  1803               	skipnc
  3552  020A  3E01               	addlw	1
  3553  020B  1903               	skipnz
  3554  020C  2A0E               	goto	u1721
  3555  020D  07C3               	addwf	___flmul@prod+1,f
  3556  020E                     u1721:
  3557  020E  0838               	movf	??___flmul+2,w
  3558  020F  1103               	clrz
  3559  0210  1803               	skipnc
  3560  0211  3E01               	addlw	1
  3561  0212  1903               	skipnz
  3562  0213  2A15               	goto	u1722
  3563  0214  07C4               	addwf	___flmul@prod+2,f
  3564  0215                     u1722:
  3565  0215  0839               	movf	??___flmul+3,w
  3566  0216  1103               	clrz
  3567  0217  1803               	skipnc
  3568  0218  3E01               	addlw	1
  3569  0219  1903               	skipnz
  3570  021A  2A1C               	goto	u1723
  3571  021B  07C5               	addwf	___flmul@prod+3,f
  3572  021C                     u1723:
  3573  021C                     l2042:
  3574  021C  0830               	movf	___flmul@b+2,w
  3575  021D  00B6               	movwf	??___flmul
  3576  021E  0836               	movf	??___flmul,w
  3577  021F  00A0               	movwf	__Umul8_16@multiplicand
  3578  0220  0833               	movf	___flmul@a+1,w
  3579  0221  120A  158A  2523  120A  118A  	fcall	__Umul8_16
  3580  0226  1283               	bcf	3,5	;RP0=0, select bank0
  3581  0227  1303               	bcf	3,6	;RP1=0, select bank0
  3582  0228  0821               	movf	?__Umul8_16+1,w
  3583  0229  00C7               	movwf	___flmul@temp+1
  3584  022A  0820               	movf	?__Umul8_16,w
  3585  022B  00C6               	movwf	___flmul@temp
  3586  022C                     l2044:
  3587  022C  0846               	movf	___flmul@temp,w
  3588  022D  00B6               	movwf	??___flmul
  3589  022E  0847               	movf	___flmul@temp+1,w
  3590  022F  00B7               	movwf	??___flmul+1
  3591  0230  01B8               	clrf	??___flmul+2
  3592  0231  01B9               	clrf	??___flmul+3
  3593  0232  0836               	movf	??___flmul,w
  3594  0233  07C2               	addwf	___flmul@prod,f
  3595  0234  0837               	movf	??___flmul+1,w
  3596  0235  1103               	clrz
  3597  0236  1803               	skipnc
  3598  0237  3E01               	addlw	1
  3599  0238  1903               	skipnz
  3600  0239  2A3B               	goto	u1731
  3601  023A  07C3               	addwf	___flmul@prod+1,f
  3602  023B                     u1731:
  3603  023B  0838               	movf	??___flmul+2,w
  3604  023C  1103               	clrz
  3605  023D  1803               	skipnc
  3606  023E  3E01               	addlw	1
  3607  023F  1903               	skipnz
  3608  0240  2A42               	goto	u1732
  3609  0241  07C4               	addwf	___flmul@prod+2,f
  3610  0242                     u1732:
  3611  0242  0839               	movf	??___flmul+3,w
  3612  0243  1103               	clrz
  3613  0244  1803               	skipnc
  3614  0245  3E01               	addlw	1
  3615  0246  1903               	skipnz
  3616  0247  2A49               	goto	u1733
  3617  0248  07C5               	addwf	___flmul@prod+3,f
  3618  0249                     u1733:
  3619  0249  0830               	movf	___flmul@b+2,w
  3620  024A  00B6               	movwf	??___flmul
  3621  024B  0836               	movf	??___flmul,w
  3622  024C  00A0               	movwf	__Umul8_16@multiplicand
  3623  024D  0834               	movf	___flmul@a+2,w
  3624  024E  120A  158A  2523  120A  118A  	fcall	__Umul8_16
  3625  0253  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0254  1303               	bcf	3,6	;RP1=0, select bank0
  3627  0255  0821               	movf	?__Umul8_16+1,w
  3628  0256  00C7               	movwf	___flmul@temp+1
  3629  0257  0820               	movf	?__Umul8_16,w
  3630  0258  00C6               	movwf	___flmul@temp
  3631  0259                     l2046:
  3632  0259  0846               	movf	___flmul@temp,w
  3633  025A  00B6               	movwf	??___flmul
  3634  025B  0847               	movf	___flmul@temp+1,w
  3635  025C  00B7               	movwf	??___flmul+1
  3636  025D  01B8               	clrf	??___flmul+2
  3637  025E  01B9               	clrf	??___flmul+3
  3638  025F  3008               	movlw	8
  3639  0260                     u1745:
  3640  0260  1003               	clrc
  3641  0261  0DB6               	rlf	??___flmul,f
  3642  0262  0DB7               	rlf	??___flmul+1,f
  3643  0263  0DB8               	rlf	??___flmul+2,f
  3644  0264  0DB9               	rlf	??___flmul+3,f
  3645  0265                     u1740:
  3646  0265  3EFF               	addlw	-1
  3647  0266  1D03               	skipz
  3648  0267  2A60               	goto	u1745
  3649  0268  0836               	movf	??___flmul,w
  3650  0269  07C2               	addwf	___flmul@prod,f
  3651  026A  0837               	movf	??___flmul+1,w
  3652  026B  1103               	clrz
  3653  026C  1803               	skipnc
  3654  026D  3E01               	addlw	1
  3655  026E  1903               	skipnz
  3656  026F  2A71               	goto	u1751
  3657  0270  07C3               	addwf	___flmul@prod+1,f
  3658  0271                     u1751:
  3659  0271  0838               	movf	??___flmul+2,w
  3660  0272  1103               	clrz
  3661  0273  1803               	skipnc
  3662  0274  3E01               	addlw	1
  3663  0275  1903               	skipnz
  3664  0276  2A78               	goto	u1752
  3665  0277  07C4               	addwf	___flmul@prod+2,f
  3666  0278                     u1752:
  3667  0278  0839               	movf	??___flmul+3,w
  3668  0279  1103               	clrz
  3669  027A  1803               	skipnc
  3670  027B  3E01               	addlw	1
  3671  027C  1903               	skipnz
  3672  027D  2A7F               	goto	u1753
  3673  027E  07C5               	addwf	___flmul@prod+3,f
  3674  027F                     u1753:
  3675  027F                     l2048:
  3676  027F  083C               	movf	___flmul@grs,w
  3677  0280  00B6               	movwf	??___flmul
  3678  0281  083D               	movf	___flmul@grs+1,w
  3679  0282  00B7               	movwf	??___flmul+1
  3680  0283  083E               	movf	___flmul@grs+2,w
  3681  0284  00B8               	movwf	??___flmul+2
  3682  0285  083F               	movf	___flmul@grs+3,w
  3683  0286  00B9               	movwf	??___flmul+3
  3684  0287  3018               	movlw	24
  3685  0288                     u1765:
  3686  0288  1003               	clrc
  3687  0289  0CB9               	rrf	??___flmul+3,f
  3688  028A  0CB8               	rrf	??___flmul+2,f
  3689  028B  0CB7               	rrf	??___flmul+1,f
  3690  028C  0CB6               	rrf	??___flmul,f
  3691  028D                     u1760:
  3692  028D  3EFF               	addlw	-1
  3693  028E  1D03               	skipz
  3694  028F  2A88               	goto	u1765
  3695  0290  0836               	movf	??___flmul,w
  3696  0291  07C2               	addwf	___flmul@prod,f
  3697  0292  0837               	movf	??___flmul+1,w
  3698  0293  1103               	clrz
  3699  0294  1803               	skipnc
  3700  0295  3E01               	addlw	1
  3701  0296  1903               	skipnz
  3702  0297  2A99               	goto	u1771
  3703  0298  07C3               	addwf	___flmul@prod+1,f
  3704  0299                     u1771:
  3705  0299  0838               	movf	??___flmul+2,w
  3706  029A  1103               	clrz
  3707  029B  1803               	skipnc
  3708  029C  3E01               	addlw	1
  3709  029D  1903               	skipnz
  3710  029E  2AA0               	goto	u1772
  3711  029F  07C4               	addwf	___flmul@prod+2,f
  3712  02A0                     u1772:
  3713  02A0  0839               	movf	??___flmul+3,w
  3714  02A1  1103               	clrz
  3715  02A2  1803               	skipnc
  3716  02A3  3E01               	addlw	1
  3717  02A4  1903               	skipnz
  3718  02A5  2AA7               	goto	u1773
  3719  02A6  07C5               	addwf	___flmul@prod+3,f
  3720  02A7                     u1773:
  3721  02A7                     l2050:
  3722  02A7  3008               	movlw	8
  3723  02A8  00B6               	movwf	??___flmul
  3724  02A9                     u1785:
  3725  02A9  1003               	clrc
  3726  02AA  0DBC               	rlf	___flmul@grs,f
  3727  02AB  0DBD               	rlf	___flmul@grs+1,f
  3728  02AC  0DBE               	rlf	___flmul@grs+2,f
  3729  02AD  0DBF               	rlf	___flmul@grs+3,f
  3730  02AE  0BB6               	decfsz	??___flmul,f
  3731  02AF  2AA9               	goto	u1785
  3732  02B0                     l2052:
  3733  02B0  0841               	movf	___flmul@bexp,w
  3734  02B1  0740               	addwf	___flmul@aexp,w
  3735  02B2  00B6               	movwf	??___flmul
  3736  02B3  01B7               	clrf	??___flmul+1
  3737  02B4  0DB7               	rlf	??___flmul+1,f
  3738  02B5  0836               	movf	??___flmul,w
  3739  02B6  3E82               	addlw	130
  3740  02B7  00C6               	movwf	___flmul@temp
  3741  02B8  0837               	movf	??___flmul+1,w
  3742  02B9  1803               	skipnc
  3743  02BA  3E01               	addlw	1
  3744  02BB  3EFF               	addlw	255
  3745  02BC  00C7               	movwf	___flmul@temp+1
  3746  02BD  2ADB               	goto	l2064
  3747  02BE                     l2054:
  3748  02BE  3001               	movlw	1
  3749  02BF  00B6               	movwf	??___flmul
  3750  02C0                     u1795:
  3751  02C0  1003               	clrc
  3752  02C1  0DC2               	rlf	___flmul@prod,f
  3753  02C2  0DC3               	rlf	___flmul@prod+1,f
  3754  02C3  0DC4               	rlf	___flmul@prod+2,f
  3755  02C4  0DC5               	rlf	___flmul@prod+3,f
  3756  02C5  0BB6               	decfsz	??___flmul,f
  3757  02C6  2AC0               	goto	u1795
  3758  02C7                     l2056:
  3759  02C7  1FBF               	btfss	___flmul@grs+3,7
  3760  02C8  2ACA               	goto	u1801
  3761  02C9  2ACB               	goto	u1800
  3762  02CA                     u1801:
  3763  02CA  2ACC               	goto	l2060
  3764  02CB                     u1800:
  3765  02CB                     l2058:
  3766  02CB  1442               	bsf	___flmul@prod,0
  3767  02CC                     l2060:
  3768  02CC  3001               	movlw	1
  3769  02CD  00B6               	movwf	??___flmul
  3770  02CE                     u1815:
  3771  02CE  1003               	clrc
  3772  02CF  0DBC               	rlf	___flmul@grs,f
  3773  02D0  0DBD               	rlf	___flmul@grs+1,f
  3774  02D1  0DBE               	rlf	___flmul@grs+2,f
  3775  02D2  0DBF               	rlf	___flmul@grs+3,f
  3776  02D3  0BB6               	decfsz	??___flmul,f
  3777  02D4  2ACE               	goto	u1815
  3778  02D5                     l2062:
  3779  02D5  30FF               	movlw	255
  3780  02D6  07C6               	addwf	___flmul@temp,f
  3781  02D7  1803               	skipnc
  3782  02D8  0AC7               	incf	___flmul@temp+1,f
  3783  02D9  30FF               	movlw	255
  3784  02DA  07C7               	addwf	___flmul@temp+1,f
  3785  02DB                     l2064:
  3786  02DB  1FC4               	btfss	___flmul@prod+2,7
  3787  02DC  2ADE               	goto	u1821
  3788  02DD  2ADF               	goto	u1820
  3789  02DE                     u1821:
  3790  02DE  2ABE               	goto	l2054
  3791  02DF                     u1820:
  3792  02DF                     l2066:
  3793  02DF  01C0               	clrf	___flmul@aexp
  3794  02E0                     l2068:
  3795  02E0  1FBF               	btfss	___flmul@grs+3,7
  3796  02E1  2AE3               	goto	u1831
  3797  02E2  2AE4               	goto	u1830
  3798  02E3                     u1831:
  3799  02E3  2B00               	goto	l2076
  3800  02E4                     u1830:
  3801  02E4                     l2070:
  3802  02E4  30FF               	movlw	255
  3803  02E5  053C               	andwf	___flmul@grs,w
  3804  02E6  00B6               	movwf	??___flmul
  3805  02E7  30FF               	movlw	255
  3806  02E8  053D               	andwf	___flmul@grs+1,w
  3807  02E9  00B7               	movwf	??___flmul+1
  3808  02EA  30FF               	movlw	255
  3809  02EB  053E               	andwf	___flmul@grs+2,w
  3810  02EC  00B8               	movwf	??___flmul+2
  3811  02ED  307F               	movlw	127
  3812  02EE  053F               	andwf	___flmul@grs+3,w
  3813  02EF  00B9               	movwf	??___flmul+3
  3814  02F0  0839               	movf	??___flmul+3,w
  3815  02F1  0438               	iorwf	??___flmul+2,w
  3816  02F2  0437               	iorwf	??___flmul+1,w
  3817  02F3  0436               	iorwf	??___flmul,w
  3818  02F4  1903               	skipnz
  3819  02F5  2AF7               	goto	u1841
  3820  02F6  2AF8               	goto	u1840
  3821  02F7                     u1841:
  3822  02F7  2AFB               	goto	l751
  3823  02F8                     u1840:
  3824  02F8                     l2072:
  3825  02F8  01C0               	clrf	___flmul@aexp
  3826  02F9  0AC0               	incf	___flmul@aexp,f
  3827  02FA  2B00               	goto	l2076
  3828  02FB                     l751:
  3829  02FB  1C42               	btfss	___flmul@prod,0
  3830  02FC  2AFE               	goto	u1851
  3831  02FD  2AFF               	goto	u1850
  3832  02FE                     u1851:
  3833  02FE  2B00               	goto	l2076
  3834  02FF                     u1850:
  3835  02FF  2AF8               	goto	l2072
  3836  0300                     l2076:
  3837  0300  0840               	movf	___flmul@aexp,w
  3838  0301  1903               	btfsc	3,2
  3839  0302  2B04               	goto	u1861
  3840  0303  2B05               	goto	u1860
  3841  0304                     u1861:
  3842  0304  2B36               	goto	l2086
  3843  0305                     u1860:
  3844  0305                     l2078:
  3845  0305  3001               	movlw	1
  3846  0306  07C2               	addwf	___flmul@prod,f
  3847  0307  3000               	movlw	0
  3848  0308  1803               	skipnc
  3849  0309  3001               	movlw	1
  3850  030A  07C3               	addwf	___flmul@prod+1,f
  3851  030B  3000               	movlw	0
  3852  030C  1803               	skipnc
  3853  030D  3001               	movlw	1
  3854  030E  07C4               	addwf	___flmul@prod+2,f
  3855  030F  3000               	movlw	0
  3856  0310  1803               	skipnc
  3857  0311  3001               	movlw	1
  3858  0312  07C5               	addwf	___flmul@prod+3,f
  3859  0313                     l2080:
  3860  0313  1C45               	btfss	___flmul@prod+3,0
  3861  0314  2B16               	goto	u1871
  3862  0315  2B17               	goto	u1870
  3863  0316                     u1871:
  3864  0316  2B36               	goto	l2086
  3865  0317                     u1870:
  3866  0317                     l2082:
  3867  0317  0842               	movf	___flmul@prod,w
  3868  0318  00B6               	movwf	??___flmul
  3869  0319  0843               	movf	___flmul@prod+1,w
  3870  031A  00B7               	movwf	??___flmul+1
  3871  031B  0844               	movf	___flmul@prod+2,w
  3872  031C  00B8               	movwf	??___flmul+2
  3873  031D  0845               	movf	___flmul@prod+3,w
  3874  031E  00B9               	movwf	??___flmul+3
  3875  031F  3001               	movlw	1
  3876  0320  00BA               	movwf	??___flmul+4
  3877  0321                     u1885:
  3878  0321  0D39               	rlf	??___flmul+3,w
  3879  0322  0CB9               	rrf	??___flmul+3,f
  3880  0323  0CB8               	rrf	??___flmul+2,f
  3881  0324  0CB7               	rrf	??___flmul+1,f
  3882  0325  0CB6               	rrf	??___flmul,f
  3883  0326                     u1880:
  3884  0326  0BBA               	decfsz	??___flmul+4,f
  3885  0327  2B21               	goto	u1885
  3886  0328  0839               	movf	??___flmul+3,w
  3887  0329  00C5               	movwf	___flmul@prod+3
  3888  032A  0838               	movf	??___flmul+2,w
  3889  032B  00C4               	movwf	___flmul@prod+2
  3890  032C  0837               	movf	??___flmul+1,w
  3891  032D  00C3               	movwf	___flmul@prod+1
  3892  032E  0836               	movf	??___flmul,w
  3893  032F  00C2               	movwf	___flmul@prod
  3894  0330                     l2084:
  3895  0330  3001               	movlw	1
  3896  0331  07C6               	addwf	___flmul@temp,f
  3897  0332  1803               	skipnc
  3898  0333  0AC7               	incf	___flmul@temp+1,f
  3899  0334  3000               	movlw	0
  3900  0335  07C7               	addwf	___flmul@temp+1,f
  3901  0336                     l2086:
  3902  0336  0847               	movf	___flmul@temp+1,w
  3903  0337  3A80               	xorlw	128
  3904  0338  00FF               	movwf	btemp+1
  3905  0339  3080               	movlw	128
  3906  033A  027F               	subwf	btemp+1,w
  3907  033B  1D03               	skipz
  3908  033C  2B3F               	goto	u1895
  3909  033D  30FF               	movlw	255
  3910  033E  0246               	subwf	___flmul@temp,w
  3911  033F                     u1895:
  3912  033F  1C03               	skipc
  3913  0340  2B42               	goto	u1891
  3914  0341  2B43               	goto	u1890
  3915  0342                     u1891:
  3916  0342  2B4E               	goto	l2090
  3917  0343                     u1890:
  3918  0343                     l2088:
  3919  0343  307F               	movlw	127
  3920  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3921  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3922  0346  00C5               	movwf	___flmul@prod+3
  3923  0347  3080               	movlw	128
  3924  0348  00C4               	movwf	___flmul@prod+2
  3925  0349  3000               	movlw	0
  3926  034A  00C3               	movwf	___flmul@prod+1
  3927  034B  3000               	movlw	0
  3928  034C  00C2               	movwf	___flmul@prod
  3929  034D  2B83               	goto	l757
  3930  034E                     l2090:
  3931  034E  1283               	bcf	3,5	;RP0=0, select bank0
  3932  034F  1303               	bcf	3,6	;RP1=0, select bank0
  3933  0350  0847               	movf	___flmul@temp+1,w
  3934  0351  3A80               	xorlw	128
  3935  0352  00FF               	movwf	btemp+1
  3936  0353  3080               	movlw	128
  3937  0354  027F               	subwf	btemp+1,w
  3938  0355  1D03               	skipz
  3939  0356  2B59               	goto	u1905
  3940  0357  3001               	movlw	1
  3941  0358  0246               	subwf	___flmul@temp,w
  3942  0359                     u1905:
  3943  0359  1803               	skipnc
  3944  035A  2B5C               	goto	u1901
  3945  035B  2B5D               	goto	u1900
  3946  035C                     u1901:
  3947  035C  2B69               	goto	l2096
  3948  035D                     u1900:
  3949  035D                     l2092:
  3950  035D  3000               	movlw	0
  3951  035E  1283               	bcf	3,5	;RP0=0, select bank0
  3952  035F  1303               	bcf	3,6	;RP1=0, select bank0
  3953  0360  00C5               	movwf	___flmul@prod+3
  3954  0361  3000               	movlw	0
  3955  0362  00C4               	movwf	___flmul@prod+2
  3956  0363  3000               	movlw	0
  3957  0364  00C3               	movwf	___flmul@prod+1
  3958  0365  3000               	movlw	0
  3959  0366  00C2               	movwf	___flmul@prod
  3960  0367                     l2094:
  3961  0367  01BB               	clrf	___flmul@sign
  3962  0368  2B83               	goto	l757
  3963  0369                     l2096:
  3964  0369  1283               	bcf	3,5	;RP0=0, select bank0
  3965  036A  1303               	bcf	3,6	;RP1=0, select bank0
  3966  036B  0846               	movf	___flmul@temp,w
  3967  036C  00B6               	movwf	??___flmul
  3968  036D  0836               	movf	??___flmul,w
  3969  036E  00C1               	movwf	___flmul@bexp
  3970  036F  30FF               	movlw	255
  3971  0370  05C2               	andwf	___flmul@prod,f
  3972  0371  30FF               	movlw	255
  3973  0372  05C3               	andwf	___flmul@prod+1,f
  3974  0373  307F               	movlw	127
  3975  0374  05C4               	andwf	___flmul@prod+2,f
  3976  0375  3000               	movlw	0
  3977  0376  05C5               	andwf	___flmul@prod+3,f
  3978  0377                     l2098:
  3979  0377  1C41               	btfss	___flmul@bexp,0
  3980  0378  2B7A               	goto	u1911
  3981  0379  2B7B               	goto	u1910
  3982  037A                     u1911:
  3983  037A  2B7C               	goto	l2102
  3984  037B                     u1910:
  3985  037B                     l2100:
  3986  037B  17C4               	bsf	___flmul@prod+2,7
  3987  037C                     l2102:
  3988  037C  0841               	movf	___flmul@bexp,w
  3989  037D  00B6               	movwf	??___flmul
  3990  037E  1003               	clrc
  3991  037F  0C36               	rrf	??___flmul,w
  3992  0380  00B7               	movwf	??___flmul+1
  3993  0381  0837               	movf	??___flmul+1,w
  3994  0382  00C5               	movwf	___flmul@prod+3
  3995  0383                     l757:
  3996  0383  083B               	movf	___flmul@sign,w
  3997  0384  00B6               	movwf	??___flmul
  3998  0385  0836               	movf	??___flmul,w
  3999  0386  04C5               	iorwf	___flmul@prod+3,f
  4000  0387                     l2104:
  4001  0387  0845               	movf	___flmul@prod+3,w
  4002  0388  00B1               	movwf	?___flmul+3
  4003  0389  0844               	movf	___flmul@prod+2,w
  4004  038A  00B0               	movwf	?___flmul+2
  4005  038B  0843               	movf	___flmul@prod+1,w
  4006  038C  00AF               	movwf	?___flmul+1
  4007  038D  0842               	movf	___flmul@prod,w
  4008  038E  00AE               	movwf	?___flmul
  4009  038F                     l745:
  4010  038F  0008               	return
  4011  0390                     __end_of___flmul:
  4012                           
  4013                           	psect	text8
  4014  0D23                     __ptext8:	
  4015 ;; *************** function __Umul8_16 *****************
  4016 ;; Defined at:
  4017 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  multiplier      1    wreg     unsigned char 
  4020 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  multiplier      1    8[BANK0 ] unsigned char 
  4023 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  4024 ;;  product         2    4[BANK0 ] unsigned int 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  2    0[BANK0 ] unsigned int 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4034 ;;      Params:         0       2       0       0       0
  4035 ;;      Locals:         0       5       0       0       0
  4036 ;;      Temps:          0       2       0       0       0
  4037 ;;      Totals:         0       9       0       0       0
  4038 ;;Total ram usage:        9 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    2
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		___flmul
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           
  4049                           ;psect for function __Umul8_16
  4050  0D23                     __Umul8_16:
  4051                           
  4052                           ;incstack = 0
  4053                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4054                           ;__Umul8_16@multiplier stored from wreg
  4055  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  4056  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  4057  0D25  00A8               	movwf	__Umul8_16@multiplier
  4058  0D26                     l1722:
  4059  0D26  01A4               	clrf	__Umul8_16@product
  4060  0D27  01A5               	clrf	__Umul8_16@product+1
  4061  0D28                     l1724:
  4062  0D28  0820               	movf	__Umul8_16@multiplicand,w
  4063  0D29  00A2               	movwf	??__Umul8_16
  4064  0D2A  01A3               	clrf	??__Umul8_16+1
  4065  0D2B  0822               	movf	??__Umul8_16,w
  4066  0D2C  00A6               	movwf	__Umul8_16@word_mpld
  4067  0D2D  0823               	movf	??__Umul8_16+1,w
  4068  0D2E  00A7               	movwf	__Umul8_16@word_mpld+1
  4069  0D2F                     l1726:
  4070  0D2F  1C28               	btfss	__Umul8_16@multiplier,0
  4071  0D30  2D32               	goto	u1361
  4072  0D31  2D33               	goto	u1360
  4073  0D32                     u1361:
  4074  0D32  2D39               	goto	l764
  4075  0D33                     u1360:
  4076  0D33                     l1728:
  4077  0D33  0826               	movf	__Umul8_16@word_mpld,w
  4078  0D34  07A4               	addwf	__Umul8_16@product,f
  4079  0D35  1803               	skipnc
  4080  0D36  0AA5               	incf	__Umul8_16@product+1,f
  4081  0D37  0827               	movf	__Umul8_16@word_mpld+1,w
  4082  0D38  07A5               	addwf	__Umul8_16@product+1,f
  4083  0D39                     l764:
  4084  0D39  3001               	movlw	1
  4085  0D3A                     u1375:
  4086  0D3A  1003               	clrc
  4087  0D3B  0DA6               	rlf	__Umul8_16@word_mpld,f
  4088  0D3C  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  4089  0D3D  3EFF               	addlw	-1
  4090  0D3E  1D03               	skipz
  4091  0D3F  2D3A               	goto	u1375
  4092  0D40  1003               	clrc
  4093  0D41  0CA8               	rrf	__Umul8_16@multiplier,f
  4094  0D42                     l1730:
  4095  0D42  0828               	movf	__Umul8_16@multiplier,w
  4096  0D43  1D03               	btfss	3,2
  4097  0D44  2D46               	goto	u1381
  4098  0D45  2D47               	goto	u1380
  4099  0D46                     u1381:
  4100  0D46  2D2F               	goto	l1726
  4101  0D47                     u1380:
  4102  0D47                     l1732:
  4103  0D47  0825               	movf	__Umul8_16@product+1,w
  4104  0D48  00A1               	movwf	?__Umul8_16+1
  4105  0D49  0824               	movf	__Umul8_16@product,w
  4106  0D4A  00A0               	movwf	?__Umul8_16
  4107  0D4B                     l766:
  4108  0D4B  0008               	return
  4109  0D4C                     __end_of__Umul8_16:
  4110                           
  4111                           	psect	text9
  4112  0CFA                     __ptext9:	
  4113 ;; *************** function _Lcd_Write_String *****************
  4114 ;; Defined at:
  4115 ;;		line 110 in file "LCD.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  a               1    wreg     PTR unsigned char 
  4118 ;;		 -> STR_1(17), 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  a               1    6[BANK0 ] PTR unsigned char 
  4121 ;;		 -> STR_1(17), 
  4122 ;;  i               2    4[BANK0 ] int 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      void 
  4125 ;; Registers used:
  4126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4132 ;;      Params:         0       0       0       0       0
  4133 ;;      Locals:         0       3       0       0       0
  4134 ;;      Temps:          0       0       0       0       0
  4135 ;;      Totals:         0       3       0       0       0
  4136 ;;Total ram usage:        3 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    4
  4139 ;; This function calls:
  4140 ;;		_Lcd_Write_Char
  4141 ;; This function is called by:
  4142 ;;		_main
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           
  4147                           ;psect for function _Lcd_Write_String
  4148  0CFA                     _Lcd_Write_String:
  4149                           
  4150                           ;incstack = 0
  4151                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4152                           ;Lcd_Write_String@a stored from wreg
  4153  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  4154  0CFB  1303               	bcf	3,6	;RP1=0, select bank0
  4155  0CFC  00A6               	movwf	Lcd_Write_String@a
  4156  0CFD                     l1830:
  4157                           
  4158                           ;LCD.c: 111:     int i;;LCD.c: 112:     for (i = 0; a[i] != '\0'; i++)
  4159  0CFD  01A4               	clrf	Lcd_Write_String@i
  4160  0CFE  01A5               	clrf	Lcd_Write_String@i+1
  4161  0CFF  2D15               	goto	l1836
  4162  0D00                     l1832:
  4163                           
  4164                           ;LCD.c: 113:         Lcd_Write_Char(a[i]);
  4165  0D00  0824               	movf	Lcd_Write_String@i,w
  4166  0D01  0726               	addwf	Lcd_Write_String@a,w
  4167  0D02  0084               	movwf	4
  4168  0D03  120A  158A  2000  120A  158A  	fcall	stringdir
  4169  0D08  120A  158A  2497  120A  158A  	fcall	_Lcd_Write_Char
  4170  0D0D                     l1834:
  4171  0D0D  3001               	movlw	1
  4172  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  4173  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  4174  0D10  07A4               	addwf	Lcd_Write_String@i,f
  4175  0D11  1803               	skipnc
  4176  0D12  0AA5               	incf	Lcd_Write_String@i+1,f
  4177  0D13  3000               	movlw	0
  4178  0D14  07A5               	addwf	Lcd_Write_String@i+1,f
  4179  0D15                     l1836:
  4180  0D15  0824               	movf	Lcd_Write_String@i,w
  4181  0D16  0726               	addwf	Lcd_Write_String@a,w
  4182  0D17  0084               	movwf	4
  4183  0D18  120A  158A  2000  120A  158A  	fcall	stringdir
  4184  0D1D  3A00               	xorlw	0
  4185  0D1E  1D03               	skipz
  4186  0D1F  2D21               	goto	u1411
  4187  0D20  2D22               	goto	u1410
  4188  0D21                     u1411:
  4189  0D21  2D00               	goto	l1832
  4190  0D22                     u1410:
  4191  0D22                     l264:
  4192  0D22  0008               	return
  4193  0D23                     __end_of_Lcd_Write_String:
  4194                           
  4195                           	psect	text10
  4196  0C97                     __ptext10:	
  4197 ;; *************** function _Lcd_Write_Char *****************
  4198 ;; Defined at:
  4199 ;;		line 99 in file "LCD.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  a               1    wreg     unsigned char 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  a               1    2[BANK0 ] unsigned char 
  4204 ;;  y               1    3[BANK0 ] unsigned char 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  1    wreg      void 
  4207 ;; Registers used:
  4208 ;;		wreg, status,2, status,0, pclath, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4214 ;;      Params:         0       0       0       0       0
  4215 ;;      Locals:         0       2       0       0       0
  4216 ;;      Temps:          0       1       0       0       0
  4217 ;;      Totals:         0       3       0       0       0
  4218 ;;Total ram usage:        3 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    3
  4221 ;; This function calls:
  4222 ;;		_Lcd_Port
  4223 ;; This function is called by:
  4224 ;;		_main
  4225 ;;		_Lcd_Write_String
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           
  4230                           ;psect for function _Lcd_Write_Char
  4231  0C97                     _Lcd_Write_Char:
  4232                           
  4233                           ;incstack = 0
  4234                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4235                           ;Lcd_Write_Char@a stored from wreg
  4236  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  4237  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  4238  0C99  00A2               	movwf	Lcd_Write_Char@a
  4239  0C9A                     l1628:
  4240                           
  4241                           ;LCD.c: 100:     char y;;LCD.c: 101:     y = a ;
  4242  0C9A  0822               	movf	Lcd_Write_Char@a,w
  4243  0C9B  00A1               	movwf	??_Lcd_Write_Char
  4244  0C9C  0821               	movf	??_Lcd_Write_Char,w
  4245  0C9D  00A3               	movwf	Lcd_Write_Char@y
  4246  0C9E                     l1630:
  4247                           
  4248                           ;LCD.c: 102:     RE0 = 1;
  4249  0C9E  1409               	bsf	9,0	;volatile
  4250  0C9F                     l1632:
  4251                           
  4252                           ;LCD.c: 103:     Lcd_Port(y);
  4253  0C9F  0823               	movf	Lcd_Write_Char@y,w
  4254  0CA0  120A  158A  25A6  120A  158A  	fcall	_Lcd_Port
  4255  0CA5                     l1634:
  4256                           
  4257                           ;LCD.c: 104:     RE1 = 1;
  4258  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  4259  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  4260  0CA7  1489               	bsf	9,1	;volatile
  4261  0CA8                     l1636:
  4262                           
  4263                           ;LCD.c: 105:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  4264  0CA8  3002               	movlw	2
  4265  0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  4266  0CAA  1303               	bcf	3,6	;RP1=0, select bank0
  4267  0CAB  00A1               	movwf	??_Lcd_Write_Char
  4268  0CAC                     u2177:
  4269  0CAC  0BA1               	decfsz	??_Lcd_Write_Char,f
  4270  0CAD  2CAC               	goto	u2177
  4271  0CAE  0000               	nop
  4272  0CAF                     l1638:
  4273                           
  4274                           ;LCD.c: 106:     RE1 = 0;
  4275  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  4276  0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  4277  0CB1  1089               	bcf	9,1	;volatile
  4278  0CB2                     l258:
  4279  0CB2  0008               	return
  4280  0CB3                     __end_of_Lcd_Write_Char:
  4281                           
  4282                           	psect	text11
  4283  0CD4                     __ptext11:	
  4284 ;; *************** function _Lcd_Set_Cursor *****************
  4285 ;; Defined at:
  4286 ;;		line 70 in file "LCD.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  a               1    wreg     unsigned char 
  4289 ;;  b               1    3[BANK0 ] unsigned char 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  a               1    5[BANK0 ] unsigned char 
  4292 ;;  temp            1    6[BANK0 ] unsigned char 
  4293 ;;  y               1    0        unsigned char 
  4294 ;;  z               1    0        unsigned char 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		wreg, status,2, status,0, pclath, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4304 ;;      Params:         0       1       0       0       0
  4305 ;;      Locals:         0       2       0       0       0
  4306 ;;      Temps:          0       1       0       0       0
  4307 ;;      Totals:         0       4       0       0       0
  4308 ;;Total ram usage:        4 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; Hardware stack levels required when called:    4
  4311 ;; This function calls:
  4312 ;;		_Lcd_Cmd
  4313 ;; This function is called by:
  4314 ;;		_main
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           
  4319                           ;psect for function _Lcd_Set_Cursor
  4320  0CD4                     _Lcd_Set_Cursor:
  4321                           
  4322                           ;incstack = 0
  4323                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4324                           ;Lcd_Set_Cursor@a stored from wreg
  4325  0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  4326  0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  4327  0CD6  00A5               	movwf	Lcd_Set_Cursor@a
  4328  0CD7                     l1818:
  4329                           
  4330                           ;LCD.c: 71:     char temp, z, y;;LCD.c: 72:     if (a == 1) {
  4331  0CD7  0325               	decf	Lcd_Set_Cursor@a,w
  4332  0CD8  1D03               	btfss	3,2
  4333  0CD9  2CDB               	goto	u1391
  4334  0CDA  2CDC               	goto	u1390
  4335  0CDB                     u1391:
  4336  0CDB  2CE8               	goto	l1824
  4337  0CDC                     u1390:
  4338  0CDC                     l1820:
  4339                           
  4340                           ;LCD.c: 73:         temp = 0x80 + b - 1;
  4341  0CDC  0823               	movf	Lcd_Set_Cursor@b,w
  4342  0CDD  3E7F               	addlw	127
  4343  0CDE  00A4               	movwf	??_Lcd_Set_Cursor
  4344  0CDF  0824               	movf	??_Lcd_Set_Cursor,w
  4345  0CE0  00A6               	movwf	Lcd_Set_Cursor@temp
  4346  0CE1                     l1822:
  4347                           
  4348                           ;LCD.c: 75:         Lcd_Cmd(temp);
  4349  0CE1  0826               	movf	Lcd_Set_Cursor@temp,w
  4350  0CE2  120A  158A  247E  120A  158A  	fcall	_Lcd_Cmd
  4351                           
  4352                           ;LCD.c: 76:     } else if (a == 2) {
  4353  0CE7  2CF9               	goto	l252
  4354  0CE8                     l1824:
  4355  0CE8  3002               	movlw	2
  4356  0CE9  0625               	xorwf	Lcd_Set_Cursor@a,w
  4357  0CEA  1D03               	btfss	3,2
  4358  0CEB  2CED               	goto	u1401
  4359  0CEC  2CEE               	goto	u1400
  4360  0CED                     u1401:
  4361  0CED  2CF9               	goto	l252
  4362  0CEE                     u1400:
  4363  0CEE                     l1826:
  4364                           
  4365                           ;LCD.c: 77:         temp = 0xC0 + b - 1;
  4366  0CEE  0823               	movf	Lcd_Set_Cursor@b,w
  4367  0CEF  3EBF               	addlw	191
  4368  0CF0  00A4               	movwf	??_Lcd_Set_Cursor
  4369  0CF1  0824               	movf	??_Lcd_Set_Cursor,w
  4370  0CF2  00A6               	movwf	Lcd_Set_Cursor@temp
  4371  0CF3                     l1828:
  4372                           
  4373                           ;LCD.c: 79:         Lcd_Cmd(temp);
  4374  0CF3  0826               	movf	Lcd_Set_Cursor@temp,w
  4375  0CF4  120A  158A  247E  120A  158A  	fcall	_Lcd_Cmd
  4376  0CF9                     l252:
  4377  0CF9  0008               	return
  4378  0CFA                     __end_of_Lcd_Set_Cursor:
  4379                           
  4380                           	psect	text12
  4381  0E2D                     __ptext12:	
  4382 ;; *************** function _Lcd_Init *****************
  4383 ;; Defined at:
  4384 ;;		line 83 in file "LCD.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;		None
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;		None
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  1    wreg      void 
  4391 ;; Registers used:
  4392 ;;		wreg, status,2, status,0, pclath, cstack
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4398 ;;      Params:         0       0       0       0       0
  4399 ;;      Locals:         0       0       0       0       0
  4400 ;;      Temps:          0       2       0       0       0
  4401 ;;      Totals:         0       2       0       0       0
  4402 ;;Total ram usage:        2 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    4
  4405 ;; This function calls:
  4406 ;;		_Lcd_Cmd
  4407 ;;		_Lcd_Port
  4408 ;; This function is called by:
  4409 ;;		_main
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           
  4414                           ;psect for function _Lcd_Init
  4415  0E2D                     _Lcd_Init:
  4416  0E2D                     l1808:	
  4417                           ;incstack = 0
  4418                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4419                           
  4420                           
  4421                           ;LCD.c: 84:     Lcd_Cmd(0x00);
  4422  0E2D  3000               	movlw	0
  4423  0E2E  120A  158A  247E  120A  158A  	fcall	_Lcd_Cmd
  4424                           
  4425                           ;LCD.c: 85:     Lcd_Port(0x00);
  4426  0E33  3000               	movlw	0
  4427  0E34  120A  158A  25A6  120A  158A  	fcall	_Lcd_Port
  4428  0E39                     l1810:
  4429                           
  4430                           ;LCD.c: 86:     _delay((unsigned long)((20)*(1000000/4000.0)));
  4431  0E39  3007               	movlw	7
  4432  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  4433  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  4434  0E3C  00A4               	movwf	??_Lcd_Init+1
  4435  0E3D  307C               	movlw	124
  4436  0E3E  00A3               	movwf	??_Lcd_Init
  4437  0E3F                     u2187:
  4438  0E3F  0BA3               	decfsz	??_Lcd_Init,f
  4439  0E40  2E3F               	goto	u2187
  4440  0E41  0BA4               	decfsz	??_Lcd_Init+1,f
  4441  0E42  2E3F               	goto	u2187
  4442  0E43  0000               	nop
  4443  0E44                     l1812:
  4444                           
  4445                           ;LCD.c: 87:     Lcd_Cmd(0x3f);
  4446  0E44  303F               	movlw	63
  4447  0E45  120A  158A  247E  120A  158A  	fcall	_Lcd_Cmd
  4448                           
  4449                           ;LCD.c: 88:     _delay((unsigned long)((5)*(1000000/4000.0)));
  4450  0E4A  30F9               	movlw	249
  4451  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  4452  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  4453  0E4D  00A3               	movwf	??_Lcd_Init
  4454  0E4E                     u2197:
  4455  0E4E  2E4F               	nop2
  4456  0E4F  0BA3               	decfsz	??_Lcd_Init,f
  4457  0E50  2E4E               	goto	u2197
  4458  0E51  2E52               	nop2
  4459  0E52                     l1814:
  4460                           
  4461                           ;LCD.c: 89:     Lcd_Cmd(0x3f);
  4462  0E52  303F               	movlw	63
  4463  0E53  120A  158A  247E  120A  158A  	fcall	_Lcd_Cmd
  4464  0E58                     l1816:
  4465                           
  4466                           ;LCD.c: 90:     _delay((unsigned long)((11)*(1000000/4000.0)));
  4467  0E58  3004               	movlw	4
  4468  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  4469  0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  4470  0E5B  00A4               	movwf	??_Lcd_Init+1
  4471  0E5C  3090               	movlw	144
  4472  0E5D  00A3               	movwf	??_Lcd_Init
  4473  0E5E                     u2207:
  4474  0E5E  0BA3               	decfsz	??_Lcd_Init,f
  4475  0E5F  2E5E               	goto	u2207
  4476  0E60  0BA4               	decfsz	??_Lcd_Init+1,f
  4477  0E61  2E5E               	goto	u2207
  4478  0E62  0000               	nop
  4479                           
  4480                           ;LCD.c: 91:     Lcd_Cmd(0x3f);
  4481  0E63  303F               	movlw	63
  4482  0E64  120A  158A  247E  120A  158A  	fcall	_Lcd_Cmd
  4483                           
  4484                           ;LCD.c: 93:     Lcd_Cmd(0x3f);
  4485  0E69  303F               	movlw	63
  4486  0E6A  120A  158A  247E  120A  158A  	fcall	_Lcd_Cmd
  4487                           
  4488                           ;LCD.c: 94:     Lcd_Cmd(0x08);
  4489  0E6F  3008               	movlw	8
  4490  0E70  120A  158A  247E  120A  158A  	fcall	_Lcd_Cmd
  4491                           
  4492                           ;LCD.c: 95:     Lcd_Cmd(0x01);
  4493  0E75  3001               	movlw	1
  4494  0E76  120A  158A  247E  120A  158A  	fcall	_Lcd_Cmd
  4495                           
  4496                           ;LCD.c: 96:     Lcd_Cmd(0x06);
  4497  0E7B  3006               	movlw	6
  4498  0E7C  120A  158A  247E  120A  158A  	fcall	_Lcd_Cmd
  4499  0E81                     l255:
  4500  0E81  0008               	return
  4501  0E82                     __end_of_Lcd_Init:
  4502                           
  4503                           	psect	text13
  4504  0C7E                     __ptext13:	
  4505 ;; *************** function _Lcd_Cmd *****************
  4506 ;; Defined at:
  4507 ;;		line 57 in file "LCD.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  a               1    wreg     unsigned char 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  a               1    2[BANK0 ] unsigned char 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  1    wreg      void 
  4514 ;; Registers used:
  4515 ;;		wreg, status,2, status,0, pclath, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4521 ;;      Params:         0       0       0       0       0
  4522 ;;      Locals:         0       1       0       0       0
  4523 ;;      Temps:          0       1       0       0       0
  4524 ;;      Totals:         0       2       0       0       0
  4525 ;;Total ram usage:        2 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    3
  4528 ;; This function calls:
  4529 ;;		_Lcd_Port
  4530 ;; This function is called by:
  4531 ;;		_main
  4532 ;;		_Lcd_Set_Cursor
  4533 ;;		_Lcd_Init
  4534 ;;		_Lcd_Clear
  4535 ;;		_Lcd_Shift_Right
  4536 ;;		_Lcd_Shift_Left
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           
  4541                           ;psect for function _Lcd_Cmd
  4542  0C7E                     _Lcd_Cmd:
  4543                           
  4544                           ;incstack = 0
  4545                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4546                           ;Lcd_Cmd@a stored from wreg
  4547  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  4548  0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  4549  0C80  00A2               	movwf	Lcd_Cmd@a
  4550  0C81                     l1618:
  4551                           
  4552                           ;LCD.c: 58:     RE0 = 0;
  4553  0C81  1009               	bcf	9,0	;volatile
  4554  0C82                     l1620:
  4555                           
  4556                           ;LCD.c: 59:     Lcd_Port(a);
  4557  0C82  0822               	movf	Lcd_Cmd@a,w
  4558  0C83  120A  158A  25A6  120A  158A  	fcall	_Lcd_Port
  4559  0C88                     l1622:
  4560                           
  4561                           ;LCD.c: 60:     RE1 = 1;
  4562  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  4563  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  4564  0C8A  1489               	bsf	9,1	;volatile
  4565  0C8B                     l1624:
  4566                           
  4567                           ;LCD.c: 61:     _delay((unsigned long)((4)*(1000000/4000.0)));
  4568  0C8B  30C7               	movlw	199
  4569  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  4570  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  4571  0C8E  00A1               	movwf	??_Lcd_Cmd
  4572  0C8F                     u2217:
  4573  0C8F  2C90               	nop2
  4574  0C90  0BA1               	decfsz	??_Lcd_Cmd,f
  4575  0C91  2C8F               	goto	u2217
  4576  0C92  2C93               	nop2
  4577  0C93                     l1626:
  4578                           
  4579                           ;LCD.c: 62:     RE1 = 0;
  4580  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  4581  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  4582  0C95  1089               	bcf	9,1	;volatile
  4583  0C96                     l243:
  4584  0C96  0008               	return
  4585  0C97                     __end_of_Lcd_Cmd:
  4586                           
  4587                           	psect	text14
  4588  0DA6                     __ptext14:	
  4589 ;; *************** function _Lcd_Port *****************
  4590 ;; Defined at:
  4591 ;;		line 13 in file "LCD.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  a               1    wreg     unsigned char 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  a               1    0[BANK0 ] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         0       0       0       0       0
  4606 ;;      Locals:         0       1       0       0       0
  4607 ;;      Temps:          0       0       0       0       0
  4608 ;;      Totals:         0       1       0       0       0
  4609 ;;Total ram usage:        1 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    2
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_Lcd_Cmd
  4616 ;;		_Lcd_Init
  4617 ;;		_Lcd_Write_Char
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           
  4622                           ;psect for function _Lcd_Port
  4623  0DA6                     _Lcd_Port:
  4624                           
  4625                           ;incstack = 0
  4626                           ; Regs used in _Lcd_Port: [wreg]
  4627                           ;Lcd_Port@a stored from wreg
  4628  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  4629  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  4630  0DA8  00A0               	movwf	Lcd_Port@a
  4631  0DA9                     l1600:
  4632                           
  4633                           ;LCD.c: 16:     if (a & 1)
  4634  0DA9  1C20               	btfss	Lcd_Port@a,0
  4635  0DAA  2DAC               	goto	u1091
  4636  0DAB  2DAD               	goto	u1090
  4637  0DAC                     u1091:
  4638  0DAC  2DAF               	goto	l224
  4639  0DAD                     u1090:
  4640  0DAD                     l1602:
  4641                           
  4642                           ;LCD.c: 17:         RD0 = 1;
  4643  0DAD  1408               	bsf	8,0	;volatile
  4644  0DAE  2DB0               	goto	l225
  4645  0DAF                     l224:	
  4646                           ;LCD.c: 18:     else
  4647                           
  4648                           
  4649                           ;LCD.c: 19:         RD0 = 0;
  4650  0DAF  1008               	bcf	8,0	;volatile
  4651  0DB0                     l225:
  4652                           
  4653                           ;LCD.c: 21:     if (a & 2)
  4654  0DB0  1CA0               	btfss	Lcd_Port@a,1
  4655  0DB1  2DB3               	goto	u1101
  4656  0DB2  2DB4               	goto	u1100
  4657  0DB3                     u1101:
  4658  0DB3  2DB6               	goto	l226
  4659  0DB4                     u1100:
  4660  0DB4                     l1604:
  4661                           
  4662                           ;LCD.c: 22:         RD1 = 1;
  4663  0DB4  1488               	bsf	8,1	;volatile
  4664  0DB5  2DB7               	goto	l227
  4665  0DB6                     l226:	
  4666                           ;LCD.c: 23:     else
  4667                           
  4668                           
  4669                           ;LCD.c: 24:         RD1 = 0;
  4670  0DB6  1088               	bcf	8,1	;volatile
  4671  0DB7                     l227:
  4672                           
  4673                           ;LCD.c: 26:     if (a & 4)
  4674  0DB7  1D20               	btfss	Lcd_Port@a,2
  4675  0DB8  2DBA               	goto	u1111
  4676  0DB9  2DBB               	goto	u1110
  4677  0DBA                     u1111:
  4678  0DBA  2DBD               	goto	l228
  4679  0DBB                     u1110:
  4680  0DBB                     l1606:
  4681                           
  4682                           ;LCD.c: 27:         RD2 = 1;
  4683  0DBB  1508               	bsf	8,2	;volatile
  4684  0DBC  2DBE               	goto	l229
  4685  0DBD                     l228:	
  4686                           ;LCD.c: 28:     else
  4687                           
  4688                           
  4689                           ;LCD.c: 29:         RD2 = 0;
  4690  0DBD  1108               	bcf	8,2	;volatile
  4691  0DBE                     l229:
  4692                           
  4693                           ;LCD.c: 31:     if (a & 8)
  4694  0DBE  1DA0               	btfss	Lcd_Port@a,3
  4695  0DBF  2DC1               	goto	u1121
  4696  0DC0  2DC2               	goto	u1120
  4697  0DC1                     u1121:
  4698  0DC1  2DC4               	goto	l230
  4699  0DC2                     u1120:
  4700  0DC2                     l1608:
  4701                           
  4702                           ;LCD.c: 32:         RD3 = 1;
  4703  0DC2  1588               	bsf	8,3	;volatile
  4704  0DC3  2DC5               	goto	l231
  4705  0DC4                     l230:	
  4706                           ;LCD.c: 33:     else
  4707                           
  4708                           
  4709                           ;LCD.c: 34:         RD3 = 0;
  4710  0DC4  1188               	bcf	8,3	;volatile
  4711  0DC5                     l231:
  4712                           
  4713                           ;LCD.c: 36:     if (a & 16)
  4714  0DC5  1E20               	btfss	Lcd_Port@a,4
  4715  0DC6  2DC8               	goto	u1131
  4716  0DC7  2DC9               	goto	u1130
  4717  0DC8                     u1131:
  4718  0DC8  2DCB               	goto	l232
  4719  0DC9                     u1130:
  4720  0DC9                     l1610:
  4721                           
  4722                           ;LCD.c: 37:         RD4 = 1;
  4723  0DC9  1608               	bsf	8,4	;volatile
  4724  0DCA  2DCC               	goto	l233
  4725  0DCB                     l232:	
  4726                           ;LCD.c: 38:     else
  4727                           
  4728                           
  4729                           ;LCD.c: 39:         RD4 = 0;
  4730  0DCB  1208               	bcf	8,4	;volatile
  4731  0DCC                     l233:
  4732                           
  4733                           ;LCD.c: 41:     if (a & 32)
  4734  0DCC  1EA0               	btfss	Lcd_Port@a,5
  4735  0DCD  2DCF               	goto	u1141
  4736  0DCE  2DD0               	goto	u1140
  4737  0DCF                     u1141:
  4738  0DCF  2DD2               	goto	l234
  4739  0DD0                     u1140:
  4740  0DD0                     l1612:
  4741                           
  4742                           ;LCD.c: 42:         RD5 = 1;
  4743  0DD0  1688               	bsf	8,5	;volatile
  4744  0DD1  2DD3               	goto	l235
  4745  0DD2                     l234:	
  4746                           ;LCD.c: 43:     else
  4747                           
  4748                           
  4749                           ;LCD.c: 44:         RD5 = 0;
  4750  0DD2  1288               	bcf	8,5	;volatile
  4751  0DD3                     l235:
  4752                           
  4753                           ;LCD.c: 46:     if (a & 64)
  4754  0DD3  1F20               	btfss	Lcd_Port@a,6
  4755  0DD4  2DD6               	goto	u1151
  4756  0DD5  2DD7               	goto	u1150
  4757  0DD6                     u1151:
  4758  0DD6  2DD9               	goto	l236
  4759  0DD7                     u1150:
  4760  0DD7                     l1614:
  4761                           
  4762                           ;LCD.c: 47:         RD6 = 1;
  4763  0DD7  1708               	bsf	8,6	;volatile
  4764  0DD8  2DDA               	goto	l237
  4765  0DD9                     l236:	
  4766                           ;LCD.c: 48:     else
  4767                           
  4768                           
  4769                           ;LCD.c: 49:         RD6 = 0;
  4770  0DD9  1308               	bcf	8,6	;volatile
  4771  0DDA                     l237:
  4772                           
  4773                           ;LCD.c: 51:     if (a & 128)
  4774  0DDA  1FA0               	btfss	Lcd_Port@a,7
  4775  0DDB  2DDD               	goto	u1161
  4776  0DDC  2DDE               	goto	u1160
  4777  0DDD                     u1161:
  4778  0DDD  2DE0               	goto	l238
  4779  0DDE                     u1160:
  4780  0DDE                     l1616:
  4781                           
  4782                           ;LCD.c: 52:         RD7 = 1;
  4783  0DDE  1788               	bsf	8,7	;volatile
  4784  0DDF  2DE1               	goto	l240
  4785  0DE0                     l238:	
  4786                           ;LCD.c: 53:     else
  4787                           
  4788                           
  4789                           ;LCD.c: 54:         RD7 = 0;
  4790  0DE0  1388               	bcf	8,7	;volatile
  4791  0DE1                     l240:
  4792  0DE1  0008               	return
  4793  0DE2                     __end_of_Lcd_Port:
  4794                           
  4795                           	psect	text15
  4796  0D79                     __ptext15:	
  4797 ;; *************** function _BTD_UNIDAD *****************
  4798 ;; Defined at:
  4799 ;;		line 25 in file "../Laboratorio1.X/BTD_CONVERTER.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  valor2          2    7[BANK0 ] int 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  salida2         2   11[BANK0 ] int 
  4804 ;;  temporal2       2    9[BANK0 ] int 
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  2    7[BANK0 ] int 
  4807 ;; Registers used:
  4808 ;;		wreg, status,2, status,0, pclath, cstack
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4814 ;;      Params:         0       2       0       0       0
  4815 ;;      Locals:         0       4       0       0       0
  4816 ;;      Temps:          0       0       0       0       0
  4817 ;;      Totals:         0       6       0       0       0
  4818 ;;Total ram usage:        6 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    3
  4821 ;; This function calls:
  4822 ;;		___awmod
  4823 ;; This function is called by:
  4824 ;;		_main
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           
  4829                           ;psect for function _BTD_UNIDAD
  4830  0D79                     _BTD_UNIDAD:
  4831  0D79                     l1926:	
  4832                           ;incstack = 0
  4833                           ; Regs used in _BTD_UNIDAD: [wreg+status,2+status,0+pclath+cstack]
  4834                           
  4835                           
  4836                           ;../Laboratorio1.X/BTD_CONVERTER.c: 26:     int temporal2;;../Laboratorio1.X/BTD_CONVERT
      +                          ER.c: 27:     int salida2;;../Laboratorio1.X/BTD_CONVERTER.c: 28:     temporal2 = valor2
      +                           % 100;
  4837  0D79  3064               	movlw	100
  4838  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  4839  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  4840  0D7C  00A0               	movwf	___awmod@divisor
  4841  0D7D  3000               	movlw	0
  4842  0D7E  00A1               	movwf	___awmod@divisor+1
  4843  0D7F  0828               	movf	BTD_UNIDAD@valor2+1,w
  4844  0D80  00A3               	movwf	___awmod@dividend+1
  4845  0D81  0827               	movf	BTD_UNIDAD@valor2,w
  4846  0D82  00A2               	movwf	___awmod@dividend
  4847  0D83  120A  158A  2682  120A  158A  	fcall	___awmod
  4848  0D88  1283               	bcf	3,5	;RP0=0, select bank0
  4849  0D89  1303               	bcf	3,6	;RP1=0, select bank0
  4850  0D8A  0821               	movf	?___awmod+1,w
  4851  0D8B  00AA               	movwf	BTD_UNIDAD@temporal2+1
  4852  0D8C  0820               	movf	?___awmod,w
  4853  0D8D  00A9               	movwf	BTD_UNIDAD@temporal2
  4854                           
  4855                           ;../Laboratorio1.X/BTD_CONVERTER.c: 29:     salida2 = temporal2 % 10;
  4856  0D8E  300A               	movlw	10
  4857  0D8F  00A0               	movwf	___awmod@divisor
  4858  0D90  3000               	movlw	0
  4859  0D91  00A1               	movwf	___awmod@divisor+1
  4860  0D92  082A               	movf	BTD_UNIDAD@temporal2+1,w
  4861  0D93  00A3               	movwf	___awmod@dividend+1
  4862  0D94  0829               	movf	BTD_UNIDAD@temporal2,w
  4863  0D95  00A2               	movwf	___awmod@dividend
  4864  0D96  120A  158A  2682  120A  158A  	fcall	___awmod
  4865  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  4866  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  4867  0D9D  0821               	movf	?___awmod+1,w
  4868  0D9E  00AC               	movwf	BTD_UNIDAD@salida2+1
  4869  0D9F  0820               	movf	?___awmod,w
  4870  0DA0  00AB               	movwf	BTD_UNIDAD@salida2
  4871  0DA1                     l1928:
  4872                           
  4873                           ;../Laboratorio1.X/BTD_CONVERTER.c: 30:     return (salida2);
  4874  0DA1  082C               	movf	BTD_UNIDAD@salida2+1,w
  4875  0DA2  00A8               	movwf	?_BTD_UNIDAD+1
  4876  0DA3  082B               	movf	BTD_UNIDAD@salida2,w
  4877  0DA4  00A7               	movwf	?_BTD_UNIDAD
  4878  0DA5                     l154:
  4879  0DA5  0008               	return
  4880  0DA6                     __end_of_BTD_UNIDAD:
  4881                           
  4882                           	psect	text16
  4883  0D4C                     __ptext16:	
  4884 ;; *************** function _BTD_DECENA *****************
  4885 ;; Defined at:
  4886 ;;		line 18 in file "../Laboratorio1.X/BTD_CONVERTER.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;  valor1          2    9[BANK0 ] int 
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  salida1         2   13[BANK0 ] int 
  4891 ;;  temporal1       2   11[BANK0 ] int 
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  2    9[BANK0 ] int 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, status,0, pclath, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4901 ;;      Params:         0       2       0       0       0
  4902 ;;      Locals:         0       4       0       0       0
  4903 ;;      Temps:          0       0       0       0       0
  4904 ;;      Totals:         0       6       0       0       0
  4905 ;;Total ram usage:        6 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    3
  4908 ;; This function calls:
  4909 ;;		___awdiv
  4910 ;;		___awmod
  4911 ;; This function is called by:
  4912 ;;		_main
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           
  4917                           ;psect for function _BTD_DECENA
  4918  0D4C                     _BTD_DECENA:
  4919  0D4C                     l1846:	
  4920                           ;incstack = 0
  4921                           ; Regs used in _BTD_DECENA: [wreg+status,2+status,0+pclath+cstack]
  4922                           
  4923                           
  4924                           ;../Laboratorio1.X/BTD_CONVERTER.c: 19:     int temporal1;;../Laboratorio1.X/BTD_CONVERT
      +                          ER.c: 20:     int salida1;;../Laboratorio1.X/BTD_CONVERTER.c: 21:     temporal1 = valor1
      +                           % 100;
  4925  0D4C  3064               	movlw	100
  4926  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  4927  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  4928  0D4F  00A0               	movwf	___awmod@divisor
  4929  0D50  3000               	movlw	0
  4930  0D51  00A1               	movwf	___awmod@divisor+1
  4931  0D52  082A               	movf	BTD_DECENA@valor1+1,w
  4932  0D53  00A3               	movwf	___awmod@dividend+1
  4933  0D54  0829               	movf	BTD_DECENA@valor1,w
  4934  0D55  00A2               	movwf	___awmod@dividend
  4935  0D56  120A  158A  2682  120A  158A  	fcall	___awmod
  4936  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  4937  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  4938  0D5D  0821               	movf	?___awmod+1,w
  4939  0D5E  00AC               	movwf	BTD_DECENA@temporal1+1
  4940  0D5F  0820               	movf	?___awmod,w
  4941  0D60  00AB               	movwf	BTD_DECENA@temporal1
  4942                           
  4943                           ;../Laboratorio1.X/BTD_CONVERTER.c: 22:     salida1 = temporal1/10;
  4944  0D61  300A               	movlw	10
  4945  0D62  00A0               	movwf	___awdiv@divisor
  4946  0D63  3000               	movlw	0
  4947  0D64  00A1               	movwf	___awdiv@divisor+1
  4948  0D65  082C               	movf	BTD_DECENA@temporal1+1,w
  4949  0D66  00A3               	movwf	___awdiv@dividend+1
  4950  0D67  082B               	movf	BTD_DECENA@temporal1,w
  4951  0D68  00A2               	movwf	___awdiv@dividend
  4952  0D69  120A  158A  2797  120A  158A  	fcall	___awdiv
  4953  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  4954  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  4955  0D70  0821               	movf	?___awdiv+1,w
  4956  0D71  00AE               	movwf	BTD_DECENA@salida1+1
  4957  0D72  0820               	movf	?___awdiv,w
  4958  0D73  00AD               	movwf	BTD_DECENA@salida1
  4959  0D74                     l1848:
  4960                           
  4961                           ;../Laboratorio1.X/BTD_CONVERTER.c: 23:     return (salida1);
  4962  0D74  082E               	movf	BTD_DECENA@salida1+1,w
  4963  0D75  00AA               	movwf	?_BTD_DECENA+1
  4964  0D76  082D               	movf	BTD_DECENA@salida1,w
  4965  0D77  00A9               	movwf	?_BTD_DECENA
  4966  0D78                     l151:
  4967  0D78  0008               	return
  4968  0D79                     __end_of_BTD_DECENA:
  4969                           
  4970                           	psect	text17
  4971  0E82                     __ptext17:	
  4972 ;; *************** function ___awmod *****************
  4973 ;; Defined at:
  4974 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  divisor         2    0[BANK0 ] int 
  4977 ;;  dividend        2    2[BANK0 ] int 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  sign            1    6[BANK0 ] unsigned char 
  4980 ;;  counter         1    5[BANK0 ] unsigned char 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  2    0[BANK0 ] int 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, status,0
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4990 ;;      Params:         0       4       0       0       0
  4991 ;;      Locals:         0       2       0       0       0
  4992 ;;      Temps:          0       1       0       0       0
  4993 ;;      Totals:         0       7       0       0       0
  4994 ;;Total ram usage:        7 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    2
  4997 ;; This function calls:
  4998 ;;		Nothing
  4999 ;; This function is called by:
  5000 ;;		_BTD_DECENA
  5001 ;;		_BTD_UNIDAD
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           
  5006                           ;psect for function ___awmod
  5007  0E82                     ___awmod:
  5008  0E82                     l1684:	
  5009                           ;incstack = 0
  5010                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5011                           
  5012  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  5013  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  5014  0E84  01A6               	clrf	___awmod@sign
  5015  0E85                     l1686:
  5016  0E85  1FA3               	btfss	___awmod@dividend+1,7
  5017  0E86  2E88               	goto	u1271
  5018  0E87  2E89               	goto	u1270
  5019  0E88                     u1271:
  5020  0E88  2E90               	goto	l1692
  5021  0E89                     u1270:
  5022  0E89                     l1688:
  5023  0E89  09A2               	comf	___awmod@dividend,f
  5024  0E8A  09A3               	comf	___awmod@dividend+1,f
  5025  0E8B  0AA2               	incf	___awmod@dividend,f
  5026  0E8C  1903               	skipnz
  5027  0E8D  0AA3               	incf	___awmod@dividend+1,f
  5028  0E8E                     l1690:
  5029  0E8E  01A6               	clrf	___awmod@sign
  5030  0E8F  0AA6               	incf	___awmod@sign,f
  5031  0E90                     l1692:
  5032  0E90  1FA1               	btfss	___awmod@divisor+1,7
  5033  0E91  2E93               	goto	u1281
  5034  0E92  2E94               	goto	u1280
  5035  0E93                     u1281:
  5036  0E93  2E99               	goto	l1696
  5037  0E94                     u1280:
  5038  0E94                     l1694:
  5039  0E94  09A0               	comf	___awmod@divisor,f
  5040  0E95  09A1               	comf	___awmod@divisor+1,f
  5041  0E96  0AA0               	incf	___awmod@divisor,f
  5042  0E97  1903               	skipnz
  5043  0E98  0AA1               	incf	___awmod@divisor+1,f
  5044  0E99                     l1696:
  5045  0E99  0820               	movf	___awmod@divisor,w
  5046  0E9A  0421               	iorwf	___awmod@divisor+1,w
  5047  0E9B  1903               	btfsc	3,2
  5048  0E9C  2E9E               	goto	u1291
  5049  0E9D  2E9F               	goto	u1290
  5050  0E9E                     u1291:
  5051  0E9E  2ECE               	goto	l1714
  5052  0E9F                     u1290:
  5053  0E9F                     l1698:
  5054  0E9F  01A5               	clrf	___awmod@counter
  5055  0EA0  0AA5               	incf	___awmod@counter,f
  5056  0EA1  2EAD               	goto	l1704
  5057  0EA2                     l1700:
  5058  0EA2  3001               	movlw	1
  5059  0EA3                     u1305:
  5060  0EA3  1003               	clrc
  5061  0EA4  0DA0               	rlf	___awmod@divisor,f
  5062  0EA5  0DA1               	rlf	___awmod@divisor+1,f
  5063  0EA6  3EFF               	addlw	-1
  5064  0EA7  1D03               	skipz
  5065  0EA8  2EA3               	goto	u1305
  5066  0EA9                     l1702:
  5067  0EA9  3001               	movlw	1
  5068  0EAA  00A4               	movwf	??___awmod
  5069  0EAB  0824               	movf	??___awmod,w
  5070  0EAC  07A5               	addwf	___awmod@counter,f
  5071  0EAD                     l1704:
  5072  0EAD  1FA1               	btfss	___awmod@divisor+1,7
  5073  0EAE  2EB0               	goto	u1311
  5074  0EAF  2EB1               	goto	u1310
  5075  0EB0                     u1311:
  5076  0EB0  2EA2               	goto	l1700
  5077  0EB1                     u1310:
  5078  0EB1                     l1706:
  5079  0EB1  0821               	movf	___awmod@divisor+1,w
  5080  0EB2  0223               	subwf	___awmod@dividend+1,w
  5081  0EB3  1D03               	skipz
  5082  0EB4  2EB7               	goto	u1325
  5083  0EB5  0820               	movf	___awmod@divisor,w
  5084  0EB6  0222               	subwf	___awmod@dividend,w
  5085  0EB7                     u1325:
  5086  0EB7  1C03               	skipc
  5087  0EB8  2EBA               	goto	u1321
  5088  0EB9  2EBB               	goto	u1320
  5089  0EBA                     u1321:
  5090  0EBA  2EC1               	goto	l1710
  5091  0EBB                     u1320:
  5092  0EBB                     l1708:
  5093  0EBB  0820               	movf	___awmod@divisor,w
  5094  0EBC  02A2               	subwf	___awmod@dividend,f
  5095  0EBD  0821               	movf	___awmod@divisor+1,w
  5096  0EBE  1C03               	skipc
  5097  0EBF  03A3               	decf	___awmod@dividend+1,f
  5098  0EC0  02A3               	subwf	___awmod@dividend+1,f
  5099  0EC1                     l1710:
  5100  0EC1  3001               	movlw	1
  5101  0EC2                     u1335:
  5102  0EC2  1003               	clrc
  5103  0EC3  0CA1               	rrf	___awmod@divisor+1,f
  5104  0EC4  0CA0               	rrf	___awmod@divisor,f
  5105  0EC5  3EFF               	addlw	-1
  5106  0EC6  1D03               	skipz
  5107  0EC7  2EC2               	goto	u1335
  5108  0EC8                     l1712:
  5109  0EC8  3001               	movlw	1
  5110  0EC9  02A5               	subwf	___awmod@counter,f
  5111  0ECA  1D03               	btfss	3,2
  5112  0ECB  2ECD               	goto	u1341
  5113  0ECC  2ECE               	goto	u1340
  5114  0ECD                     u1341:
  5115  0ECD  2EB1               	goto	l1706
  5116  0ECE                     u1340:
  5117  0ECE                     l1714:
  5118  0ECE  0826               	movf	___awmod@sign,w
  5119  0ECF  1903               	btfsc	3,2
  5120  0ED0  2ED2               	goto	u1351
  5121  0ED1  2ED3               	goto	u1350
  5122  0ED2                     u1351:
  5123  0ED2  2ED8               	goto	l1718
  5124  0ED3                     u1350:
  5125  0ED3                     l1716:
  5126  0ED3  09A2               	comf	___awmod@dividend,f
  5127  0ED4  09A3               	comf	___awmod@dividend+1,f
  5128  0ED5  0AA2               	incf	___awmod@dividend,f
  5129  0ED6  1903               	skipnz
  5130  0ED7  0AA3               	incf	___awmod@dividend+1,f
  5131  0ED8                     l1718:
  5132  0ED8  0823               	movf	___awmod@dividend+1,w
  5133  0ED9  00A1               	movwf	?___awmod+1
  5134  0EDA  0822               	movf	___awmod@dividend,w
  5135  0EDB  00A0               	movwf	?___awmod
  5136  0EDC                     l522:
  5137  0EDC  0008               	return
  5138  0EDD                     __end_of___awmod:
  5139                           
  5140                           	psect	text18
  5141  0F97                     __ptext18:	
  5142 ;; *************** function ___awdiv *****************
  5143 ;; Defined at:
  5144 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  divisor         2    0[BANK0 ] int 
  5147 ;;  dividend        2    2[BANK0 ] int 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  quotient        2    7[BANK0 ] int 
  5150 ;;  sign            1    6[BANK0 ] unsigned char 
  5151 ;;  counter         1    5[BANK0 ] unsigned char 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  2    0[BANK0 ] int 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5161 ;;      Params:         0       4       0       0       0
  5162 ;;      Locals:         0       4       0       0       0
  5163 ;;      Temps:          0       1       0       0       0
  5164 ;;      Totals:         0       9       0       0       0
  5165 ;;Total ram usage:        9 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:    2
  5168 ;; This function calls:
  5169 ;;		Nothing
  5170 ;; This function is called by:
  5171 ;;		_BTD_DECENA
  5172 ;;		_BTD_CENTENA
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           
  5177                           ;psect for function ___awdiv
  5178  0F97                     ___awdiv:
  5179  0F97                     l1640:	
  5180                           ;incstack = 0
  5181                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5182                           
  5183  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  5184  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  5185  0F99  01A6               	clrf	___awdiv@sign
  5186  0F9A                     l1642:
  5187  0F9A  1FA1               	btfss	___awdiv@divisor+1,7
  5188  0F9B  2F9D               	goto	u1171
  5189  0F9C  2F9E               	goto	u1170
  5190  0F9D                     u1171:
  5191  0F9D  2FA5               	goto	l1648
  5192  0F9E                     u1170:
  5193  0F9E                     l1644:
  5194  0F9E  09A0               	comf	___awdiv@divisor,f
  5195  0F9F  09A1               	comf	___awdiv@divisor+1,f
  5196  0FA0  0AA0               	incf	___awdiv@divisor,f
  5197  0FA1  1903               	skipnz
  5198  0FA2  0AA1               	incf	___awdiv@divisor+1,f
  5199  0FA3                     l1646:
  5200  0FA3  01A6               	clrf	___awdiv@sign
  5201  0FA4  0AA6               	incf	___awdiv@sign,f
  5202  0FA5                     l1648:
  5203  0FA5  1FA3               	btfss	___awdiv@dividend+1,7
  5204  0FA6  2FA8               	goto	u1181
  5205  0FA7  2FA9               	goto	u1180
  5206  0FA8                     u1181:
  5207  0FA8  2FB2               	goto	l1654
  5208  0FA9                     u1180:
  5209  0FA9                     l1650:
  5210  0FA9  09A2               	comf	___awdiv@dividend,f
  5211  0FAA  09A3               	comf	___awdiv@dividend+1,f
  5212  0FAB  0AA2               	incf	___awdiv@dividend,f
  5213  0FAC  1903               	skipnz
  5214  0FAD  0AA3               	incf	___awdiv@dividend+1,f
  5215  0FAE                     l1652:
  5216  0FAE  3001               	movlw	1
  5217  0FAF  00A4               	movwf	??___awdiv
  5218  0FB0  0824               	movf	??___awdiv,w
  5219  0FB1  06A6               	xorwf	___awdiv@sign,f
  5220  0FB2                     l1654:
  5221  0FB2  01A7               	clrf	___awdiv@quotient
  5222  0FB3  01A8               	clrf	___awdiv@quotient+1
  5223  0FB4                     l1656:
  5224  0FB4  0820               	movf	___awdiv@divisor,w
  5225  0FB5  0421               	iorwf	___awdiv@divisor+1,w
  5226  0FB6  1903               	btfsc	3,2
  5227  0FB7  2FB9               	goto	u1191
  5228  0FB8  2FBA               	goto	u1190
  5229  0FB9                     u1191:
  5230  0FB9  2FF1               	goto	l1676
  5231  0FBA                     u1190:
  5232  0FBA                     l1658:
  5233  0FBA  01A5               	clrf	___awdiv@counter
  5234  0FBB  0AA5               	incf	___awdiv@counter,f
  5235  0FBC  2FC8               	goto	l1664
  5236  0FBD                     l1660:
  5237  0FBD  3001               	movlw	1
  5238  0FBE                     u1205:
  5239  0FBE  1003               	clrc
  5240  0FBF  0DA0               	rlf	___awdiv@divisor,f
  5241  0FC0  0DA1               	rlf	___awdiv@divisor+1,f
  5242  0FC1  3EFF               	addlw	-1
  5243  0FC2  1D03               	skipz
  5244  0FC3  2FBE               	goto	u1205
  5245  0FC4                     l1662:
  5246  0FC4  3001               	movlw	1
  5247  0FC5  00A4               	movwf	??___awdiv
  5248  0FC6  0824               	movf	??___awdiv,w
  5249  0FC7  07A5               	addwf	___awdiv@counter,f
  5250  0FC8                     l1664:
  5251  0FC8  1FA1               	btfss	___awdiv@divisor+1,7
  5252  0FC9  2FCB               	goto	u1211
  5253  0FCA  2FCC               	goto	u1210
  5254  0FCB                     u1211:
  5255  0FCB  2FBD               	goto	l1660
  5256  0FCC                     u1210:
  5257  0FCC                     l1666:
  5258  0FCC  3001               	movlw	1
  5259  0FCD                     u1225:
  5260  0FCD  1003               	clrc
  5261  0FCE  0DA7               	rlf	___awdiv@quotient,f
  5262  0FCF  0DA8               	rlf	___awdiv@quotient+1,f
  5263  0FD0  3EFF               	addlw	-1
  5264  0FD1  1D03               	skipz
  5265  0FD2  2FCD               	goto	u1225
  5266  0FD3  0821               	movf	___awdiv@divisor+1,w
  5267  0FD4  0223               	subwf	___awdiv@dividend+1,w
  5268  0FD5  1D03               	skipz
  5269  0FD6  2FD9               	goto	u1235
  5270  0FD7  0820               	movf	___awdiv@divisor,w
  5271  0FD8  0222               	subwf	___awdiv@dividend,w
  5272  0FD9                     u1235:
  5273  0FD9  1C03               	skipc
  5274  0FDA  2FDC               	goto	u1231
  5275  0FDB  2FDD               	goto	u1230
  5276  0FDC                     u1231:
  5277  0FDC  2FE4               	goto	l1672
  5278  0FDD                     u1230:
  5279  0FDD                     l1668:
  5280  0FDD  0820               	movf	___awdiv@divisor,w
  5281  0FDE  02A2               	subwf	___awdiv@dividend,f
  5282  0FDF  0821               	movf	___awdiv@divisor+1,w
  5283  0FE0  1C03               	skipc
  5284  0FE1  03A3               	decf	___awdiv@dividend+1,f
  5285  0FE2  02A3               	subwf	___awdiv@dividend+1,f
  5286  0FE3                     l1670:
  5287  0FE3  1427               	bsf	___awdiv@quotient,0
  5288  0FE4                     l1672:
  5289  0FE4  3001               	movlw	1
  5290  0FE5                     u1245:
  5291  0FE5  1003               	clrc
  5292  0FE6  0CA1               	rrf	___awdiv@divisor+1,f
  5293  0FE7  0CA0               	rrf	___awdiv@divisor,f
  5294  0FE8  3EFF               	addlw	-1
  5295  0FE9  1D03               	skipz
  5296  0FEA  2FE5               	goto	u1245
  5297  0FEB                     l1674:
  5298  0FEB  3001               	movlw	1
  5299  0FEC  02A5               	subwf	___awdiv@counter,f
  5300  0FED  1D03               	btfss	3,2
  5301  0FEE  2FF0               	goto	u1251
  5302  0FEF  2FF1               	goto	u1250
  5303  0FF0                     u1251:
  5304  0FF0  2FCC               	goto	l1666
  5305  0FF1                     u1250:
  5306  0FF1                     l1676:
  5307  0FF1  0826               	movf	___awdiv@sign,w
  5308  0FF2  1903               	btfsc	3,2
  5309  0FF3  2FF5               	goto	u1261
  5310  0FF4  2FF6               	goto	u1260
  5311  0FF5                     u1261:
  5312  0FF5  2FFB               	goto	l1680
  5313  0FF6                     u1260:
  5314  0FF6                     l1678:
  5315  0FF6  09A7               	comf	___awdiv@quotient,f
  5316  0FF7  09A8               	comf	___awdiv@quotient+1,f
  5317  0FF8  0AA7               	incf	___awdiv@quotient,f
  5318  0FF9  1903               	skipnz
  5319  0FFA  0AA8               	incf	___awdiv@quotient+1,f
  5320  0FFB                     l1680:
  5321  0FFB  0828               	movf	___awdiv@quotient+1,w
  5322  0FFC  00A1               	movwf	?___awdiv+1
  5323  0FFD  0827               	movf	___awdiv@quotient,w
  5324  0FFE  00A0               	movwf	?___awdiv
  5325  0FFF                     l509:
  5326  0FFF  0008               	return
  5327  1000                     __end_of___awdiv:
  5328                           
  5329                           	psect	text19
  5330  0F38                     __ptext19:	
  5331 ;; *************** function _isr *****************
  5332 ;; Defined at:
  5333 ;;		line 50 in file "main.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;		None
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;		None
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  1    wreg      void 
  5340 ;; Registers used:
  5341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5347 ;;      Params:         0       0       0       0       0
  5348 ;;      Locals:         0       0       0       0       0
  5349 ;;      Temps:          5       0       0       0       0
  5350 ;;      Totals:         5       0       0       0       0
  5351 ;;Total ram usage:        5 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    1
  5354 ;; This function calls:
  5355 ;;		_ADC
  5356 ;; This function is called by:
  5357 ;;		Interrupt level 1
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           
  5362                           ;psect for function _isr
  5363  0F38                     _isr:
  5364  0F38                     i1l2152:
  5365                           
  5366                           ;main.c: 53:     if (RCIF){
  5367  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  5368  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  5369  0F3A  1E8C               	btfss	12,5	;volatile
  5370  0F3B  2F3D               	goto	u206_21
  5371  0F3C  2F3E               	goto	u206_20
  5372  0F3D                     u206_21:
  5373  0F3D  2F43               	goto	i1l2158
  5374  0F3E                     u206_20:
  5375  0F3E                     i1l2154:
  5376                           
  5377                           ;main.c: 54:        Entrada = RCREG;
  5378  0F3E  081A               	movf	26,w	;volatile
  5379  0F3F  00F6               	movwf	??_isr
  5380  0F40  0876               	movf	??_isr,w
  5381  0F41  00E1               	movwf	_Entrada
  5382  0F42                     i1l2156:
  5383                           
  5384                           ;main.c: 55:        RCREG = 0;
  5385  0F42  019A               	clrf	26	;volatile
  5386  0F43                     i1l2158:
  5387                           
  5388                           ;main.c: 58:     if (ADIF == 1){
  5389  0F43  1F0C               	btfss	12,6	;volatile
  5390  0F44  2F46               	goto	u207_21
  5391  0F45  2F47               	goto	u207_20
  5392  0F46                     u207_21:
  5393  0F46  2F7E               	goto	i1l106
  5394  0F47                     u207_20:
  5395  0F47  2F6E               	goto	i1l2176
  5396  0F48                     i1l2162:
  5397                           
  5398                           ;main.c: 61:                 ADRESH_CANAL1 = ADC(0x01);
  5399  0F48  3001               	movlw	1
  5400  0F49  00F0               	movwf	ADC@channel
  5401  0F4A  3000               	movlw	0
  5402  0F4B  00F1               	movwf	ADC@channel+1
  5403  0F4C  120A  158A  2467  120A  158A  	fcall	_ADC
  5404  0F51  0871               	movf	?_ADC+1,w
  5405  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  5406  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  5407  0F54  00E0               	movwf	_ADRESH_CANAL1+1
  5408  0F55  0870               	movf	?_ADC,w
  5409  0F56  00DF               	movwf	_ADRESH_CANAL1
  5410  0F57                     i1l2164:
  5411                           
  5412                           ;main.c: 62:                 Banderas = 2;
  5413  0F57  3002               	movlw	2
  5414  0F58  00F6               	movwf	??_isr
  5415  0F59  0876               	movf	??_isr,w
  5416  0F5A  00FB               	movwf	_Banderas
  5417  0F5B                     i1l2166:
  5418                           
  5419                           ;main.c: 63:                 ADIF = 0;
  5420  0F5B  130C               	bcf	12,6	;volatile
  5421                           
  5422                           ;main.c: 64:                 break;
  5423  0F5C  2F7E               	goto	i1l106
  5424  0F5D                     i1l2168:
  5425                           
  5426                           ;main.c: 66:                 ADRESH_CANAL2 = ADC(0x00);
  5427  0F5D  3000               	movlw	0
  5428  0F5E  00F0               	movwf	ADC@channel
  5429  0F5F  00F1               	movwf	ADC@channel+1
  5430  0F60  120A  158A  2467  120A  158A  	fcall	_ADC
  5431  0F65  0871               	movf	?_ADC+1,w
  5432  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  5433  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  5434  0F68  00DE               	movwf	_ADRESH_CANAL2+1
  5435  0F69  0870               	movf	?_ADC,w
  5436  0F6A  00DD               	movwf	_ADRESH_CANAL2
  5437  0F6B                     i1l2170:
  5438                           
  5439                           ;main.c: 67:                 Banderas = 1;
  5440  0F6B  01FB               	clrf	_Banderas
  5441  0F6C  0AFB               	incf	_Banderas,f
  5442  0F6D  2F5B               	goto	i1l2166
  5443  0F6E                     i1l2176:
  5444  0F6E  087B               	movf	_Banderas,w
  5445  0F6F  00F6               	movwf	??_isr
  5446  0F70  01F7               	clrf	??_isr+1
  5447                           
  5448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5449                           ; Switch size 1, requested type "simple"
  5450                           ; Number of cases is 1, Range of values is 0 to 0
  5451                           ; switch strategies available:
  5452                           ; Name         Instructions Cycles
  5453                           ; simple_byte            4     3 (average)
  5454                           ; direct_byte           11     8 (fixed)
  5455                           ; jumptable            260     6 (fixed)
  5456                           ;	Chosen strategy is simple_byte
  5457  0F71  0877               	movf	??_isr+1,w
  5458  0F72  3A00               	xorlw	0	; case 0
  5459  0F73  1903               	skipnz
  5460  0F74  2F76               	goto	i1l2340
  5461  0F75  2F7E               	goto	i1l106
  5462  0F76                     i1l2340:
  5463                           
  5464                           ; Switch size 1, requested type "simple"
  5465                           ; Number of cases is 2, Range of values is 1 to 2
  5466                           ; switch strategies available:
  5467                           ; Name         Instructions Cycles
  5468                           ; simple_byte            7     4 (average)
  5469                           ; direct_byte           17    11 (fixed)
  5470                           ; jumptable            263     9 (fixed)
  5471                           ;	Chosen strategy is simple_byte
  5472  0F76  0876               	movf	??_isr,w
  5473  0F77  3A01               	xorlw	1	; case 1
  5474  0F78  1903               	skipnz
  5475  0F79  2F48               	goto	i1l2162
  5476  0F7A  3A03               	xorlw	3	; case 2
  5477  0F7B  1903               	skipnz
  5478  0F7C  2F5D               	goto	i1l2168
  5479  0F7D  2F7E               	goto	i1l106
  5480  0F7E                     i1l106:	
  5481                           ;main.c: 71:     }
  5482                           
  5483                           
  5484                           ;main.c: 72:     if (PIR1bits.TMR1IF){
  5485  0F7E  1C0C               	btfss	12,0	;volatile
  5486  0F7F  2F81               	goto	u208_21
  5487  0F80  2F82               	goto	u208_20
  5488  0F81                     u208_21:
  5489  0F81  2F8E               	goto	i1l113
  5490  0F82                     u208_20:
  5491  0F82                     i1l2178:
  5492                           
  5493                           ;main.c: 73:         if(mandar_datos == 0){
  5494  0F82  087C               	movf	_mandar_datos,w
  5495  0F83  1D03               	btfss	3,2
  5496  0F84  2F86               	goto	u209_21
  5497  0F85  2F87               	goto	u209_20
  5498  0F86                     u209_21:
  5499  0F86  2F89               	goto	i1l2182
  5500  0F87                     u209_20:
  5501  0F87                     i1l2180:
  5502                           
  5503                           ;main.c: 74:          mandar_datos = 1;
  5504  0F87  01FC               	clrf	_mandar_datos
  5505  0F88  0AFC               	incf	_mandar_datos,f
  5506  0F89                     i1l2182:
  5507                           
  5508                           ;main.c: 76:        TMR1H = 11;
  5509  0F89  300B               	movlw	11
  5510  0F8A  008F               	movwf	15	;volatile
  5511                           
  5512                           ;main.c: 77:        TMR1L = 71;
  5513  0F8B  3047               	movlw	71
  5514  0F8C  008E               	movwf	14	;volatile
  5515  0F8D                     i1l2184:
  5516                           
  5517                           ;main.c: 78:        PIR1bits.TMR1IF = 0;
  5518  0F8D  100C               	bcf	12,0	;volatile
  5519  0F8E                     i1l113:
  5520  0F8E  087A               	movf	??_isr+4,w
  5521  0F8F  008A               	movwf	10
  5522  0F90  0879               	movf	??_isr+3,w
  5523  0F91  0084               	movwf	4
  5524  0F92  0E78               	swapf	??_isr+2,w
  5525  0F93  0083               	movwf	3
  5526  0F94  0EFE               	swapf	btemp,f
  5527  0F95  0E7E               	swapf	btemp,w
  5528  0F96  0009               	retfie
  5529  0F97                     __end_of_isr:
  5530                           
  5531                           	psect	intentry
  5532  0004                     __pintentry:	
  5533                           ;incstack = 0
  5534                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5535                           
  5536  0004                     interrupt_function:
  5537  007E                     saved_w	set	btemp
  5538  0004  00FE               	movwf	btemp
  5539  0005  0E03               	swapf	3,w
  5540  0006  00F8               	movwf	??_isr+2
  5541  0007  0804               	movf	4,w
  5542  0008  00F9               	movwf	??_isr+3
  5543  0009  080A               	movf	10,w
  5544  000A  00FA               	movwf	??_isr+4
  5545  000B  120A  158A  2F38   	ljmp	_isr
  5546                           
  5547                           	psect	text20
  5548  0C67                     __ptext20:	
  5549 ;; *************** function _ADC *****************
  5550 ;; Defined at:
  5551 ;;		line 15 in file "../Laboratorio1.X/ADC_CONVERTER.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  channel         2    0[COMMON] unsigned int 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;  salida          2    4[COMMON] int 
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  2    0[COMMON] unsigned int 
  5558 ;; Registers used:
  5559 ;;		wreg, status,2, status,0
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5565 ;;      Params:         2       0       0       0       0
  5566 ;;      Locals:         2       0       0       0       0
  5567 ;;      Temps:          2       0       0       0       0
  5568 ;;      Totals:         6       0       0       0       0
  5569 ;;Total ram usage:        6 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; This function calls:
  5572 ;;		Nothing
  5573 ;; This function is called by:
  5574 ;;		_isr
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           
  5579                           ;psect for function _ADC
  5580  0C67                     _ADC:
  5581  0C67                     i1l1736:	
  5582                           ;incstack = 0
  5583                           ; Regs used in _ADC: [wreg+status,2+status,0]
  5584                           
  5585                           
  5586                           ;../Laboratorio1.X/ADC_CONVERTER.c: 16:     int salida;;../Laboratorio1.X/ADC_CONVERTER.
      +                          c: 17:     ADCON0bits.CHS = channel;
  5587  0C67  0870               	movf	ADC@channel,w
  5588  0C68  00F2               	movwf	??_ADC
  5589  0C69  0DF2               	rlf	??_ADC,f
  5590  0C6A  0DF2               	rlf	??_ADC,f
  5591  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5592  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5593  0C6D  081F               	movf	31,w	;volatile
  5594  0C6E  0672               	xorwf	??_ADC,w
  5595  0C6F  39C3               	andlw	-61
  5596  0C70  0672               	xorwf	??_ADC,w
  5597  0C71  009F               	movwf	31	;volatile
  5598  0C72                     i1l1738:
  5599                           
  5600                           ;../Laboratorio1.X/ADC_CONVERTER.c: 18:     salida = ADRESH;
  5601  0C72  081E               	movf	30,w	;volatile
  5602  0C73  00F2               	movwf	??_ADC
  5603  0C74  01F3               	clrf	??_ADC+1
  5604  0C75  0872               	movf	??_ADC,w
  5605  0C76  00F4               	movwf	ADC@salida
  5606  0C77  0873               	movf	??_ADC+1,w
  5607  0C78  00F5               	movwf	ADC@salida+1
  5608  0C79                     i1l1740:
  5609                           
  5610                           ;../Laboratorio1.X/ADC_CONVERTER.c: 19:     return(salida);
  5611  0C79  0875               	movf	ADC@salida+1,w
  5612  0C7A  00F1               	movwf	?_ADC+1
  5613  0C7B  0874               	movf	ADC@salida,w
  5614  0C7C  00F0               	movwf	?_ADC
  5615  0C7D                     i1l135:
  5616  0C7D  0008               	return
  5617  0C7E                     __end_of_ADC:
  5618  007E                     btemp	set	126	;btemp
  5619  007E                     wtemp0	set	126
  5620                           
  5621                           	psect	config
  5622                           
  5623                           ;Config register CONFIG1 @ 0x2007
  5624                           ;	Oscillator Selection bits
  5625                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5626                           ;	Watchdog Timer Enable bit
  5627                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5628                           ;	Power-up Timer Enable bit
  5629                           ;	PWRTE = ON, PWRT enabled
  5630                           ;	RE3/MCLR pin function select bit
  5631                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5632                           ;	Code Protection bit
  5633                           ;	CP = OFF, Program memory code protection is disabled
  5634                           ;	Data Code Protection bit
  5635                           ;	CPD = OFF, Data memory code protection is disabled
  5636                           ;	Brown Out Reset Selection bits
  5637                           ;	BOREN = OFF, BOR disabled
  5638                           ;	Internal External Switchover bit
  5639                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5640                           ;	Fail-Safe Clock Monitor Enabled bit
  5641                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5642                           ;	Low Voltage Programming Enable bit
  5643                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  5644                           ;	In-Circuit Debugger Mode bit
  5645                           ;	DEBUG = 0x1, unprogrammed default
  5646  2007                     	org	8199
  5647  2007  30C4               	dw	12484
  5648                           
  5649                           ;Config register CONFIG2 @ 0x2008
  5650                           ;	Brown-out Reset Selection bit
  5651                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5652                           ;	Flash Program Memory Self Write Enable bits
  5653                           ;	WRT = OFF, Write protection off
  5654  2008                     	org	8200
  5655  2008  3FFF               	dw	16383

Data Sizes:
    Strings     45
    Constant    0
    Data        52
    BSS         12
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     55      66
    BANK1            80      0      52
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    print@palabra	PTR unsigned char  size(1) Largest target is 13
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[13]), STR_2(CODE[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    _main->___fltol
    _int_string->_BTD_DECENA
    ___fltol->___flmul
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _BTD_UNIDAD->___awmod
    _BTD_DECENA->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10170
                                             51 BANK0      4     4      0
                         _BTD_DECENA
                         _BTD_UNIDAD
                            _Lcd_Cmd
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _enviar_letra
                         _int_string
                              _print
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print                                                2     2      0     177
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _int_string                                           2     0      2     782
                                             15 BANK0      2     0      2
                         _BTD_DECENA (ARG)
                         _BTD_UNIDAD (ARG)
 ---------------------------------------------------------------------------------
 (1) _enviar_letra                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     457
                                             40 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2721
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     344
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     221
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1320
                                              3 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              3 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     198
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _BTD_UNIDAD                                           6     4      2    1200
                                              7 BANK0      6     4      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _BTD_DECENA                                           6     4      2    1804
                                              9 BANK0      6     4      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0     197
                                              6 COMMON     5     5      0
                                _ADC
 ---------------------------------------------------------------------------------
 (5) _ADC                                                  6     4      2     197
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BTD_DECENA
     ___awdiv
     ___awmod
   _BTD_UNIDAD
     ___awmod
   _Lcd_Cmd
     _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _enviar_letra
   _int_string
     _BTD_DECENA (ARG)
       ___awdiv
       ___awmod
     _BTD_UNIDAD (ARG)
       ___awmod
   _print
   _setup

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      34       7       65.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     37      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      83      12        0.0%
ABS                  0      0      83       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 28 23:41:00 2021

             print@palabra 0021                          pc 0002               ___awdiv@sign 0026  
                       fsr 0004        __Umul8_16@word_mpld 0026                        l230 0DC4  
                      l151 0D78                        l231 0DC5                        l240 0DE1  
                      l232 0DCB                        l224 0DAF                        l128 0E2C  
                      l233 0DCC                        l225 0DB0                        l154 0DA5  
                      l234 0DD2                        l226 0DB6                        l235 0DD3  
                      l227 0DB7                        l243 0C96                        l236 0DD9  
                      l228 0DBD                        l252 0CF9                        l237 0DDA  
                      l229 0DBE                        l181 0C4D                        l165 0CB7  
                      l238 0DE0                        l255 0E81                        _ADC 0C67  
                      l264 0D22                        l184 0C53                        l169 0CD3  
                      l522 0EDC                        l258 0CB2                        l509 0FFF  
                      l189 0F37                        l542 07C8                        l552 07C8  
                      l802 0716                        l803 0722                        l549 07B3  
                      l751 02FB                        l745 038F                        l764 0D39  
                      l757 0383                        l766 0D4B                        l791 074C  
                      l795 06FA                        l789 06B5                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RE0 0048  
                      _RD3 0043                        _RE1 0049                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _isr 0F38                        fsr0 0004                        indf 0000  
             ___awmod@sign 0026               ___flmul@aexp 0040               ___flmul@bexp 0041  
             ___flmul@sign 003B               ___flmul@temp 0046               ___flmul@prod 0042  
                     ?_ADC 0070               ___fltol@exp1 0052                       l2000 007F  
                     l2002 0081                       l2100 037B                       l2020 00F2  
                     l2012 009C                       l2004 0089                       l2102 037C  
                     l2030 016F                       l2022 011E                       l2014 00AC  
                     l2006 008E                       l2110 0699                       l2104 0387  
                     l2040 01EF                       l2032 018C                       l2024 013A  
                     l2016 00B9                       l2008 0093                       l2120 06C6  
                     l2112 069D                       l2200 03BB                       l2050 02A7  
                     l2042 021C                       l2034 019C                       l2026 0156  
                     l2018 00D6                       l2130 06F1                       l2122 06CB  
                     l2114 06AD                       l2210 03CA                       l2202 03BD  
                     PORTB 0006                       l2060 02CC                       l2052 02B0  
                     l2044 022C                       l2036 01B9                       l2028 015F  
                     l2140 0724                       l2132 0701                       l2124 06D8  
                     l2116 06BD                       l2108 0694                       l2220 04A2  
                     l2212 0402                       l2204 03C1                       l2070 02E4  
                     l2062 02D5                       l2054 02BE                       l2046 0259  
                     l2038 01D2                       l2142 073A                       l2134 070C  
                     l2126 06DF                       l2230 0506                       l2222 04A8  
                     l2214 043A                       l2206 03C7                       l1600 0DA9  
                     l2080 0313                       l2072 02F8                       l2056 02C7  
                     l2064 02DB                       l2048 027F                       l2144 073F  
                     l2136 0710                       l2128 06E3                       l2240 059C  
                     l2232 0530                       l2224 04D6                       l2216 0479  
                     l1610 0DC9                       l1602 0DAD                       l2090 034E  
                     l2082 0317                       l2066 02DF                       l2058 02CB  
                     l2146 0743                       l2138 071A                       l2250 0602  
                     l2242 05BA                       l2234 053C                       l2226 04F4  
                     l2218 047E                       l1700 0EA2                       l1612 0DD0  
                     l1604 0DB4                       l1620 0C82                       l2092 035D  
                     l2084 0330                       l2076 0300                       l2068 02E0  
                     l2148 0744                       l2260 067A                       l2252 0608  
                     l2244 05C6                       l2236 0566                       l2228 0500  
                     l1710 0EC1                       l1702 0EA9                       l1614 0DD7  
                     l1606 0DBB                       l1622 0C88                       l1630 0C9E  
                     l2094 0367                       l2078 0305                       l2086 0336  
                     l2262 0680                       l2254 0614                       l2246 05CC  
                     l2238 056C                       l2190 0390                       l1640 0F97  
                     l1712 0EC8                       l1704 0EAD                       l1616 0DDE  
                     l1608 0DC2                       l1624 0C8B                       l1632 0C9F  
                     l2096 0369                       l2088 0343                       l1800 0E22  
                     l2264 0686                       l2256 0650                       l2248 05F6  
                     l2192 0395                       l1650 0FA9                       l1642 0F9A  
                     l1706 0EB1                       l1714 0ECE                       l1626 0C93  
                     l1618 0C81                       l1810 0E39                       l1634 0CA5  
                     l1730 0D42                       l1722 0D26                       l2098 0377  
                     l2338 0F17                       l1802 0E23                       l2266 068C  
                     l2258 066E                       l2194 03AC                       l1660 0FBD  
                     l1652 0FAE                       l1644 0F9E                       l1716 0ED3  
                     l1708 0EBB                       l1812 0E44                       l1820 0CDC  
                     l1636 0CA8                       l1628 0C9A                       l1732 0D47  
                     l1724 0D28                       l1804 0E26                       l2196 03B2  
                     l1670 0FE3                       l1662 0FC4                       l1654 0FB2  
                     l1646 0FA3                       l1718 0ED8                       l1814 0E52  
                     l1822 0CE1                       l1638 0CAF                       l1830 0CFD  
                     l1726 0D2F                       l1902 0F06                       l1806 0E2A  
                     l1750 0DED                       l2198 03B5                       l1680 0FFB  
                     l1672 0FE4                       l1664 0FC8                       l1656 0FB4  
                     l1648 0FA5                       l1816 0E58                       l1808 0E2D  
                     l1824 0CE8                       l1832 0D00                       l1728 0D33  
                     l1840 0CBB                       l1760 0DFD                       l1752 0DF3  
                     l1744 0DE2                       l1674 0FEB                       l1666 0FCC  
                     l1658 0FBA                       l1690 0E8E                       l1826 0CEE  
                     l1818 0CD7                       l1834 0D0D                       l1922 0C4D  
                     l1842 0CC3                       l1770 0E08                       l1762 0DFF  
                     l1754 0DF4                       l1746 0DE8                       l1668 0FDD  
                     l1676 0FF1                       l1692 0E90                       l1684 0E82  
                     l1828 0CF3                       l1836 0D15                       l1940 0778  
                     l1932 074D                       l1924 0C51                       l1908 0F0B  
                     l1860 0EE3                       l1916 0F10                       l1852 0EDD  
                     l1844 0CC7                       l1780 0E15                       l1772 0E0B  
                     l1764 0E01                       l1756 0DFB                       l1748 0DEC  
                     l1678 0FF6                       l1694 0E94                       l1686 0E85  
                     l1846 0D4C                       l1926 0D79                       l1942 0779  
                     l1934 075A                       l1854 0EDE                       l1838 0CB6  
                     l1790 0E1D                       l1782 0E16                       l1774 0E0E  
                     l1766 0E02                       l1758 0DFC                       l1696 0E99  
                     l1688 0E89                       l1848 0D74                       l1928 0DA1  
                     l1944 0781                       l1872 0EED                       l1792 0E1E  
                     l1784 0E17                       l1776 0E11                       l1768 0E05  
                     l1698 0E9F                       l1970 0036                       l1962 07A8  
                     l1954 078F                       l1946 0783                       l1938 0763  
                     l1890 0EFC                       l1866 0EE8                       l1794 0E1F  
                     l1786 0E1B                       l1778 0E14                       l1980 004B  
                     l1972 003C                       l1964 07B8                       l1948 0787  
                     l1956 07A1                       l1884 0EF7                       l1796 0E20  
                     l1788 0E1C                       l1990 0068                       l1982 0053  
                     l1974 0040                       l1966 07BD                       l1878 0EF2  
                     l1798 0E21                       l1992 006C                       l1984 0055  
                     l1976 0041                       l1968 002F                       l1896 0F01  
                     l1994 006D                       l1986 005D                       l1978 0046  
                     l1996 0072                       l1988 0062                       l1998 0077  
                     _ADIF 0066                       ?_isr 0070                       STR_1 0806  
                     STR_2 0824                       STR_3 0817                       STR_4 0831  
                     STR_5 082F                       _BRGH 04C2                       u1100 0DB4  
                     u1101 0DB3                       u1110 0DBB                       u1111 0DBA  
                     u1120 0DC2                       u2000 0710                       u1121 0DC1  
                     u2001 070F                       u1210 0FCC                       u1130 0DC9  
                     u2010 0716                       u1211 0FCB                       u1131 0DC8  
                     u2011 0715                       u1140 0DD0                       u2020 071A  
                     u2100 03BB                       u1205 0FBE                       u1141 0DCF  
                     u2021 0719                       u2101 03BA                       u1230 0FDD  
                     u1310 0EB1                       u1150 0DD7                       u2030 072F  
                     u2110 03C7                       u1231 0FDC                       u1311 0EB0  
                     u1151 0DD6                       u2111 03C6                       u1320 0EBB  
                     u1160 0DDE                       u1400 0CEE                       u2040 073F  
                     u2120 047E                       u1225 0FCD                       u1321 0EBA  
                     u1305 0EA3                       u1161 0DDD                       u1401 0CED  
                     u2041 073E                       u2121 047D                       u1250 0FF1  
                     u1170 0F9E                       u1090 0DAD                       u1410 0D22  
                     u2050 0743                       u1251 0FF0                       u1235 0FD9  
                     u1171 0F9D                       u1091 0DAC                       u1411 0D21  
                     u2051 0742                       u2035 072A                       u1260 0FF6  
                     u1180 0FA9                       u1340 0ECE                       u1500 07A0  
                     u1420 0CBB                       u1261 0FF5                       u1245 0FE5  
                     u1181 0FA8                       u1341 0ECD                       u1325 0EB7  
                     u1501 079F                       u1421 0CBA                       u1190 0FBA  
                     u1350 0ED3                       u1270 0E89                       u1510 07A7  
                     u1430 0CD3                       u1191 0FB9                       u1351 0ED2  
                     u1335 0EC2                       u1271 0E88                       u2207 0E5E  
                     u1511 07A6                       u1431 0CD2                       u1280 0E94  
                     u1360 0D33                       u1600 0077                       u1440 0C51  
                     u1281 0E93                       u2217 0C8F                       u1361 0D32  
                     u1601 0076                       u1441 0C50                       u1290 0E9F  
                     u1610 008E                       u1530 07B8                       u1450 075A  
                     u1291 0E9E                       u1611 008D                       u1531 07B7  
                     u1451 0759                       u1380 0D47                       u1620 0093  
                     u1540 07BD                       u1460 0771                       u1381 0D46  
                     u1621 0092                       u1541 07BC                       u1525 07AA  
                     u1390 0CDC                       u1550 0040                       u1470 0787  
                     u1391 0CDB                       u1375 0D3A                       u1711 01E1  
                     u1631 00E4                       u1551 003F                       u1471 0786  
                     u1800 02CB                       u1712 01E8                       u1632 00EB  
                     u1560 0046                       u1480 078E                       u2177 0CAC  
                     u1801 02CA                       u1721 020E                       u1713 01EF  
                     u1705 01BB                       u1641 0100                       u1633 00F2  
                     u1561 0045                       u1481 078D                       u1465 076C  
                     u1722 0215                       u1642 0107                       u1570 004B  
                     u2187 0E3F                       u1731 023B                       u1723 021C  
                     u1651 012C                       u1643 010E                       u1571 004A  
                     u1900 035D                       u1820 02DF                       u1740 0265  
                     u1732 0242                       u1652 0133                       u1580 006C  
                     u2197 0E4E                       u1901 035C                       u1821 02DE  
                     u1733 0249                       u1661 0148                       u1653 013A  
                     u1581 006B                       u1910 037B                       u1830 02E4  
                     u1662 014F                       u1590 0072                       u1911 037A  
                     u1831 02E3                       u1815 02CE                       u1751 0271  
                     u1663 0156                       u1591 0071                       u1495 0790  
                     u1840 02F8                       u1760 028D                       u1752 0278  
                     u1920 0699                       u1905 0359                       u1841 02F7  
                     u1753 027F                       u1745 0260                       u1681 017E  
                     u1921 0698                       u1850 02FF                       u1682 0185  
                     u1930 069D                       u1851 02FE                       u1771 0299  
                     u1691 01AB                       u1683 018C                       u1675 0158  
                     u1931 069C                       u1860 0305                       u1772 02A0  
                     u1692 01B2                       u1940 06BD                       u1861 0304  
                     u1773 02A7                       u1765 0288                       u1693 01B9  
                     u1941 06BC                       u1870 0317                       u1871 0316  
                     u1880 0326                       u1960 06DE                       u1785 02A9  
                     u1961 06DD                       u1890 0343                       u1891 0342  
                     u1795 02C0                       u1955 06D0                       u1980 0700  
                     u1885 0321                       u1981 06FF                       u1895 033F  
                     u1975 06F2                       u1995 0705                       _RCIF 0065  
        enviar_letra@letra 0020                       _TXIF 0064          ?_Lcd_Write_String 0070  
                     _main 0390                       btemp 007E                       start 000E  
       ??_Lcd_Write_String 0024            __end_of_Lcd_Cmd 0C97                      ??_ADC 0072  
                    ??_isr 0076        __size_of_BTD_DECENA 002D              ___fltol@sign1 0051  
                    ?_main 0070            __end_of___awdiv 1000                      _BRG16 0C3B  
          __end_of___awmod 0EDD            __end_of___flmul 0390            __end_of___fltol 07C9  
                    _ANSEL 0188            ___awdiv@divisor 0020        __size_of_BTD_UNIDAD 002D  
                    i1l113 0F8E                      i1l106 0F7E                      i1l135 0C7D  
          ___awdiv@counter 0025                      _VCFG0 04FC                      _VCFG1 04FD  
                    _RCREG 001A                      _TMR1H 000F                      _TMR1L 000E  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019           BTD_UNIDAD@valor2 0027  
                    _dato1 005B                      _dato2 0059                      _dato3 0057  
                    _setup 0DE2                      _print 0CB3                      pclath 000A  
                    status 0003                      wtemp0 007E              ?_enviar_letra 0070  
         __end_of_Lcd_Init 0E82           __end_of_Lcd_Port 0DE2            __initialization 0011  
             __end_of_main 0691                     ??_main 0053                  ADC@salida 0074  
                   _ADRESH 001E           ___awdiv@dividend 0022                     ?_setup 0070  
                   ?_print 0070                     _ANSELH 0189                     i1l2152 0F38  
                   i1l2170 0F6B                     i1l2162 0F48                     i1l2154 0F3E  
                   i1l2180 0F87                     i1l2340 0F76                     i1l2164 0F57  
                   i1l2156 0F42                     i1l2182 0F89                     i1l2166 0F5B  
                   i1l2158 0F43                     i1l2184 0F8D                     i1l2168 0F5D  
                   i1l2176 0F6E                     i1l2178 0F82                     i1l1740 0C79  
                   i1l1736 0C67                     i1l1738 0C72                     u206_20 0F3E  
                   u206_21 0F3D                     u207_20 0F47                     u207_21 0F46  
                   u208_20 0F82                     u208_21 0F81                     u209_20 0F87  
                   u209_21 0F86                  ??_Lcd_Cmd 0021             ??_enviar_letra 0020  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 001C          BTD_DECENA@salida1 002D  
        BTD_UNIDAD@salida2 002B           __end_of___xxtofl 074D                  ??___awdiv 0024  
                ??___awmod 0024                  ??___flmul 0036                  ??___fltol 004C  
         ___awdiv@quotient 0027            ___awmod@divisor 0020              _ADRESH_CANAL1 005F  
            _ADRESH_CANAL2 005D            ___awmod@counter 0025         __size_of__Umul8_16 0029  
                   saved_w 007E               ??_BTD_DECENA 002B            Lcd_Set_Cursor@a 0025  
          Lcd_Set_Cursor@b 0023               ___xxtofl@arg 002A               ___xxtofl@exp 0029  
             ___xxtofl@val 0020               ??_BTD_UNIDAD 0029    __end_of__initialization 002B  
               ___fltol@f1 0048             __pcstackCOMMON 0070               __pidataBANK1 07C9  
            __end_of_setup 0E2D              __end_of_print 0CD4         __end_of_BTD_DECENA 0D79  
           _Lcd_Set_Cursor 0CD4         __end_of_BTD_UNIDAD 0DA6                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 ADC@channel 0070                    ??_setup 0020  
                  ??_print 0020                 __pbssBANK0 0057                 __pnvCOMMON 007B  
        __end_of__Umul8_16 0D4C                 __pmaintext 0390                 __pintentry 0004  
__size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 0CFA       __end_of_enviar_letra 0C54  
                ?___xxtofl 0020                 ??_Lcd_Init 0023                 ??_Lcd_Port 0020  
               __stringtab 0800             _Lcd_Write_Char 0C97                    _Lcd_Cmd 0C7E  
                  _Entrada 0061                    ___awdiv 0F97                    ___awmod 0E82  
                  ___flmul 002F                    ___fltol 074D            ?_Lcd_Set_Cursor 0023  
                  __ptext1 0DE2                    __ptext2 0CB3                    __ptext3 0EDD  
                  __ptext4 0C4A                    __ptext5 0691                    __ptext6 074D  
                  __ptext7 002F                    __ptext8 0D23                    __ptext9 0CFA  
             __size_of_ADC 0017                  _T1CONbits 0010               __size_of_isr 005F  
               ??___xxtofl 0024                 _int_string 0EDD           ___awmod@dividend 0022  
   __end_of_Lcd_Write_Char 0CB3       end_of_initialization 002B                  _RCSTAbits 0018  
                Lcd_Port@a 0020              ___xxtofl@sign 0028            ?_Lcd_Write_Char 0070  
          int_string@valor 002F          Lcd_Write_String@a 0026          Lcd_Write_String@i 0024  
              ___flmul@grs 003C                  _TXSTAbits 0098      __size_of_enviar_letra 000A  
         _Lcd_Write_String 0CFA               _mandar_datos 007C                ?_int_string 002F  
      start_initialization 0011                __end_of_ADC 0C7E                __end_of_isr 0F97  
        __size_of_Lcd_Init 0055          __size_of_Lcd_Port 003C               _enviar_letra 0C4A  
         BTD_DECENA@valor1 0029                 init_fetch0 0C54                  __Umul8_16 0D23  
              __pdataBANK1 00A0            Lcd_Write_Char@a 0022            Lcd_Write_Char@y 0023  
                ___flmul@a 0032                  ___flmul@b 002E                __pbssCOMMON 007C  
                ___latbits 0002              __pcstackBANK0 0020          __size_of___xxtofl 00BC  
                 ?_Lcd_Cmd 0070        __size_of_int_string 005B           ??_Lcd_Set_Cursor 0024  
                 ?___awdiv 0020                   ?___awmod 0020                   ?___flmul 002E  
                 ?___fltol 0048                 ?__Umul8_16 0020                  __pstrings 0800  
           __size_of_setup 004B             __size_of_print 0021          interrupt_function 0004  
                 _PIE1bits 008C                   Lcd_Cmd@a 0022                   _PIR1bits 000C  
               _ADCON0bits 001F                __stringbase 0805                 _ADCON1bits 009F  
                 _Banderas 007B           ??_Lcd_Write_Char 0021                   _Lcd_Init 0E2D  
                 _Lcd_Port 0DA6        BTD_DECENA@temporal1 002B        BTD_UNIDAD@temporal2 0029  
 __end_of_Lcd_Write_String 0D23           __size_of_Lcd_Cmd 0019                ??__Umul8_16 0022  
         __size_of___awdiv 0069           __size_of___awmod 005B           __size_of___flmul 0361  
         __size_of___fltol 007C         __end_of__stringtab 0806               ??_int_string 0031  
                 ___xxtofl 0691                   __ptext10 0C97                   __ptext11 0CD4  
                 __ptext20 0C67                   __ptext12 0E2D                   __ptext13 0C7E  
                 __ptext14 0DA6                   __ptext15 0D79                   __ptext16 0D4C  
                 __ptext17 0E82                   __ptext18 0F97                   __ptext19 0F38  
               _BTD_DECENA 0D4C                 _BTD_UNIDAD 0D79              __size_of_main 0301  
         BCD_DISPLAY@F1449 00C0         __end_of_int_string 0F38                 _INTCONbits 000B  
                 init_ram0 0C58                   intlevel1 0000                  stringcode 0800  
               _OSCCONbits 008F           BCH_DISPLAY@F1449 00A0         Lcd_Set_Cursor@temp 0026  
   __Umul8_16@multiplicand 0020                   stringdir 0800                   stringtab 0800  
              ?_BTD_DECENA 0029                ?_BTD_UNIDAD 0027       __Umul8_16@multiplier 0028  
        __Umul8_16@product 0024  
