

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 13 23:43:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	idataBANK0
   209  0157                     __pidataBANK0:
   210                           
   211                           ;initializer for _contadordecada
   212  0157  3400               	retlw	0
   213  0158  3400               	retlw	0
   214  0159  3401               	retlw	1
   215  015A  3400               	retlw	0
   216  015B  3402               	retlw	2
   217  015C  3400               	retlw	0
   218  015D  3404               	retlw	4
   219  015E  3400               	retlw	0
   220  015F  3408               	retlw	8
   221  0160  3400               	retlw	0
   222  0161  3410               	retlw	16
   223  0162  3400               	retlw	0
   224  0163  3420               	retlw	32
   225  0164  3400               	retlw	0
   226  0165  3440               	retlw	64
   227  0166  3400               	retlw	0
   228  0167  3480               	retlw	128
   229  0168  3400               	retlw	0
   230  0169  3400               	retlw	0
   231  016A  3400               	retlw	0
   232                           
   233                           ;initializer for _display
   234  016B  343F               	retlw	63
   235  016C  3400               	retlw	0
   236  016D  3406               	retlw	6
   237  016E  3400               	retlw	0
   238  016F  345B               	retlw	91
   239  0170  3400               	retlw	0
   240  0171  344F               	retlw	79
   241  0172  3400               	retlw	0
   242  0173  3466               	retlw	102
   243  0174  3400               	retlw	0
   244  0175  346D               	retlw	109
   245  0176  3400               	retlw	0
   246  0177  347D               	retlw	125
   247  0178  3400               	retlw	0
   248  0179  3478               	retlw	120
   249  017A  3400               	retlw	0
   250  017B  347F               	retlw	127
   251  017C  3400               	retlw	0
   252  017D  3467               	retlw	103
   253  017E  3400               	retlw	0
   254  000B                     _INTCONbits	set	11
   255  0006                     _PORTB	set	6
   256  0008                     _PORTD	set	8
   257  0005                     _PORTA	set	5
   258  0007                     _PORTC	set	7
   259  0001                     _TMR0	set	1
   260  0006                     _PORTBbits	set	6
   261  005A                     _T0IF	set	90
   262  0058                     _RBIF	set	88
   263  0095                     _WPUB	set	149
   264  0096                     _IOCB	set	150
   265  0081                     _OPTION_REGbits	set	129
   266  0088                     _TRISD	set	136
   267  0086                     _TRISB	set	134
   268  0087                     _TRISC	set	135
   269  0085                     _TRISA	set	133
   270  008F                     _OSCCONbits	set	143
   271  0189                     _ANSELH	set	393
   272  0188                     _ANSEL	set	392
   273                           
   274                           	psect	cinit
   275  000F                     start_initialization:	
   276                           ; #config settings
   277                           
   278  000F                     __initialization:
   279                           
   280                           ; Initialize objects allocated to BANK0
   281  000F  1383               	bcf	3,7	;select IRP bank0
   282  0010  3048               	movlw	low (__pdataBANK0+40)
   283  0011  00FD               	movwf	btemp+-1
   284  0012  3001               	movlw	high __pidataBANK0
   285  0013  00FE               	movwf	btemp
   286  0014  3057               	movlw	low __pidataBANK0
   287  0015  00FF               	movwf	btemp+1
   288  0016  3020               	movlw	low __pdataBANK0
   289  0017  0084               	movwf	4
   290  0018  120A  118A  2183  120A  118A  	fcall	init_ram0
   291                           
   292                           ; Clear objects allocated to COMMON
   293  001D  01F0               	clrf	__pbssCOMMON& (0+127)
   294  001E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   295  001F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   296  0020  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   297  0021  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   298  0022  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   299  0023  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   300  0024  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   301  0025                     end_of_initialization:	
   302                           ;End of C runtime variable initialization code
   303                           
   304  0025                     __end_of__initialization:
   305  0025  0183               	clrf	3
   306  0026  120A  118A  2829   	ljmp	_main	;jump to C main() function
   307                           
   308                           	psect	bssCOMMON
   309  0070                     __pbssCOMMON:
   310  0070                     _BANDERASTART:
   311  0070                     	ds	1
   312  0071                     _SALIDA:
   313  0071                     	ds	1
   314  0072                     _GANADAS2:
   315  0072                     	ds	1
   316  0073                     _GANADAS1:
   317  0073                     	ds	1
   318  0074                     _BANDERA1:
   319  0074                     	ds	1
   320  0075                     _JUGADOR2:
   321  0075                     	ds	1
   322  0076                     _JUGADOR1:
   323  0076                     	ds	1
   324  0077                     _DISPLAY:
   325  0077                     	ds	1
   326                           
   327                           	psect	dataBANK0
   328  0020                     __pdataBANK0:
   329  0020                     _contadordecada:
   330  0020                     	ds	20
   331  0034                     _display:
   332  0034                     	ds	20
   333                           
   334                           	psect	inittext
   335  017F                     init_fetch0:	
   336                           ;	Called with low address in FSR and high address in W
   337                           
   338  017F  087E               	movf	btemp,w
   339  0180  008A               	movwf	10
   340  0181  087F               	movf	btemp+1,w
   341  0182  0082               	movwf	2
   342  0183                     init_ram0:	
   343                           ;Called with:
   344                           ;	high address of idata address in btemp 
   345                           ;	low address of idata address in btemp+1 
   346                           ;	low address of data in FSR
   347                           ;	high address + 1 of data in btemp-1
   348                           
   349  0183  120A  118A  217F  120A  118A  	fcall	init_fetch0
   350  0188  0080               	movwf	0
   351  0189  0A84               	incf	4,f
   352  018A  0804               	movf	4,w
   353  018B  067D               	xorwf	btemp+-1,w
   354  018C  1903               	btfsc	3,2
   355  018D  3400               	retlw	0
   356  018E  0AFF               	incf	btemp+1,f
   357  018F  1903               	btfsc	3,2
   358  0190  0AFE               	incf	btemp,f
   359  0191  2983               	goto	init_ram0
   360                           
   361                           	psect	cstackCOMMON
   362  0078                     __pcstackCOMMON:
   363  0078                     ?_setup:
   364  0078                     ?_isr:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0078                     ??_isr:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0078                     ?_main:	
   371                           ; 1 bytes @ 0x0
   372                           
   373                           
   374                           ; 1 bytes @ 0x0
   375  0078                     	ds	3
   376  007B                     ??_setup:
   377  007B                     ??_main:	
   378                           ; 1 bytes @ 0x3
   379                           
   380                           
   381                           ; 1 bytes @ 0x3
   382  007B                     	ds	2
   383                           
   384                           	psect	maintext
   385  0029                     __pmaintext:	
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 81 in file "MAIN.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : B00/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0
   407 ;;      Temps:          2       0       0       0       0
   408 ;;      Totals:         2       0       0       0       0
   409 ;;Total ram usage:        2 bytes
   410 ;; Hardware stack levels required when called:    2
   411 ;; This function calls:
   412 ;;		_setup
   413 ;; This function is called by:
   414 ;;		Startup code after reset
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           
   419                           ;psect for function _main
   420  0029                     _main:
   421  0029                     l783:	
   422                           ;incstack = 0
   423                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   424                           
   425                           
   426                           ;MAIN.c: 83: setup();
   427  0029  120A  118A  212A  120A  118A  	fcall	_setup
   428  002E                     l785:
   429                           
   430                           ;MAIN.c: 85: BANDERA1 = 0;
   431  002E  01F4               	clrf	_BANDERA1
   432  002F                     l787:
   433                           
   434                           ;MAIN.c: 86: BANDERASTART = 0;
   435  002F  01F0               	clrf	_BANDERASTART
   436  0030                     l789:
   437                           
   438                           ;MAIN.c: 87: SALIDA = 0;
   439  0030  01F1               	clrf	_SALIDA
   440  0031                     l791:
   441                           
   442                           ;MAIN.c: 88: JUGADOR1= 0;
   443  0031  01F6               	clrf	_JUGADOR1
   444  0032                     l793:
   445                           
   446                           ;MAIN.c: 89: JUGADOR2 = 0;
   447  0032  01F5               	clrf	_JUGADOR2
   448  0033                     l795:
   449                           
   450                           ;MAIN.c: 90: DISPLAY = 0;
   451  0033  01F7               	clrf	_DISPLAY
   452  0034                     l797:
   453                           
   454                           ;MAIN.c: 91: GANADAS1= 0;
   455  0034  01F3               	clrf	_GANADAS1
   456  0035                     l799:
   457                           
   458                           ;MAIN.c: 92: GANADAS2= 0;
   459  0035  01F2               	clrf	_GANADAS2
   460  0036                     l801:
   461                           
   462                           ;MAIN.c: 93: PORTC = display[0];
   463  0036  1283               	bcf	3,5	;RP0=0, select bank0
   464  0037  1303               	bcf	3,6	;RP1=0, select bank0
   465  0038  0834               	movf	_display,w
   466  0039  0087               	movwf	7	;volatile
   467  003A                     l803:
   468                           
   469                           ;MAIN.c: 95: {;MAIN.c: 97:     PORTA = contadordecada[JUGADOR1];
   470  003A  0876               	movf	_JUGADOR1,w
   471  003B  00FB               	movwf	??_main
   472  003C  077B               	addwf	??_main,w
   473  003D  3E20               	addlw	(low (_contadordecada| 0))& (0+255)
   474  003E  0084               	movwf	4
   475  003F  1383               	bcf	3,7	;select IRP bank0
   476  0040  0800               	movf	0,w
   477  0041  0085               	movwf	5	;volatile
   478  0042                     l805:
   479                           
   480                           ;MAIN.c: 98:     PORTD = contadordecada[JUGADOR2];
   481  0042  0875               	movf	_JUGADOR2,w
   482  0043  00FB               	movwf	??_main
   483  0044  077B               	addwf	??_main,w
   484  0045  3E20               	addlw	(low (_contadordecada| 0))& (0+255)
   485  0046  0084               	movwf	4
   486  0047  0800               	movf	0,w
   487  0048  0088               	movwf	8	;volatile
   488  0049                     l807:
   489                           
   490                           ;MAIN.c: 99:     PORTC = display[SALIDA];
   491  0049  0871               	movf	_SALIDA,w
   492  004A  00FB               	movwf	??_main
   493  004B  077B               	addwf	??_main,w
   494  004C  3E34               	addlw	(low (_display| 0))& (0+255)
   495  004D  0084               	movwf	4
   496  004E  0800               	movf	0,w
   497  004F  0087               	movwf	7	;volatile
   498  0050                     l809:
   499                           
   500                           ;MAIN.c: 100:     if (SALIDA < 6 && SALIDA > 2){
   501  0050  3006               	movlw	6
   502  0051  0271               	subwf	_SALIDA,w
   503  0052  1803               	skipnc
   504  0053  2855               	goto	u121
   505  0054  2856               	goto	u120
   506  0055                     u121:
   507  0055  2860               	goto	l815
   508  0056                     u120:
   509  0056                     l811:
   510  0056  3003               	movlw	3
   511  0057  0271               	subwf	_SALIDA,w
   512  0058  1C03               	skipc
   513  0059  285B               	goto	u131
   514  005A  285C               	goto	u130
   515  005B                     u131:
   516  005B  2860               	goto	l815
   517  005C                     u130:
   518  005C                     l813:
   519                           
   520                           ;MAIN.c: 101:         PORTBbits.RB3=1;
   521  005C  1586               	bsf	6,3	;volatile
   522                           
   523                           ;MAIN.c: 102:         PORTBbits.RB4=0;
   524  005D  1206               	bcf	6,4	;volatile
   525                           
   526                           ;MAIN.c: 103:         PORTBbits.RB5=0;
   527  005E  1286               	bcf	6,5	;volatile
   528                           
   529                           ;MAIN.c: 104:     }else if (SALIDA < 3 && SALIDA > 1){
   530  005F  287D               	goto	l827
   531  0060                     l815:
   532  0060  3003               	movlw	3
   533  0061  0271               	subwf	_SALIDA,w
   534  0062  1803               	skipnc
   535  0063  2865               	goto	u141
   536  0064  2866               	goto	u140
   537  0065                     u141:
   538  0065  2870               	goto	l821
   539  0066                     u140:
   540  0066                     l817:
   541  0066  3002               	movlw	2
   542  0067  0271               	subwf	_SALIDA,w
   543  0068  1C03               	skipc
   544  0069  286B               	goto	u151
   545  006A  286C               	goto	u150
   546  006B                     u151:
   547  006B  2870               	goto	l821
   548  006C                     u150:
   549  006C                     l819:
   550                           
   551                           ;MAIN.c: 105:         PORTBbits.RB3=0;
   552  006C  1186               	bcf	6,3	;volatile
   553                           
   554                           ;MAIN.c: 106:         PORTBbits.RB4=1;
   555  006D  1606               	bsf	6,4	;volatile
   556                           
   557                           ;MAIN.c: 107:         PORTBbits.RB5=0;
   558  006E  1286               	bcf	6,5	;volatile
   559                           
   560                           ;MAIN.c: 108:     }else if (SALIDA == 0 && BANDERASTART == 1){
   561  006F  287D               	goto	l827
   562  0070                     l821:
   563  0070  0871               	movf	_SALIDA,w
   564  0071  1D03               	btfss	3,2
   565  0072  2874               	goto	u161
   566  0073  2875               	goto	u160
   567  0074                     u161:
   568  0074  287D               	goto	l827
   569  0075                     u160:
   570  0075                     l823:
   571  0075  0370               	decf	_BANDERASTART,w
   572  0076  1D03               	btfss	3,2
   573  0077  2879               	goto	u171
   574  0078  287A               	goto	u170
   575  0079                     u171:
   576  0079  287D               	goto	l827
   577  007A                     u170:
   578  007A                     l825:
   579                           
   580                           ;MAIN.c: 109:         PORTBbits.RB3=0;
   581  007A  1186               	bcf	6,3	;volatile
   582                           
   583                           ;MAIN.c: 110:         PORTBbits.RB4=0;
   584  007B  1206               	bcf	6,4	;volatile
   585                           
   586                           ;MAIN.c: 111:         PORTBbits.RB5=1;
   587  007C  1686               	bsf	6,5	;volatile
   588  007D                     l827:
   589                           
   590                           ;MAIN.c: 113:     if (JUGADOR1 == 8 || JUGADOR2 == 8 && BANDERA1 == 1){
   591  007D  3008               	movlw	8
   592  007E  0676               	xorwf	_JUGADOR1,w
   593  007F  1903               	btfsc	3,2
   594  0080  2882               	goto	u181
   595  0081  2883               	goto	u180
   596  0082                     u181:
   597  0082  288E               	goto	l833
   598  0083                     u180:
   599  0083                     l829:
   600  0083  3008               	movlw	8
   601  0084  0675               	xorwf	_JUGADOR2,w
   602  0085  1D03               	btfss	3,2
   603  0086  2888               	goto	u191
   604  0087  2889               	goto	u190
   605  0088                     u191:
   606  0088  283A               	goto	l803
   607  0089                     u190:
   608  0089                     l831:
   609  0089  0374               	decf	_BANDERA1,w
   610  008A  1D03               	btfss	3,2
   611  008B  288D               	goto	u201
   612  008C  288E               	goto	u200
   613  008D                     u201:
   614  008D  283A               	goto	l803
   615  008E                     u200:
   616  008E                     l833:
   617                           
   618                           ;MAIN.c: 114:         if (JUGADOR1 > JUGADOR2){
   619  008E  0876               	movf	_JUGADOR1,w
   620  008F  0275               	subwf	_JUGADOR2,w
   621  0090  1803               	skipnc
   622  0091  2893               	goto	u211
   623  0092  2894               	goto	u210
   624  0093                     u211:
   625  0093  28AF               	goto	l849
   626  0094                     u210:
   627  0094                     l835:
   628                           
   629                           ;MAIN.c: 115:         GANADAS1++;
   630  0094  3001               	movlw	1
   631  0095  00FB               	movwf	??_main
   632  0096  087B               	movf	??_main,w
   633  0097  07F3               	addwf	_GANADAS1,f
   634  0098                     l837:
   635                           
   636                           ;MAIN.c: 116:         PORTC = display[GANADAS1];
   637  0098  0873               	movf	_GANADAS1,w
   638  0099  00FB               	movwf	??_main
   639  009A  077B               	addwf	??_main,w
   640  009B  3E34               	addlw	(low (_display| 0))& (0+255)
   641  009C  0084               	movwf	4
   642  009D  0800               	movf	0,w
   643  009E  0087               	movwf	7	;volatile
   644  009F                     l839:
   645                           
   646                           ;MAIN.c: 117:         PORTBbits.RB6 = 1;
   647  009F  1706               	bsf	6,6	;volatile
   648  00A0                     l841:
   649                           
   650                           ;MAIN.c: 118:         _delay((unsigned long)((3000)*(125000/4000.0)));
   651  00A0  307A               	movlw	122
   652  00A1  00FC               	movwf	??_main+1
   653  00A2  30BF               	movlw	191
   654  00A3  00FB               	movwf	??_main
   655  00A4                     u237:
   656  00A4  0BFB               	decfsz	??_main,f
   657  00A5  28A4               	goto	u237
   658  00A6  0BFC               	decfsz	??_main+1,f
   659  00A7  28A4               	goto	u237
   660  00A8  28A9               	nop2
   661  00A9                     l843:
   662                           
   663                           ;MAIN.c: 119:         JUGADOR1 = 0;
   664  00A9  01F6               	clrf	_JUGADOR1
   665  00AA                     l845:
   666                           
   667                           ;MAIN.c: 120:         JUGADOR2 = 0;
   668  00AA  01F5               	clrf	_JUGADOR2
   669  00AB                     l847:
   670                           
   671                           ;MAIN.c: 121:         PORTBbits.RB6 = 0;
   672  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   673  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   674  00AD  1306               	bcf	6,6	;volatile
   675                           
   676                           ;MAIN.c: 122:         }else if (JUGADOR2 > JUGADOR1){
   677  00AE  28CF               	goto	l865
   678  00AF                     l849:
   679  00AF  0875               	movf	_JUGADOR2,w
   680  00B0  0276               	subwf	_JUGADOR1,w
   681  00B1  1803               	skipnc
   682  00B2  28B4               	goto	u221
   683  00B3  28B5               	goto	u220
   684  00B4                     u221:
   685  00B4  28CF               	goto	l865
   686  00B5                     u220:
   687  00B5                     l851:
   688                           
   689                           ;MAIN.c: 123:         GANADAS2++;
   690  00B5  3001               	movlw	1
   691  00B6  00FB               	movwf	??_main
   692  00B7  087B               	movf	??_main,w
   693  00B8  07F2               	addwf	_GANADAS2,f
   694  00B9                     l853:
   695                           
   696                           ;MAIN.c: 124:         PORTC = display[GANADAS2];
   697  00B9  0872               	movf	_GANADAS2,w
   698  00BA  00FB               	movwf	??_main
   699  00BB  077B               	addwf	??_main,w
   700  00BC  3E34               	addlw	(low (_display| 0))& (0+255)
   701  00BD  0084               	movwf	4
   702  00BE  0800               	movf	0,w
   703  00BF  0087               	movwf	7	;volatile
   704  00C0                     l855:
   705                           
   706                           ;MAIN.c: 125:         PORTBbits.RB7 = 1;
   707  00C0  1786               	bsf	6,7	;volatile
   708  00C1                     l857:
   709                           
   710                           ;MAIN.c: 126:         _delay((unsigned long)((3000)*(125000/4000.0)));
   711  00C1  307A               	movlw	122
   712  00C2  00FC               	movwf	??_main+1
   713  00C3  30BF               	movlw	191
   714  00C4  00FB               	movwf	??_main
   715  00C5                     u247:
   716  00C5  0BFB               	decfsz	??_main,f
   717  00C6  28C5               	goto	u247
   718  00C7  0BFC               	decfsz	??_main+1,f
   719  00C8  28C5               	goto	u247
   720  00C9  28CA               	nop2
   721  00CA                     l859:
   722                           
   723                           ;MAIN.c: 127:         JUGADOR1 = 0;
   724  00CA  01F6               	clrf	_JUGADOR1
   725  00CB                     l861:
   726                           
   727                           ;MAIN.c: 128:         JUGADOR2 = 0;
   728  00CB  01F5               	clrf	_JUGADOR2
   729  00CC                     l863:
   730                           
   731                           ;MAIN.c: 129:         PORTBbits.RB7 = 0;
   732  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   733  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   734  00CE  1386               	bcf	6,7	;volatile
   735  00CF                     l865:
   736                           
   737                           ;MAIN.c: 132:         BANDERA1 = 0;
   738  00CF  01F4               	clrf	_BANDERA1
   739  00D0  283A               	goto	l803
   740  00D1  120A  118A  280C   	ljmp	start
   741  00D4                     __end_of_main:
   742                           
   743                           	psect	text1
   744  012A                     __ptext1:	
   745 ;; *************** function _setup *****************
   746 ;; Defined at:
   747 ;;		line 137 in file "MAIN.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0
   764 ;;      Totals:         0       0       0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function _setup
   777  012A                     _setup:
   778  012A                     l691:	
   779                           ;incstack = 0
   780                           ; Regs used in _setup: [wreg+status,2]
   781                           
   782                           
   783                           ;MAIN.c: 140:     OSCCONbits.SCS = 1;
   784  012A  1683               	bsf	3,5	;RP0=1, select bank1
   785  012B  1303               	bcf	3,6	;RP1=0, select bank1
   786  012C  140F               	bsf	15,0	;volatile
   787                           
   788                           ;MAIN.c: 141:     OSCCONbits.IRCF2 = 0;
   789  012D  130F               	bcf	15,6	;volatile
   790                           
   791                           ;MAIN.c: 142:     OSCCONbits.IRCF1 = 0;
   792  012E  128F               	bcf	15,5	;volatile
   793                           
   794                           ;MAIN.c: 143:     OSCCONbits.IRCF0 = 1;
   795  012F  160F               	bsf	15,4	;volatile
   796  0130                     l693:
   797                           
   798                           ;MAIN.c: 148:     PORTB = 0X07;
   799  0130  3007               	movlw	7
   800  0131  1283               	bcf	3,5	;RP0=0, select bank0
   801  0132  1303               	bcf	3,6	;RP1=0, select bank0
   802  0133  0086               	movwf	6	;volatile
   803  0134                     l695:
   804                           
   805                           ;MAIN.c: 149:     PORTC = 0X00;
   806  0134  0187               	clrf	7	;volatile
   807  0135                     l697:
   808                           
   809                           ;MAIN.c: 150:     PORTD = 0X00;
   810  0135  0188               	clrf	8	;volatile
   811  0136                     l699:
   812                           
   813                           ;MAIN.c: 151:     PORTA = 0X00;
   814  0136  0185               	clrf	5	;volatile
   815  0137                     l701:
   816                           
   817                           ;MAIN.c: 153:     ANSEL = 0X00;
   818  0137  1683               	bsf	3,5	;RP0=1, select bank3
   819  0138  1703               	bsf	3,6	;RP1=1, select bank3
   820  0139  0188               	clrf	8	;volatile
   821  013A                     l703:
   822                           
   823                           ;MAIN.c: 154:     ANSELH = 0X00;
   824  013A  0189               	clrf	9	;volatile
   825  013B                     l705:
   826                           
   827                           ;MAIN.c: 155:     TRISA = 0X00;
   828  013B  1683               	bsf	3,5	;RP0=1, select bank1
   829  013C  1303               	bcf	3,6	;RP1=0, select bank1
   830  013D  0185               	clrf	5	;volatile
   831  013E                     l707:
   832                           
   833                           ;MAIN.c: 156:     TRISC = 0X00;
   834  013E  0187               	clrf	7	;volatile
   835  013F                     l709:
   836                           
   837                           ;MAIN.c: 157:     TRISB = 0X07;
   838  013F  3007               	movlw	7
   839  0140  0086               	movwf	6	;volatile
   840                           
   841                           ;MAIN.c: 158:     TRISD= 0X00;
   842  0141  0188               	clrf	8	;volatile
   843  0142                     l711:
   844                           
   845                           ;MAIN.c: 161:     OPTION_REGbits.nRBPU = 0;
   846  0142  1381               	bcf	1,7	;volatile
   847  0143                     l713:
   848                           
   849                           ;MAIN.c: 162:     IOCB = 0X07;
   850  0143  3007               	movlw	7
   851  0144  0096               	movwf	22	;volatile
   852  0145                     l715:
   853                           
   854                           ;MAIN.c: 165:     WPUB = 0X07;
   855  0145  3007               	movlw	7
   856  0146  0095               	movwf	21	;volatile
   857  0147                     l717:
   858                           
   859                           ;MAIN.c: 168:     OPTION_REGbits.T0CS = 0;
   860  0147  1281               	bcf	1,5	;volatile
   861  0148                     l719:
   862                           
   863                           ;MAIN.c: 170:     OPTION_REGbits.PSA = 0;
   864  0148  1181               	bcf	1,3	;volatile
   865  0149                     l721:
   866                           
   867                           ;MAIN.c: 171:     OPTION_REGbits.PS2 = 1;
   868  0149  1501               	bsf	1,2	;volatile
   869  014A                     l723:
   870                           
   871                           ;MAIN.c: 172:     OPTION_REGbits.PS1 = 1;
   872  014A  1481               	bsf	1,1	;volatile
   873  014B                     l725:
   874                           
   875                           ;MAIN.c: 173:     OPTION_REGbits.PS0 = 1;
   876  014B  1401               	bsf	1,0	;volatile
   877  014C                     l727:
   878                           
   879                           ;MAIN.c: 174:     TMR0 = 133;
   880  014C  3085               	movlw	133
   881  014D  1283               	bcf	3,5	;RP0=0, select bank0
   882  014E  1303               	bcf	3,6	;RP1=0, select bank0
   883  014F  0081               	movwf	1	;volatile
   884  0150                     l729:
   885                           
   886                           ;MAIN.c: 177:     INTCONbits.RBIF = 0;
   887  0150  100B               	bcf	11,0	;volatile
   888  0151                     l731:
   889                           
   890                           ;MAIN.c: 178:     INTCONbits.T0IF = 0;
   891  0151  110B               	bcf	11,2	;volatile
   892  0152                     l733:
   893                           
   894                           ;MAIN.c: 180:     INTCONbits.RBIE = 1;
   895  0152  158B               	bsf	11,3	;volatile
   896  0153                     l735:
   897                           
   898                           ;MAIN.c: 181:     INTCONbits.T0IE = 1;
   899  0153  168B               	bsf	11,5	;volatile
   900  0154                     l737:
   901                           
   902                           ;MAIN.c: 182:     INTCONbits.GIE = 1;
   903  0154  178B               	bsf	11,7	;volatile
   904  0155                     l739:
   905                           
   906                           ;MAIN.c: 183:     INTCONbits.PEIE= 1;
   907  0155  170B               	bsf	11,6	;volatile
   908  0156                     l99:
   909  0156  0008               	return
   910  0157                     __end_of_setup:
   911                           
   912                           	psect	text2
   913  00D4                     __ptext2:	
   914 ;; *************** function _isr *****************
   915 ;; Defined at:
   916 ;;		line 48 in file "MAIN.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0
   932 ;;      Temps:          3       0       0       0       0
   933 ;;      Totals:         3       0       0       0       0
   934 ;;Total ram usage:        3 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		Interrupt level 1
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           
   944                           ;psect for function _isr
   945  00D4                     _isr:
   946  00D4                     i1l741:
   947                           
   948                           ;MAIN.c: 51:     if (RBIF){
   949  00D4  1C0B               	btfss	11,0	;volatile
   950  00D5  28D7               	goto	u1_21
   951  00D6  28D8               	goto	u1_20
   952  00D7                     u1_21:
   953  00D7  28FF               	goto	i1l763
   954  00D8                     u1_20:
   955  00D8                     i1l743:
   956                           
   957                           ;MAIN.c: 52:         if (PORTBbits.RB0 == 0){
   958  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   959  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   960  00DA  1806               	btfsc	6,0	;volatile
   961  00DB  28DD               	goto	u2_21
   962  00DC  28DE               	goto	u2_20
   963  00DD                     u2_21:
   964  00DD  28E4               	goto	i1l749
   965  00DE                     u2_20:
   966  00DE                     i1l745:
   967                           
   968                           ;MAIN.c: 53:             SALIDA = 5;
   969  00DE  3005               	movlw	5
   970  00DF  00F8               	movwf	??_isr
   971  00E0  0878               	movf	??_isr,w
   972  00E1  00F1               	movwf	_SALIDA
   973  00E2                     i1l747:
   974                           
   975                           ;MAIN.c: 54:             BANDERASTART = 1;
   976  00E2  01F0               	clrf	_BANDERASTART
   977  00E3  0AF0               	incf	_BANDERASTART,f
   978  00E4                     i1l749:
   979                           
   980                           ;MAIN.c: 56:         if (PORTBbits.RB1== 0){
   981  00E4  1886               	btfsc	6,1	;volatile
   982  00E5  28E7               	goto	u3_21
   983  00E6  28E8               	goto	u3_20
   984  00E7                     u3_21:
   985  00E7  28F1               	goto	i1l755
   986  00E8                     u3_20:
   987  00E8                     i1l751:
   988                           
   989                           ;MAIN.c: 57:             if (BANDERA1 == 1){
   990  00E8  0374               	decf	_BANDERA1,w
   991  00E9  1D03               	btfss	3,2
   992  00EA  28EC               	goto	u4_21
   993  00EB  28ED               	goto	u4_20
   994  00EC                     u4_21:
   995  00EC  28F1               	goto	i1l755
   996  00ED                     u4_20:
   997  00ED                     i1l753:
   998                           
   999                           ;MAIN.c: 58:               JUGADOR1 ++;
  1000  00ED  3001               	movlw	1
  1001  00EE  00F8               	movwf	??_isr
  1002  00EF  0878               	movf	??_isr,w
  1003  00F0  07F6               	addwf	_JUGADOR1,f
  1004  00F1                     i1l755:
  1005                           
  1006                           ;MAIN.c: 61:         if (PORTBbits.RB2== 0){
  1007  00F1  1906               	btfsc	6,2	;volatile
  1008  00F2  28F4               	goto	u5_21
  1009  00F3  28F5               	goto	u5_20
  1010  00F4                     u5_21:
  1011  00F4  28FE               	goto	i1l761
  1012  00F5                     u5_20:
  1013  00F5                     i1l757:
  1014                           
  1015                           ;MAIN.c: 62:             if (BANDERA1 == 1){
  1016  00F5  0374               	decf	_BANDERA1,w
  1017  00F6  1D03               	btfss	3,2
  1018  00F7  28F9               	goto	u6_21
  1019  00F8  28FA               	goto	u6_20
  1020  00F9                     u6_21:
  1021  00F9  28FE               	goto	i1l761
  1022  00FA                     u6_20:
  1023  00FA                     i1l759:
  1024                           
  1025                           ;MAIN.c: 63:               JUGADOR2 ++;
  1026  00FA  3001               	movlw	1
  1027  00FB  00F8               	movwf	??_isr
  1028  00FC  0878               	movf	??_isr,w
  1029  00FD  07F5               	addwf	_JUGADOR2,f
  1030  00FE                     i1l761:
  1031                           
  1032                           ;MAIN.c: 66:         RBIF = 0;
  1033  00FE  100B               	bcf	11,0	;volatile
  1034  00FF                     i1l763:
  1035                           
  1036                           ;MAIN.c: 68:     if (T0IF ==1){
  1037  00FF  1D0B               	btfss	11,2	;volatile
  1038  0100  2902               	goto	u7_21
  1039  0101  2903               	goto	u7_20
  1040  0102                     u7_21:
  1041  0102  2923               	goto	i1l77
  1042  0103                     u7_20:
  1043  0103                     i1l765:
  1044                           
  1045                           ;MAIN.c: 69:         if(SALIDA < 6 && SALIDA > 0){
  1046  0103  3006               	movlw	6
  1047  0104  0271               	subwf	_SALIDA,w
  1048  0105  1803               	skipnc
  1049  0106  2908               	goto	u8_21
  1050  0107  2909               	goto	u8_20
  1051  0108                     u8_21:
  1052  0108  2911               	goto	i1l771
  1053  0109                     u8_20:
  1054  0109                     i1l767:
  1055  0109  0871               	movf	_SALIDA,w
  1056  010A  1903               	btfsc	3,2
  1057  010B  290D               	goto	u9_21
  1058  010C  290E               	goto	u9_20
  1059  010D                     u9_21:
  1060  010D  2911               	goto	i1l771
  1061  010E                     u9_20:
  1062  010E                     i1l769:
  1063                           
  1064                           ;MAIN.c: 70:             SALIDA --;
  1065  010E  3001               	movlw	1
  1066  010F  02F1               	subwf	_SALIDA,f
  1067                           
  1068                           ;MAIN.c: 71:         }
  1069  0110  291E               	goto	i1l779
  1070  0111                     i1l771:
  1071  0111  0871               	movf	_SALIDA,w
  1072  0112  1D03               	btfss	3,2
  1073  0113  2915               	goto	u10_21
  1074  0114  2916               	goto	u10_20
  1075  0115                     u10_21:
  1076  0115  291E               	goto	i1l779
  1077  0116                     u10_20:
  1078  0116                     i1l773:
  1079  0116  0370               	decf	_BANDERASTART,w
  1080  0117  1D03               	btfss	3,2
  1081  0118  291A               	goto	u11_21
  1082  0119  291B               	goto	u11_20
  1083  011A                     u11_21:
  1084  011A  291E               	goto	i1l779
  1085  011B                     u11_20:
  1086  011B                     i1l775:
  1087                           
  1088                           ;MAIN.c: 73:             BANDERA1 = 1;
  1089  011B  01F4               	clrf	_BANDERA1
  1090  011C  0AF4               	incf	_BANDERA1,f
  1091  011D                     i1l777:
  1092                           
  1093                           ;MAIN.c: 74:             BANDERASTART = 0;
  1094  011D  01F0               	clrf	_BANDERASTART
  1095  011E                     i1l779:
  1096                           
  1097                           ;MAIN.c: 76:         TMR0 = 133;
  1098  011E  3085               	movlw	133
  1099  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0121  0081               	movwf	1	;volatile
  1102  0122                     i1l781:
  1103                           
  1104                           ;MAIN.c: 77:         T0IF = 0;
  1105  0122  110B               	bcf	11,2	;volatile
  1106  0123                     i1l77:
  1107  0123  087A               	movf	??_isr+2,w
  1108  0124  008A               	movwf	10
  1109  0125  0E79               	swapf	??_isr+1,w
  1110  0126  0083               	movwf	3
  1111  0127  0EFE               	swapf	btemp,f
  1112  0128  0E7E               	swapf	btemp,w
  1113  0129  0009               	retfie
  1114  012A                     __end_of_isr:
  1115  007E                     btemp	set	126	;btemp
  1116  007E                     wtemp0	set	126
  1117                           
  1118                           	psect	intentry
  1119  0004                     __pintentry:	
  1120                           ;incstack = 0
  1121                           ; Regs used in _isr: [wreg+status,2+status,0]
  1122                           
  1123  0004                     interrupt_function:
  1124  007E                     saved_w	set	btemp
  1125  0004  00FE               	movwf	btemp
  1126  0005  0E03               	swapf	3,w
  1127  0006  00F9               	movwf	??_isr+1
  1128  0007  080A               	movf	10,w
  1129  0008  00FA               	movwf	??_isr+2
  1130  0009  120A  118A  28D4   	ljmp	_isr
  1131                           
  1132                           	psect	config
  1133                           
  1134                           ;Config register CONFIG1 @ 0x2007
  1135                           ;	Oscillator Selection bits
  1136                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1137                           ;	Watchdog Timer Enable bit
  1138                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1139                           ;	Power-up Timer Enable bit
  1140                           ;	PWRTE = OFF, PWRT disabled
  1141                           ;	RE3/MCLR pin function select bit
  1142                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1143                           ;	Code Protection bit
  1144                           ;	CP = OFF, Program memory code protection is disabled
  1145                           ;	Data Code Protection bit
  1146                           ;	CPD = OFF, Data memory code protection is disabled
  1147                           ;	Brown Out Reset Selection bits
  1148                           ;	BOREN = OFF, BOR disabled
  1149                           ;	Internal External Switchover bit
  1150                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1151                           ;	Fail-Safe Clock Monitor Enabled bit
  1152                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1153                           ;	Low Voltage Programming Enable bit
  1154                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1155                           ;	In-Circuit Debugger Mode bit
  1156                           ;	DEBUG = 0x1, unprogrammed default
  1157  2007                     	org	8199
  1158  2007  30D4               	dw	12500
  1159                           
  1160                           ;Config register CONFIG2 @ 0x2008
  1161                           ;	Brown-out Reset Selection bit
  1162                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1163                           ;	Flash Program Memory Self Write Enable bits
  1164                           ;	WRT = OFF, Write protection off
  1165  2008                     	org	8200
  1166  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        40
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      13
    BANK0            80      0      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMMON     2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      28       5       50.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 13 23:43:56 2021

                      pc 0002                       l99 0156                       fsr 0004  
                    l701 0137                      l711 0142                      l703 013A  
                    l721 0149                      l713 0143                      l705 013B  
                    l801 0036                      l731 0151                      l723 014A  
                    l715 0145                      l707 013E                      l811 0056  
                    l803 003A                      l733 0152                      l725 014B  
                    l717 0147                      l709 013F                      l821 0070  
                    l813 005C                      l805 0042                      l735 0153  
                    l727 014C                      l719 0148                      l831 0089  
                    l823 0075                      l815 0060                      l807 0049  
                    l737 0154                      l729 0150                      l841 00A0  
                    l833 008E                      l825 007A                      l817 0066  
                    l809 0050                      l739 0155                      l691 012A  
                    l851 00B5                      l843 00A9                      l835 0094  
                    l819 006C                      l827 007D                      l693 0130  
                    l861 00CB                      l853 00B9                      l845 00AA  
                    l837 0098                      l829 0083                      l695 0134  
                    l863 00CC                      l855 00C0                      l847 00AB  
                    l839 009F                      l791 0031                      l783 0029  
                    l697 0135                      l857 00C1                      l865 00CF  
                    l849 00AF                      l793 0032                      l785 002E  
                    l699 0136                      l859 00CA                      l795 0033  
                    l787 002F                      l797 0034                      l789 0030  
                    l799 0035                      u200 008E                      u120 0056  
                    u201 008D                      u121 0055                      u210 0094  
                    u130 005C                      u211 0093                      u131 005B  
                    u220 00B5                      u140 0066                      u221 00B4  
                    u141 0065                      u150 006C                      u151 006B  
                    u160 0075                      u161 0074                      u170 007A  
                    u171 0079                      u180 0083                      u237 00A4  
                    u181 0082                      u190 0089                      u247 00C5  
                    u191 0088             _BANDERASTART 0070                      _isr 00D4  
                    fsr0 0004                      indf 0000                     ?_isr 0078  
                   _T0IF 005A                     _IOCB 0096           _contadordecada 0020  
                   _RBIF 0058                     i1l77 0123                     _TMR0 0001  
                   _WPUB 0095                     u1_20 00D8                     u1_21 00D7  
                   u2_20 00DE                     u2_21 00DD                     u3_20 00E8  
                   u3_21 00E7                     u4_20 00ED                     u4_21 00EC  
                   u5_20 00F5                     u5_21 00F4                     u6_20 00FA  
                   u6_21 00F9                     u7_20 0103                     u7_21 0102  
                   u8_20 0109                     u8_21 0108                     u9_20 010E  
                   u9_21 010D                     _main 0029                     btemp 007E  
                   start 000C                    ??_isr 0078                    ?_main 0078  
                  _ANSEL 0188                    i1l741 00D4                    i1l751 00E8  
                  i1l743 00D8                    i1l761 00FE                    i1l753 00ED  
                  i1l745 00DE                    i1l771 0111                    i1l755 00F1  
                  i1l747 00E2                    i1l763 00FF                    i1l781 0122  
                  i1l773 0116                    i1l765 0103                    i1l757 00F5  
                  i1l749 00E4                    i1l775 011B                    i1l767 0109  
                  i1l759 00FA                    i1l777 011D                    i1l769 010E  
                  i1l779 011E                    u10_20 0116                    u10_21 0115  
                  u11_20 011B                    u11_21 011A                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _setup 012A                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00D4                   ??_main 007B                   ?_setup 0078  
                 _ANSELH 0189                   _SALIDA 0071                   saved_w 007E  
__end_of__initialization 0025           __pcstackCOMMON 0078             __pidataBANK0 0157  
          __end_of_setup 0157           _OPTION_REGbits 0081                  ??_setup 007B  
             __pmaintext 0029               __pintentry 0004                  _DISPLAY 0077  
                __ptext1 012A                  __ptext2 00D4                  _display 0034  
           __size_of_isr 0056     end_of_initialization 0025                _PORTBbits 0006  
    start_initialization 000F              __end_of_isr 012A               init_fetch0 017F  
            __pdataBANK0 0020              __pbssCOMMON 0070                ___latbits 0002  
               _BANDERA1 0074                 _GANADAS1 0073                 _GANADAS2 0072  
         __size_of_setup 002D        interrupt_function 0004                 _JUGADOR1 0076  
               _JUGADOR2 0075            __size_of_main 00AB               _INTCONbits 000B  
               init_ram0 0183                 intlevel1 0000               _OSCCONbits 008F  
